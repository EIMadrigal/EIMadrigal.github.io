<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>冷静思考 拒绝盲从</title>
      <link href="/2022/01/08/%E5%86%B7%E9%9D%99%E6%80%9D%E8%80%83%20%E6%8B%92%E7%BB%9D%E7%9B%B2%E4%BB%8E/"/>
      <url>/2022/01/08/%E5%86%B7%E9%9D%99%E6%80%9D%E8%80%83%20%E6%8B%92%E7%BB%9D%E7%9B%B2%E4%BB%8E/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="739c8fec141cfca3e03dfdd9953da73747ebd6989dc0fba5b0cb69bb82178590"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(10)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(10)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(100)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(100)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(101)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(101)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(102)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(102)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(103)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(103)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(104)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(104)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(105)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(105)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(106)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(106)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(107)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(107)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(108)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(108)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(109)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(109)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(11)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(11)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(110)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(110)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(112)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(112)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(111)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(111)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(113)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(113)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(114)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(114)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(115)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(115)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(116)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(116)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(117)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(117)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(118)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(118)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(12)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(12)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(119)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(119)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(120)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(120)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(121)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(121)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(123)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(123)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(122)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(122)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(124)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(124)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(125)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(125)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(126)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(126)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(127)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(127)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(128)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(128)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(129)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(129)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(13)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(13)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(130)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(130)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(131)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(131)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(132)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(132)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(133)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(133)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(134)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(134)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(136)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(136)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(135)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(135)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(137)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(137)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(138)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(138)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(139)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(139)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(14)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(14)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(15)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(15)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(16)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(16)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(17)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(17)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(18)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(18)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(19)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(19)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(2)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(20)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(20)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(21)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(21)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(22)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(22)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(23)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(23)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(24)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(24)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(25)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(25)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(26)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(26)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(27)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(27)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(28)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(28)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(29)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(29)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(3)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(3)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(30)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(30)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(31)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(31)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(32)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(32)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(33)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(33)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(34)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(34)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(35)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(35)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(37)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(37)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(36)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(36)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(38)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(38)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(39)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(39)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(4)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(4)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(41)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(41)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(40)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(40)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(42)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(42)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(43)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(43)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(44)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(44)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(45)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(45)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(46)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(46)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(47)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(47)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(48)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(48)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(49)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(49)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(5)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(5)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(50)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(50)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(51)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(51)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(52)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(52)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(53)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(53)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(54)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(54)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(56)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(56)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(55)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(55)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(57)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(57)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(58)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(58)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(59)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(59)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(6)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(6)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(60)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(60)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(61)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(61)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(62)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(62)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(63)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(63)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(64)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(64)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(65)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(65)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(66)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(66)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(67)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(67)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(68)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(68)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(69)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(69)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(7)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(7)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(70)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(70)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(71)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(71)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(72)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(72)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(73)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(73)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(74)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(74)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(75)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(75)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(76)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(76)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(78)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(78)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(77)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(77)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(79)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(79)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(8)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(8)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(80)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(80)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(81)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(81)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(82)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(82)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(83)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(83)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(84)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(84)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(85)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(85)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(87)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(87)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(86)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(86)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(88)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(88)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(89)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(89)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(90)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(90)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(9)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(9)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(92)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(92)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(91)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(91)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(93)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(93)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(94)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(94)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(95)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(95)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(96)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(96)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(97)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(97)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(98)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(98)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(99)/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC%20(99)/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn/"/>
      <url>/2021/06/03/Learn%20to%20Learn/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn to Learn</title>
      <link href="/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2021/06/03/Learn%20to%20Learn%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>上了十几年学，依然不会学习。不知是因为中学一些糟糕习惯的延续，还是当代知识难度的加深，我总是感受到日常学习的辛苦：身体累、脑子累、心也累。</p><p>刻苦的确是一种很好的品质，但这种品质有些时候未免有些夸大其词了。傻傻地机械地重复在中学时代那种应试环境或许可以带来一些成绩的提升，但是显然已经不适应现在的我。我尝试将每天安排得满满当当，恨不得每一分每一秒都在学习，然而效果却并不如人意。</p><p>除了智力等一些先天因素外，我个人觉得有以下几点问题：</p><ol type="1"><li>没有找到合适的学习方法，缺乏深度思考和知识体系。我总是试图单点单点地掌握未知的知识点，试图掌握每一处细节，甚至使用死记硬背的方式处理核心问题。笔记和博客也多是摘抄型，独立理解实现太少。</li><li>效率低下。尽管学习时长可能足够，但是且不说大多时间都在摸鱼，即使纯粹学习时间也经常犯困，无法专注完成手头的某项任务，总是过于频繁地切换。效率*时长=最终效果自然不会很好。</li><li>单打独斗。周围少有一起交流进步的伙伴，遇到问题只能单向地从互联网获取信息，没法通过讨论等形式取得快速进步。</li></ol><p>最近看了Marty Lobdell的一个演讲Study Less, Study Smart(<a href="https://www.youtube.com/watch?v=IlU-zDU6aQ0">YouTube</a>/<a href="https://www.bilibili.com/video/BV1Pz4y1f7oi">B站</a>)，有些启发，但是如何学习这种事是绝没有普适准则的，只能结合自身实际摸索总结。Marty还写了一本同名的书，内容比演讲稍微细化一些。</p><p>Marty认为比较重要的有：</p><ol type="1"><li>番茄工作法。每学习25~30min应该休息5min，可以听一首音乐、出去上个厕所、吃点喝点、回消息等等，这样再次回来后注意力和效率又会回升到一个较高的水平，而非效率指数级下降的持续长时间学习。完成一天的工作后，对自己进行更丰厚一些的奖励，比如看个电影、吃顿大餐等等，以形成正反馈。</li><li>寻找一个专门的学习地点，书桌是用来学习的，床是用来睡觉的。Intend to learn rather than incidental learn.</li><li>费曼学习法。看完材料后，深加工以后尝试用自己的话复述给别人听，能准确复述或者能把别人讲懂才行。</li><li>对于学习材料要SQ4R(Survey, Question, Read, Record, Recite, Review)，要主动理解思考自己的笔记，产生更加深刻的认识，而非机械地摘抄背诵。</li><li>高质量睡眠、高质量运动。</li></ol><p>结合自身缺点和学科特点，我认为可以有以下改进措施：</p><ol type="1"><li>每学习一个新东西，理解算法流程、数学推导、实现细节等确实重要，但更重要的是领会方法的思想动机，掌握优缺点和应用场景，将其纳入知识体系中，也就是所谓的“解决现实问题的能力”。</li><li>合理安排学习计划，劳逸结合。不要安排得过于紧密，也不要过于松散。制定的目标不能模棱两可，要有可评估性，即某段时间里要扎扎实实做完TODO LIST上的某件事。</li><li>组队学习，提出自己的问题，解答别人的问题。</li><li>累了就休息，不要在低效率状态下学习工作。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>痛撞南墙才回头---高考五年记</title>
      <link href="/2020/06/08/%E7%97%9B%E6%92%9E%E5%8D%97%E5%A2%99%E6%89%8D%E5%9B%9E%E5%A4%B4---%E9%AB%98%E8%80%83%E4%BA%94%E5%B9%B4%E8%AE%B0/"/>
      <url>/2020/06/08/%E7%97%9B%E6%92%9E%E5%8D%97%E5%A2%99%E6%89%8D%E5%9B%9E%E5%A4%B4---%E9%AB%98%E8%80%83%E4%BA%94%E5%B9%B4%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">0 前言</h2><p>距离2015年高考已经过去了整整5年，这段日子埋藏着太多不堪。尽管现如今我已经开始了全新的生活，但仍想把自己曾经的问题和思考展示出来，一来当作对过去的告别，二来也希望这些教训能给境遇类似的人一些启发。</p><p>这篇文章字字血泪、句句属实，我不想熬制鸡汤或者贩卖焦虑。文中的一些想法都是通过亲身经历、思考、与前辈同学交流得到的，可能不太成熟，欢迎大家批评指正。</p><hr />认真去划决定命运的小船，却不知道未来会漂向哪里。<p align="right">——题记</p><h2 id="高中故事">1 高中故事</h2><p>文章题目虽然是高考五年记，但其实主题与高考并没有多大关系，而且上大学以后，我很少主动提起高考这档子事，只是为了故事完整，就从高中时代讲起。</p><p>高中三年是在一所县城高中，高考压力很小，学习也是波澜不惊。我并没有像传说中那么拼命学习，努力程度连初中都不如。相反，我的高中自在安逸，回想起来让人有些后怕。作为典型的“小县城学霸”，由于比较轻松就能考到前几名，所以我将大把大把的课余时间拿去运动，以至于已经主次不分。</p><p>做题总是很无聊，而我不知道是因为骄傲，还是因为懒散，遇到难题总是放弃思考、看看答案了事，看不懂就去睡觉，每天做些简单题（毫无必要）保持自信。事实上，我隐约知道外面有更大的世界，但却不知道那个世界是什么样子。那时我几乎没有可以追赶的目标（不像初中），这也许是高考失败的一个原因吧。自负、虚荣以及平日的偷懒终于在高三时酿成了苦果，那几次大型模考理综难度激增，跟平时训练完全不是一个套路。理综彻底被完爆的我后来再也没得过第一，化学甚至长期徘徊在及格边缘。看到这，你也许以为我会发奋努力上演逆袭神话，但现实永远是残酷的。实际上我并没有多少改变：该踢球踢球，该偷懒偷懒，甚至在四五月份时我都打算放弃物理，想着随便混几分算了。高考的目标也变得无所谓起来，反正那一直都是挂在墙上终将被戳破的泡沫罢了。到最后我干脆抱着爱考哪考哪的弃疗心态，只希望尽快毕业。</p><p>我之前对于“小县城学霸”这个词一直嗤之以鼻，即使高中物理老师曾经不止一次强调过我们只是一个县城中学。不过当时我觉得学霸就是学霸（现在显然我自己并不是），厉害的人到哪都那么厉害，哪有什么小县城不小县城。不过后来当这类人的思维方式深深影响我的时候，才发现原来老一辈人的说法未必都是错的，“不听老人言，吃亏在眼前”这句古语也并非空穴来风。</p><p>2015年的高考和往年一样平淡无奇，出分后我异常平静（要是没上600该多好，那我就坚持复读了）。我想学物流管理或者工商管理，前者是因为我喜欢看到井井有条的交通运输网，最终将东西错落有致地归位，后者则纯粹是因为高大上。不过很不幸，这些想法并没有得到亲戚父母的支持，他们说那些专业虚无缥缈，毕业后不好找工作。</p><p>信息的闭塞使得我（包括那些已经工作的亲朋）并不了解各个专业的细节以及未来可能的职业轨迹，我甚至搞不清电子信息与计算机之间的关系。<strong>18岁前的我们只知道读书，习以为常的主流价值观就是“努力学习，考高分，上好大学”，在这样主流价值观的裹挟下，很多人相信 “一分耕耘，一分收获”，彷佛只要足够拼命学习，一切都会迎刃而解。然而这种简单的线性的思维方式完全是对真实生活的一种片面归纳，强行被灌输的这些价值观念是否契合当代社会真实的发展轨迹，甚至是否正确，都有待商榷。也许当某一天我们突然发现自己的世界观无法解释见识到的种种现象时，才会在深夜里辗转反侧痛哭流涕的同时，试图去打破曾经的桎梏，而人生信条的崩塌和重塑无疑会是极具撕裂感的、漫长的过程。</strong></p><p>此时的我们对社会的认知极度匮乏，高中也完全没有相关的职业指导教育，盲目地填报志愿，这是当时很多人的通病，我也不例外。在西工大三航学院、厦大经济学和西安交大的来回纠结中，最后一天将交大的专业大致按照历年录取分的高低依次填进志愿表，这在现在看来是多么不可思议的一件事，而我，最后就是这么干的。就这样，稀里糊涂地来到了交大电子信息类。</p><h2 id="懵懂时光">2 懵懂时光</h2><p>到大学后，集体住宿搞得我很不适应，晚上总是很晚才睡着，早上起个大早去跑操，结果就是几乎所有早上的课我都一睡而过。那些课程我也着实提不起兴趣，考试总是随缘突击，结果就是期末挂了一门工程制图，那种空间想象能力我差到不可救药。我个人对新环境的适应一直都很慢，所以进入一个崭新的阶段，开始时总是做得十分差劲。</p><p>不过好在我并非一个一成不变的人，于是开始尝试去改变。由于迟迟找不到方向所在，试错的过程持续了将近两年半的时间。选修了一门职业规划的课程，想借此明确未来的打算，弥补这本该是很早前就完成的人生必修课，不过这门课与大学物理一样无趣；参加了数模比赛，虽然得了奖，但除了提升软件安装和论文写作技能以外，并没有什么新奇之处；参加了社团的支教，这是我当时唯一觉得价值非凡的事情，这段经历也对我后来的想法产生了重大影响，可是这并没有从本质上解决我的问题：<strong>我未来到底想干嘛</strong>？辅修了金融学，也不过帮助我提早排除了一个未来可能从事的行业而已；去奶茶店进行所谓的“创业”，半年后店铺出租，我“失业”了；甚至于无聊到搞了一个公众号，想看看自己有没有自媒体运营方面的喜好，最后也是无功而返。</p><p>说来倒也有些矛盾，除了少数大神一直都有明确的方向或者可以兼顾方方面面以外，我们大多普通人，大学里如果一直不停尝试各种方向去试图寻找兴趣，那必然会分散精力，成绩不够好带来的代价就是后期通过更多时间和精力去弥补。可是如果很少尝试，一条道走到黑，那后果也是可想而知。两种决定都会付出代价，只是时间早晚而已。</p><p>我想既然这些都无济于事，就先提高绩点吧。于是从大二下学期直到毕业，我都在认真学习。即使信号与系统、模电数电那些专业课依然没有学懂，但我发现考试与学没学懂关系并没有那么密切，我居然拿到了在大学的第一个100分。欣喜之余，我隐约觉得这里面有什么问题，但是也懒得思考。</p><p><strong>生活就是这么奇妙，收获的成果有时并不与你的付出成正比</strong>。很快我就发现即使我再努力学习，平均分最高也不过89，全系排名好的时候30多，差的时候50多，那时我才初步意识到<strong>人与人的差距有时候不是通过努力就可以弥补的</strong>。</p><p>成绩上不去，我就想试着去开发一下自己的科研禀赋。于是大三寒假我报了ML方向的一个组，不过我压根没有见过报名的那个教授本人，而是被直接分在了一个副教授手下，并进而被分给了他的一个博士。见不到leader本人我完全不觉得惊讶，毕竟IEEE Fellow怎么可能去带一个本科生？但令我不能理解的是我明明报的是ML，但平时的工作却完全是网络通信方向，又是讨厌的信号和从未搞懂的相位。看了一个寒假的论文，帮助他们测试实验数据，在组会上讲论文，尽管我还不知道自己想做什么，但却知道自己厌恶什么。随着时间推移，我愈发觉得自己正在南辕北辙，加之实验室不在一个校区，后来也就主动退出了，科研初探随即宣告失败。</p><p>到此为止，能想到的方式我都一一尝试，可是收效甚微。那段时间我时常在球场散步，一圈又一圈，脑子里就想着两个问题：<strong>我到底喜欢做什么？我未来到底要干嘛？</strong></p><p>人生总有想不明白的问题，苦苦思索不得其解，只能先搁置起来。事情在大三下学期出现了转机，我们系开放了两门CS的课：OS和微机原理，加上ACM大佬们的影响，我开始发现计算机课程的乐趣，那是我第一次认认真真、彻彻底底搞懂了一门课，甚至于我竟然乐意废寝忘食去完成课程的Project。正反馈也来得恰到好处，两门课我都拿到了90+的成绩，那时我隐约有了转CS的想法。顺便要纠正一下，很多人误以为通信转CS很容易，事实上除了三四门相同的专业课以外，通信与CS本科期间学习的东西就像是两条平行线，通信转CS和转金融没什么差别。可能是听到太多科班CS大佬的故事，我始终觉得自己与科班出身的差距无异于一条鸿沟，以至于敬畏到忘记自己该学些什么，尽管后来发现事实并非如此，<strong>人有时候总是自己吓唬自己</strong>。</p><p>说到这就难免谈到劝退的话题，生/化/环/材被黑的体无完肤，大家都要去金融/CS，有时候我也会想：作为所谓的名校学生，我们享受了比较优质的教育资源，然而却少有人愿意投身基础科学研究，这才是科技兴盛的基石，过去不久的华为中兴就是典型的正反例。也难怪有人戏谑“中国只有互联网，没有计算机科学”，我们的互联网公司都在模仿美帝，腾讯学习ICQ，百度学习Google，阿里学习eBay，可是我们却没有看到美帝不仅有这些应用层的公司，还有Intel，Apple，Qualcomm等一大批芯片硬件厂商作为基石，而我们的BAT又有谁做基石呢？一股脑转去高薪行业，这会不会有些太过自私了呢？曾经的理想主义色彩淡薄了许多，我是否也变成了所谓的“精致的利己主义者”，而忽略了对社会的那份责任？但转念又一想，如果一个社会逼得许多人转去金融/CS，那是不是这个社会本身出现了问题呢？遇到一些不顺心的事，千万不要想不开，很多时候不是你的问题，而是整个社会的运行机制出现了偏差。</p><p>由此也可以看出：<strong>世俗意义上的成功更重要的决定因素是历史的进程，选择远远比努力重要得多，而信息和自我定位则会很大程度上左右你的选择。某些情况下努力可能只占1分，而成长环境、家境状况、历史进程、个人选择、贵人相助甚至运气则可能占9分，甚至99分。</strong></p><h2 id="曲折岁月">3 曲折岁月</h2><p>时间飞逝，一转眼三年已如白驹过隙。大一的成绩太差，总成绩大概只落在了全系40多名，掐指一算就知道在保研边缘，如果出国的大佬比较多，我也许会有机会。所以我不敢怠慢，两手准备，保研自然最好，若是失败也不能耽误考研。</p><p>大概是8月份回校的，那阵就看数学，没什么状态，大概心里还是侥幸着能够保送，也不知道专业课该看计算机还是通信的。9月大家人心惶惶，有出国考T考G的，有各种保外保内的，还有穿着西装到处参加面试的，大家也都比较焦虑，放弃考研的也大有人在。浑浑噩噩就到了9月中旬，保研名额给到了第42名，而我是第45名。颇具戏剧性的是，之前坊间传言会有20多个专硕名额，搞得人心惶惶，我还幻想着保专硕算了，后来也不了了之。</p><p>这下本以为彻底死心，考虑到自己当时备考效率极低，根本看不进去书，加上周围的同学纷纷拿到了offer，我下定决心找工作。于是就完善简历，练练编程的题目，投了华为、中兴、网易等几个公司的研发岗，差不多耗了一个礼拜，也收到了陆陆续续的笔面试通知。没想到生活总是会有<del>意外的惊喜</del> ，系里通知有一个国防科大的普通生定向保送名额，在我前面的2个人都放弃了，再加上军校的缘故，我竟然没怎么思考就选择了放弃，这该是第一波坑操作。</p><p>后来不知怎么滴，也许是和老师朋友聊了很多，也许觉得自己还是太菜，莫名其妙又想读研了，稀里糊涂就推掉了所有的面试，一是不够自信，二来不想分心。又把书重新拿了起来，滚去复习。奇怪的是：这次竟然可以静下心来，仔仔细细做题了。这该死的第二波坑操作，事实证明：<strong>秋招远比春招重要并且容易得多</strong>，这一点我会在后面解释。</p><p>时间来到了9月底，这下终于可以安心复习了。出于对通信专业课的阴影，我还是选了CS，还有是因为大三时几门计算机的课学的还不错，倒也饶有兴趣。</p><p>那，选哪个学校好呢？我心想，既然要考研了，本科比不过他们，研究生的学校可不能输给他们。殊不知这就是典型的“高中生心态”，<strong>没有根据自己的定位和当前的规划去做出恰当的选择，而是冲着高大上的标签去做决定，这样的决定显然是冲动并且幼稚的</strong>。清北太难了，比XJTU好的就ZJU、SJTU、FDU、NJU，最想去的是SJTU，查了之后才知道2018年SJTU CS就招了两个学硕、10几个专硕，我想难度太大了，遂杀掉（题外，2019SJTU CS难度蛮低的）。之后查了这几所之后，发现NJU分数又低、招人又多，就开始复习NJU的专业课。</p><p>专业课一共有5门，很难，每天看的头昏眼花。屋漏偏逢连夜雨，10月招生简章出来后，NJU的名额还是和往年一样多，结果过了差不多一个礼拜，官网突然把名额杀了一半，剩20几个了。我想，这也变难了，再加上群里大家信誓旦旦的样子，和朋友商量后，我在来回纠结和迷之自信中又换了学校（题外，我的分去年上NJU没啥问题）。就剩ZJU和FDU了，FDU虽然好考，但专硕却不提供住宿，还恰是从这一年开始，ZJU就这样成了唯一的选择。结果表明，复习时间真的太过紧张，尤其是专业课。408的难度相信都有所耳闻，时而做对，时而连着错很多，心情也像过山车似的起起伏伏，无数次都有撕掉卷子的冲动。我只能死马当作活马医，其实直到最后，我甚至连习题集都没有做完，很多知识点也是一知半解。这该死的第三波骚操作。</p><p>当时和几个出国狗一起自习，看过他们托福考出来的欣喜，也见过GRE 310的落寞，当然还有那一起吃饭时互吐的苦水。我说考完的日子就舒服了，说我已经列好了长长的TODO List。他们说，其实你有没有想过，这本身就是人生啊！</p><p>12月的日子很难熬，临近考试，觉得自己不是在查漏补缺，而是在女娲补天。心情总是飘忽不定，仿若过山车一般，题目全对了会喜上眉梢，英语阅读5错4时又觉人生无望，揉过的专业课卷子冷静下来还是只能乖乖去看。</p><p>说来我算是一个乐观主义者，或许是<strong>人总是愿意相信对自己有利的事情</strong>。寒假可能有一丝落榜的焦虑，但大部分时间我还是在准备机试，每天都在做算法题（题外，这大概是唯一正确的事了，春招用上了）。</p><h2 id="折戟沉沙">4 折戟沉沙</h2><p>出成绩后就得知没有过线，我顿觉失望与惶恐。稍一比较，才发现别人的生活多姿多彩，自己反而是一直学习却连考试都考不好的傻逼。当天的我十分慌张，立刻去查找调剂信息。得知中科大软院收校外调剂，心情才稍稍舒缓了些。虽然学费贵点，但去中科大读个硕士还是不错的。</p><p>看着94分的专业课，我一时语塞。有些不甘心的我一遍又一遍回忆着这大半年发生的事情: 本科通信、三跨浙大、备考也算不上充分，落榜也实属正常。我一直尝试重新认识自己，可现在愈发地不认识，像是一个完完全全的陌生人。刚开学后的那两天我处于弃疗状态，觉得什么都无所谓了，爱咋咋滴吧，调去差点的也行，随便找份工作也行。</p><p>冷静了几天，又觉得这些挫折并非坏事，现在受挫总比将来走向社会好。况且成年人应当为自己的错误付出代价，不论是选择出了问题，还是不够努力。挫折对于我而言绝对谈不上财富，只是希望让我这个转变缓慢的人长点教训。我不是一个一蹶不振的人，也不是度量狭小，只是受了打击，犯了错，总得学点什么，不是吗？积极的心态很重要，凡事总要向前看，过去的就过去吧。工作要好好找，调剂也要努力争取，解决好当下，求一份心安。</p><p>鸡蛋不能放在同一个篮子里，我又迅速确定了其它几个调剂的学校，排除了调剂本校和浙大相关专业的可能。后来也在老师和同学的推荐下了解了一些研究所，但大多是军工性质，我并不想去。很无聊的名校情节以及差强人意的总分使我把比本科差的学校都直接排除，最后就确定了3个：科软、山东大学、中科院成都所。</p><p>我想着这3个再差也能去一个吧，但是<strong>现实远比想象的更加要命</strong>。直到3月10几号才知道科软从今年开始不收校外生；接着是山大，学硕调剂有3个名额，专硕有11个，我想着报个人多的，却不知再次选择出错：专硕的分数高的吓人，没有拿到复试资格，而学硕反而分数低的多。拖了最长时间的就是中科院，预调剂很早就填了，我甚至都填完了政审表，傻傻地把这个当成最后的救命稻草，直到3月底没看到名单，我还是相信会来的，这大概因为我实在想要这个硕士吧。到了4月10日，我对比了去年的招生人数和今年一志愿人数，发现可能不会再有调剂了（之前发邮件问了但没有回信）。</p><p>期间也不敢落下春招，当时想得太简单：不能既没学上，又没工作。一口气投了十几份简历，所幸除了冲突和放弃的之外，都拿到了笔面试通知。因为我是半路CS，再加上春招已经没有大公司的职位，所以也投了一些非技术岗。</p><p>说个题外话，找工作一定要在秋招，因为春招只是秋招的补录，名额少、难度大。拿我作为反例，春招想要投递大公司（BAT），都已经没了HC，错过这一次你就再也不是应届生了，自然也就没了校招的待遇。我后来才了解到：阿里巴巴光是实习生转正和提前批就已经占掉了绝大部分HC，甚至于秋招都已经没什么机会了。</p><p>那段时间我几乎没怎么休息，也没心思去休息，只希望3月底可以确定去处，未来的不确定对人真是煎熬。认真去准备的有五家：TP、OPPO、浦发总行、华为和字节跳动。前三家都给了offer，华为没有了消息，字节跳动则是笔试挂掉了。后来突然发现自己跪在了哪里，华为这种公司，或者说几乎所有公司，都需要你来好好干活。但我的致命错误就在于太老实，而没有学会伪装。我甚至在主管面说自己还是想继续深造，如此愚蠢的错误我接连犯了很多次，这是学会的第一课。</p><p>我其实很讨厌面试时看重忠心的公司，现代企业本来就该是我付出劳动力、你付给我报酬，我当然会把份内的事做好，你也不要占用我其他时间。情怀不能当饭吃，这种忽悠我觉得非常小儿科，甚至不是现代企业所需要的管理方式。</p><p>找工作的心态一直在“卧槽，我还挺牛B的”/“唉，我真傻B”之间来回切换：某司HR主动打电话问我要不要去；那么简单的题目竟然不会做；某司竟然直接免掉了高管面；我怎么问了那么傻X的问题……唯一的共同点在于N轮面试真的会把人榨干。</p><p>后来拒了TP，其实OPPO也没签，一直在等菊厂的结果，直到打听到别人已经拿到了offer，才确认自己凉了。这时OPPO已经快要截止，唯一庆幸的就是自己联系了一起去面试的同学，这才没有傻等下去。虽然我知道不能以偏概全，但OPPO的HR在招聘过程中展现出来的专业素养比某为不知道高到哪里去了，“店大欺客”的道理是明摆着的。</p><p>一步一步把一手好牌打成了今天这个样子，我终于体会到其实<strong>人生的道路是由很多因素共同决定的，并且很多机会都是转瞬即逝</strong>。另外，自己也就是中人之资、半吊子水平而已。</p><p>尽管如此，起初拿到offer后，看着协议上的薪资，我有些兴奋：虽然package不大，但就我了解的情况，也算是比较好的待遇了。我庆幸自己搭上了CS的末班车，还被邀请给下一届分享找工作的经验，甚至开始早早谋划起在另一个城市的生活......</p><h2 id="痛定思痛">5 痛定思痛</h2><p>草草签约以后，我总觉得哪里不对劲，却说不上来。<strong>我发现自己比之前进步一点的是遇到不明白的问题，会去思考、去交流、去尝试得到一个答案，尽管这个答案不甚完美，甚至在上帝视角下都不一定正确，但这也比敷衍了事强上一万倍。</strong></p><p>考研失败就像压垮骆驼的最后一根稻草，让我开始跳出虚荣的怪圈，真正重新认识、评估自己。是不是一切从开始就错了呢？为什么在给予别人建议时头头是道，到了自己就非得撞得头破血流呢？万千世界，大家虽然所处位置不同，但每个人都在寻找自己的局部最优，而且结果好像都不错。唯独我，好像学习率太大，损失函数竟有些发散，距离最优点也越来越远。<strong>那种疼痛感，就像从崖边跌落，远比在平地上摔倒更令人刻骨铭心。</strong></p><p>我像过电影般一遍遍回忆这几年的事情，也时常和各种背景的人聊天（徐老师的<a href="https://www.cnblogs.com/EIMadrigal/p/11973810.html">文章</a>给了我很大启发，我也和徐老师交流过，人很nice）。我逐渐开始发现自己的问题：周围都是IT的同学，大多都想着高薪买房，目前看来的确不错，但或许正是在这种<strong>单线程思维</strong>的浸染以及<strong>同质化的比较</strong>下，我也在不知不觉中迷失了自我，这种象牙塔带来的禁锢总有一天要被打破。更加本质的原因在于我自己<strong>本身没有一个清晰的定位并且没有明确的职业规划，哪怕只是五年、十年的规划</strong>。兜兜转转又回到了那个熟悉而又陌生的问题：我未来到底想做什么？媒体软文总是告诉我们要不忘初心、坚持梦想，却从来不告诉我们怎样寻找初心？怎样选择梦想？</p><p>与在国内互联网公司实习的同学交流后，我看到了高薪背后的挣扎：长时间的加班使得很多人到一定年龄后只能主动退出。以前我从来没有想明白：为什么某为每年从各大高校招聘那么多人，企业利润总是有限的，招那么多人怎么能消化呢？某为又不像国企，政府有命令必须帮助国家解决就业，国家养活完全可以理解。后来当我某一天突然看到了某为的离职率，才明白其实不过是数量巨大的新人换旧人而已。很多年轻人几乎没有自己的生活，疲惫而又无奈。这才是普通大众的真实情况，我们不该只看到某某大佬创业成功去纳斯达克敲钟，某某大佬又融到了C轮，这种“<strong>幸存者偏差</strong>”掩盖了“<strong>一将功成万骨枯</strong>”的现实，也让我重新审视自己：你愿意一直从事这样的职业吗？显然，答案是否定的，因为我始终觉得工作不该成为生活的主旋律，还有很多更有意义的事情等着我去完成。</p><p>顺便插一句：如果你不确定自己要干嘛，<strong>趁早去实习</strong>，接触真实的工作环境远比在象牙塔里意淫要实在得多，提早打破学校里单一价值评价体系带来的桎梏。此外，实习的好处也自不必多说，牛逼公司的实习永远都是简历上最耀眼的闪光点，甚至于在互联网，实习经历大于其它GPA、获奖、社团所带来的价值之和。</p><p>被碾压的感觉与证明自己的情绪混在一起，使得我对自己没有明确的定位。而选择上的失误更多的不是来自于信息的匮乏，而是选择的依据出现了问题：<strong>没有基于未来的职业规划来做出决定，反倒是冲着高大上的标签或者亲朋好友的期待，这样的选择能有多少理智的成分呢</strong>？扪心自问，之前那一连串的操作都是基于一个错误而又功利的方向进行，真正想要的和你实际做的完全是两码事，两者间的夹角至少也有80度，甚至可能是钝角，量出这个角度我花了整整一年，而有的人则花了五年、十年甚至一辈子，这样无头苍蝇乱撞般的努力毫无意义，甚至可能起到反作用。</p><p>是的，之前的选择出了很大的问题，现在的锅确实也得背着。可是这并不是彻底击倒我的理由，换句话说，我应该去纠正之前的错误，而不是一蹶不振。之前说过：选择比努力重要，但<strong>通过交流、经历、思考不断纠正方向的能力则比选择还要重要</strong>，这样才会带来螺旋式的上升而不是断崖式下降。</p><p>明白了错误的主要原因和以后的职业规划后，再一次重新做出的选择看起来那么自然和水到渠成。再强调一遍：<strong>你对自己的定位评估会影响你的选择，而选择却远比努力更重要。你的定位应该取决于你对自己未来的规划，而不是那些高大上的标签或者亲戚朋友的看法，这会让你失去对自己的准确判断，德不配位，必然撞墙。</strong></p><p>不撞南墙不回头，这一年撞得头破血流，跟自己的无知、幼稚、局限斗争了一年。同样，也成长了一年，甚至比以往任何时候都成长地更快。有时候回过头去想，如果这一路很顺利的话，现在又会是怎样一番景象？如果当初选择了保送，如果选择了秋招工作，如果没有选择ZJU计算机，如果调剂到地球科学系，如果去工作了，如果……可惜没如果，所以从过去汲取教训后，最好向前看。盗用一句台词：</p><blockquote><p>You have got to put the past behind you before you can move on.</p></blockquote><h2 id="自食其果">6 自食其果</h2><p>放弃这个比较有诱惑力的工作而去赌一个未知的将来，要说没有压力肯定没人相信，但我当时的决定却相当清晰，即使违约的事情还没有谈妥，即使二战期间的食宿还没有着落。因为我在用未来的职业规划当作决策目标，不再过多考虑暂时的收益，因此决定不再是冲动的。我一直以为自己是悲惨的，大四的最后才确定初步的生涯规划，但实际上我又是幸运的，因为还有一大批人甚至中年以前都没有明白。</p><p>真的要感谢我有一对开明的父母，当我不停地自我怀疑和否定之前的观点与行为，他们总会给予无限的鼓励与支持。</p><p>度过了煽情的毕业季，处理完违约的事情，考完驾照后，我便开始逐渐矫正自己的生活，为过去的错误买单。又是8月回校，心境却大有不同，坚定目标后，事情也不是一帆风顺。记得李健有一句歌词：等待和耕耘，谁更辛苦？我的答案是等待，那段时间我偶有焦虑，填补焦虑最好的方式就是找些事情做，可是闲下来之后，<strong>等待的日子却最是难熬</strong>。</p><p>每段崭新的日子一开始总是来不及悲伤。尽管我十分讨厌把相同的事情做两次以上，但或许是因为新鲜感，刚去的几周学习状态感觉还不错。逐渐理顺了生活之后，最难熬的一段日子在9月底10月初到来。接下来的几周我严重失眠：经常是晚上8/9点睡觉，躺床上思考很多事情，凌晨2/3点才入睡，然后就一直睡到大中午才起床，接着去吃饭学习，生物钟彻底陷入混乱。虽然我不止一次告诉自己：几个月很快就会过去，也明白路该怎么走，但是<strong>心病难医</strong>，还是会经常抱怨Why always me/Why always the wrong answer。我希望时光过得快一些，每天复习都数着日子。虽然看起来还算正常，但我有些担心会不会在哪一瞬间突然崩溃。我尝试了很多种方法试图让自己平静，回归正常的作息。</p><p>由于学校很傻逼的支付系统，扫码吃饭可供选择的窗口少得可怜，不过比物质上的单一更加要命的是心理上的波动。那段日子我真真切切感受到了人生的艰难：每天和活人说话不超过10句，我擅长独处，但还是一度怀疑自己能否忍受这样的孤独？能否坚持下去？接下来的日子又该如何度过？</p><p>幸好我有自己的日常爱好和排遣方式。除了正常的复习时间，我尝试用音乐、文学和足球去填补漫长的空闲：去看各种人物的访谈，从李健到村上春树；去听各种风格的音乐，从钢琴曲到摇滚乐，后来我惊讶地发现自己一年里竟然听了8000多首歌；去了解各种军事话题，从二战到伊拉克战争；去看各式各样的人生轨迹，从职业选择到人生理想。那段时间最开心的事情就是写博客、听音乐和刷评论，那就像是我自己的避风港。每隔一段时间我就会迷上一个大师：从Richard Clayderman到Beethoven, 从石进到周杰伦，从Joe Hisaishi到Maksim，从李健到Akina，甚至无聊到去扒一些<a href="https://www.cnblogs.com/EIMadrigal/p/11421473.html">抄袭的作品</a>、在足球APP上和人撕逼。</p><p align="center"></p><center class="half"><img src="https://img-blog.csdnimg.cn/2021050914403540.jpg" height="25%" width="25%"/>图片更新于2021.5.9</center><p>为了调整生物钟，我决定用早起对抗失眠，学了很多<a href="https://zhuanlan.zhihu.com/p/34952593">快速入睡</a>的技巧。深夜自我怀疑的时候，就去回想毕设导师对我能力的认可，她告诉我不能因为一次失误就这样自暴自弃，甚至在毕设答辩时，其他老师问我将来什么打算，我回答工作，老师仍然在表达惋惜。为了避免枯燥，我试图在每天晚上为第二天制定计划，并在完成小小的目标后奖励自己一顿美食（每隔一段时间都会去某个固定的小店吃饭）。后来不知是因为生活的惯性还是出于对第二人生的追求，我的效率渐渐提高，并养成了程序化的一天：早餐、学习、午饭、午休、学习、晚饭、学习、跑步、洗澡、沙雕视频（美食/老剧）、维护博客、睡觉。不可否认的是，尽管有时候仍然觉得自己像个可笑的小丑，但情况一直在好转。这种井井有条的生活给予了我长期的专注，使我得以脱离苦海。 <img src="https://img-blog.csdnimg.cn/20200528111916687.png" alt="在这里插入图片" /> 于是从10月下旬直到考前，我都变得异常平静。<strong>在那段低谷的日子里，收到了许多老师、前辈、同学以及食堂大叔的照顾和鼓励，也包括那些远在网络彼岸的未曾谋面的陌生人，在此一并感谢~</strong></p><p>我原本坚定地以为，高考考成那个鬼样子是因为没有认真去学，去复读一年肯定会有巨大的提高。不过经历了那几个月，现在我觉得结果真的未可知：心态、压力等等因素共同作用下导致的结果可能会谬之千里。</p><p>在这一年里，我听到过太多的诉苦：工作后的同学又想回来读研，而且固执地认为研究生的待遇好、升职快；还遇到了许多正在读研的学长学姐后悔自己没有早早去工作挣钱，积累社会经验。两种想法没有对错，还是那句老掉牙的话：因人而异。不置可否的是，<strong>人都是有损失厌恶的，比较必然带来不快，乃至伤害</strong>。以前我总是转不过这个弯来，或者更确切地说，潜意识里不想让自己转过这个弯。如果放眼整个社会，你会发现，<strong>人生从来就不是什么公平的游戏</strong>，别人比你少读几年书、多挣一些钱根本就是没什么大不了的事。有一大堆人压根不需要读书、打工挣钱，就可以家财万贯，你奋斗一辈子可能都无法到达别人的起点，难道我们就放弃生活了吗？大家都是普通人，甚至夸张一些，都是社会最底层的人，没有谁比谁高贵或卑微，为什么要比来比去互相伤害呢？</p><p>将读研作为缓冲的人无非两种情况：不知道自己要做啥；知道了要做什么但时间已经不足以得到理想的结果，别无选择。对我个人而言，如果去工作，可能以后选择的权利会少一些。三年的缓冲一是为了弥补之前犯下的错误，二是为了让自己将来有一些小小的选择权，不用一直996。基于职业规划的前提下，我想该怎么做也已经非常明确了。当然这只是我自己的情况，其他人，比如本科时已经积攒够了资本，那大可以直接工作；对于立志进入学术界的同学，那继续出国深造才是最好的选择，所以才说因人而异。</p><p>初试后我压根没有对答案，只是小小放松了一下，庆祝这段岁月的结束，也是迎接下一段更加艰难的旅程。终于松了口气，不为别的，只为有时间做自己的事情了，<strong>自由的感觉真好</strong>。</p><p>回家后，一边等待成绩，一边准备实习。找实习的过程并没有比这半年的生活轻松多少，本来打算3月份复试后立即找实习，拿到录取资格就可以算是在校生。结果人算不如天算，没想到疫情居然持续了这么久，2/3月的时候遥遥无期，也不知道什么时候复试，如果复试拖到4/5月，结束后就只剩6/7/8这3个月，很多公司都是至少实习3个月，这样找实习的时间几乎没有。所以从2月份开始，通过各位前辈和同学的内推，大大小小投了国内外几十家互联网企业：网易、字节、华为、深信服、微软、依图、百度、腾讯、小米、Amazon、IBM、Intel、广联达......起初我觉得非常奇怪，除了2家公司打电话了解情况后，其他的都杳无音讯，唯一的机会来自于网易，不过我的面试实在糟糕。后来特意查了一下，发现非在读生签实习协议违反劳动合同法。知道这事以后，我也就基本放弃，不再强求，如意算盘再一次落空。</p><h2 id="重新起跑">7 重新起跑</h2><p>2月中旬看到初试成绩后，我觉得应该没什么问题，复试准备得很放松，把更多时间用来思考问题、夯实基础以及整理散落的片段。</p><p>复试虽然延期了2个月，但一切顺利。感谢我交的老师，面试时仍然在鼓励我，问的最多的就是去年的经历，告诉我不要以为没去ZJU就亏了，告诉我XJTU也不差，结束时说欢迎我来交大的确有些感动。在打趣的过程中，我能感觉到老师们那种不服气的精神，但同时我也明白品质和实力几无关系，就像托尔斯泰说的：<strong>只有伟大的作品，没有伟大的作家</strong>。我十分清醒，自己的水平目前确实很low，只有按照计划踏踏实实去做。</p><p>初试成绩公布后，我就联系了一堆老师，除了直接拒绝的，剩下某老师告诉我复试后才能确定名额，拟录取名单公布后，该老师问我是否读博，在得到否定的回答后，告诉我2天后跟他确认。但实际上，学硕名额非常紧张，有几个老师主动联系，我也意识到再等下去无济于事，赶快联系想跟的其他老师，很不幸的是：学硕名额几乎全都告罄。剩下一些不太想做的方向，出于无奈，只能群发了5个老师碰一碰运气。只要能实习、人品不至于太难以言表，是否push我都没什么问题，因为我只是要个学位证而已，即使这样也还是从下午3点找到晚上10点。</p><p>一年多的时间，我个人也变得更加平静，所以早早联系的老师一直吊着我，最后放我鸽子，我也无所谓。甚至看到自己出现在拟录取名单的第一行时，我也少有欣喜，脑子里想的只是烟酒生期间去哪实习，经济独立要怎么做，能不能早点拿到毕业证。</p><p>实习无望，只有做些其它事来消耗日子：拿到王道的助教资格，可能是这几个月为数不多的好消息。</p><p>人在回顾前一阶段的自己时，大多会觉得幼稚，正如现在翻看几年前的朋友圈，尴尬癌就会复发，所谓的成长究竟是好事还是坏事呢？<strong>随机漫步的人生又有谁说的清楚</strong>？甚至一年前我都从来没想过会是今天这个局面，顺便推荐一本有点虚无主义色彩的书《随机漫步的傻瓜》，看完后你可能会发现运气和概率竟然在人生中扮演了如此重要的角色。</p><p><strong>喜欢什么，就放手去做吧。人生的许多问题，只有自己亲身经历过，才能够给出回答</strong>。如雷军在<a href="https://v.qq.com/x/page/m0857uh1apx.html">采访</a>中所说：</p><blockquote><p>雷布斯：人生不要太多的勉强，不要强迫自己做什么。我觉得做自己喜欢的事情，可能是最佳的选择。因为你喜欢这个方向，喜欢做这件事情，我觉得爱好比什么强迫都管用。</p><p>主持人：如果不知道自己喜欢什么呢？</p><p>雷布斯：那就看直觉。</p><p>主持人：也没有直觉？</p><p>雷布斯：那就撞上什么干什么，这些冥冥之中姻缘注定的，反正撞到什么是什么。人生就是这样的一场经历嘛。你撞到这个事情，你不知道自己喜不喜欢，你先干了再说，你不喜欢还可以改。不要怕选择，你不喜欢可以改。</p><p>主持人：可能大家总是怕选错吧，走弯路吧？</p><p>雷布斯：这个选错是必然的事，每个人都会做很多很多的选择，我觉得选择一定会出错。关键是提高选对的成功率，而不是说怕选错。每个人一辈子，可能做了一千个选择、一万个选择，怎么让你重要的选择不出错，或者少出错，这是关键，那些小的选择，无所谓对与错。</p></blockquote><p>人啊，总是逃不过真香定律：本科时黑的最起劲的一个地方，迟到了一年，几个月后又将重新去往。不过这次与五年前不同的是：我知道了<strong>Who am I</strong>，也弄清了<strong>Where am I going</strong>，以及大致明白了<strong>How to get there</strong>。</p><h2 id="小结">8 小结</h2><p>折腾了这么多，成长的阵痛依然历历在目。有些时候道理就在那里，可是不痛撞南墙就是明白不了。撞得头破血流才体会到了下面这些道理（不保证正确，只是我现在的看法，每个人都会有局限，仅供参考）：</p><ol type="1"><li><strong>选择比努力更重要，你的当前状态就是由之前的每一步决定和行为导致的。获取足够的信息是做出正确决定的前提，多和不同背景的人交流（多约饭）是获取信息的一种方式；</strong></li><li><strong>做决定时多考虑未来的职业规划，少考虑沉没成本，更不要冲着高大上的标签或者亲朋好友的期待；</strong></li><li><strong>独立思考和自我纠错会是极其重要并且稀缺的品性，这种能力的提高都需要亲身实践（跳几次坑就明白了）；</strong></li><li><strong>世俗意义下的成功评价标准与你在哪所学校读书、成绩有多好、科研多牛逼并不是强相关，所以非名校的同学完全没有必要自暴自弃，主动获取信息并做出明智的决定，最后比名校学生优秀的大有人在，我已经亲身见识过很多这类人了；</strong></li><li><strong>对于名校同学，千万不要沉迷于学校牌子、竞赛获奖这些光环带来的麻醉中，个人差异远比学校和专业的差异大得多，趁早找到自己的生涯规划：多去申请实习或者通过其他方式进而提前排除错误选项，越早付出的代价越小；</strong></li><li><strong>不要用战术上的勤奋掩盖战略上的失败，做事前先想明白Why，再去考虑How；</strong></li><li><strong>一尘不染的事情是没有的，完美只存在于梦境中，认清过去的错误，面对当下的现实，未来重新做人；</strong></li><li><strong>综上，想要避免痛苦，就要尽早认清自己曾经、现在、将来一直都是loser的事实，每天做个乐呵呵的傻逼，也挺好。</strong></li></ol><p>伏案涕零，不知所言！</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变态的高等教育</title>
      <link href="/2020/05/22/%E5%8F%98%E6%80%81%E7%9A%84%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2/"/>
      <url>/2020/05/22/%E5%8F%98%E6%80%81%E7%9A%84%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2/</url>
      
        <content type="html"><![CDATA[<p>作为一个局内人，经历了四年的本科教育，后来接触了美帝学校的课程，对比之下越发觉得差距天大。丝毫不夸张地说，随便找一门美帝TOP50学校的公开课，质量都可以吊打国内99%的学校课程。 ## 重蹈覆辙 一届又一届的学生进入高校，被统一的流程加工几年之后扔进市场，工厂会召回次品，但没人会为学生负责，这样的故事仍然在不断上演，以我所在的EE为例：</p><ul><li>四年中要上若干门思政课，并且浪费很多时间去写作业、开会讨论、做pre。XJTU的这些课期末考试都是闭卷，君不见考前的图书馆走廊，到处都是拿着《毛概》笔记认真背书的同学，我曾经也是其中的一员，看似司空见惯的事情现在想来真的非常荒诞。</li><li>每学期动辄10几门课、30几个学分。大三的第一学期堆积了5门硬核专业课，外加电设和FPGA实验，以及不知道为什么存在的金工实习，更遑论还有选修课。这样的培养方案使得学生根本没有时间和精力仔细钻研，能应付完平时作业、大作业和期末考已经不易。</li><li>更为严重的是：专业课上时常可以见到PPT Reader般的老师，往往这类老师对签到这种事情非常在乎，好像在维护自己的权威，除了这些，看不出他/她对课程有什么见解。PPT往往都是10几年前的版本，排版、错别字惨不忍睹，就这样一代代流传下来，还是在EE/CS这样更新极快的学科中。至今记忆犹新的微机原理的某个女老师，上课总是在炫耀自己去THU学习人家的计组课程，要做一台计算机云云...这位老师上课时竟然将汇编程序的后缀写作.acm。。。</li><li>关于实验课，更是无力吐槽，你的成绩基本取决于实验报告的长度，所以内卷之风日益兴起，甚至一个小小的物理实验，有同学写出了20多页的报告。。。试想如果老师仔细评阅每份报告，自然不会按照长度打分，但是老师还要忙着做很多重要的事情呢？</li></ul><p>这样的结果就是本科学的东西考完试就还回去了，下次要用还得重新学，浪费几倍的时间重新学习，这也是我最讨厌的地方。</p><h2 id="追根溯源">追根溯源</h2><p>曾经我觉得：本科教育的失败只是某个学校做的不好，也可能只是西部高校做得不够好，可是随着很多很多不可思议的事情发生，我开始怀疑即使是顶尖大学也会烂到一塌糊涂。如果你有兴趣搜索这些内容，你会看到哪怕THU、SJTU这些国内名校也是如此，只是恶劣的程度有所不同而已。所以我一直觉得交大在我黄金般的4年里没起到什么作用，甚至起的是负面作用，我没有斯德哥尔摩情节，不会感谢学校提供了如此巨大的阻力，是为了锻炼学生。</p><ul><li>本科教育并不会影响职称评定，没有相应的考核要求，不如灌paper、拉项目来的实在。教学评估也是可笑，只会评估课堂出勤率高不高、实验报告写得长不长，压根不会有领导在乎课堂质量。</li><li>钱，还是钱：我上过Harvard的计算机导论课，整个课程有70+ TA，还有Amazon的计算资源免费支持，这样精心设计的课程怎么可能不是翘楚？</li></ul><h2 id="惩前毖后">惩前毖后</h2><p>怪不得在《上海交通大学学生生存手册》中，有学长疾呼： &gt; 国内绝大部分大学的本科教育，不是濒临崩溃，而是早已崩溃。</p><p>我自己意识到这一点实在太晚，穷屌丝也读不起master::&gt;_&lt;:: 我很感谢国家的政策，让我掏很少的钱就能接触到大学教育。但是希望赶路者能意识到：国内的高等教育就是shit，如果按照学校的计划走下来，进社会迟早被安排地明明白白，越努力，越傻逼。</p><p>Sad but true，研究生的教育只会更加差劲，我不想再被继续残害下去，说说自己的打算(在达到毕业要求的前提下)：</p><ul><li>我不否认有大神可以从课堂上学会关键知识，但是对于我们普通人来说，只能把有限的时间用来做出最好的选择。适合自己的方式才是最好的。</li><li>能不去的课就不去了，尽量选水课(不签到/考试水/给分高)。用尽可能多的<strong>自由支配时间</strong>学习更加优质的教学资源。</li><li>和老师交流要看情况，主要还是科研方向问题。</li></ul><h2 id="他山之石">他山之石</h2><p>我只列举一些我看到过的观点，并不代表个人看法。</p><ul><li><a href="http://www.houxiaodi.com/assets/misc/manual.pdf">《上海交通大学学生生存手册》</a></li><li><a href="https://blog.csdn.net/wangkechuang/article/details/8125062">清华梦的粉碎——写给清华大学的退学申请</a></li><li><a href="https://www.zhihu.com/question/60444527/answer/267271327">西安交通大学和其它几所2+7相比有什么优势和不足？</a></li></ul><blockquote><p>本来不想来打扰准备昏睡至死的人。</p><p>如果只是XJTUer来知乎自问自答寻求廉价的满足感，我从来不会浪费自己的时间来反驳他们。毕竟他们抱着发霉的C9头衔和上世纪的择校观念自娱自乐开心就好。</p><p>但是看到题主只是一名高中生，并且已经成功意识到了XJTU既存的缺陷（我当年为什么没有获得这些信息？！），应该是一位相当重视自己未来并且希望它最优的人。实在不希望那些高票回答毁人不倦。</p><p>不错，你确实应该对排名有一个清醒的认识：不要再拿XJTU和清北华五以及华科北航等学校比，它不配。生源/就业质量/出国率这些硬参数XJTU全方面垫底。这时候会有XJTUer跳出来说三大奖排名才是货真价实的比较，那么根据<a href="https://www.sohu.com/a/154387981_111981">近五年各大高校国家“三大奖”</a>中国农大排名11名，中科大排名19落后于苏州大学江南大学等高校，请问这个排名货真价实在哪里？每种排名都有一些对应的“利好高校”，三大奖之于XJTU，类似武书连排名之于WHU。就算前者更客观，也只不过是一方面。更何况WHU都不拿武书连说事儿了，XJTU还在西部一隅拿三大奖自慰呢！</p><p>XJTU的腐朽、低效、没落，就算是孜孜不倦来洗地的各位，想必也是深有体会吧。彩虹楼甲醛、彭康楼甲醛、女生宿舍和主楼女厕偷窥偷拍事件、xx书院房顶掉落，还有很多我暂时没回忆起来的，以上这些，XJTU官方有过任何一个让人满意的答复吗？可笑的是，很多XJTUer作为受害者身边的人甚至受害者自身，还在试图说服自己去对XJTU“培养一种满足和自豪感”。就我个人来说，很多小事都折射着XJTU的低效和颓败。</p><p>1）上学期办英文成绩单，学校教务处的人告知要先在哪里开原始成绩单，然后找谁和谁签字，等费劲周折终于完成，回来盖章的时候，又说按规定今天不行，下周一下午来吧。结果又浪费了好几天（后来才知道，给教务处那个负责盖章的求求情就能立刻完成，呵呵）。</p><p>2）大三的暑期实习答辩，基本水出天际，只要你的实习盖章签字没问题。同期去XJTU钦定的陕西鼓风机动力集团和渭河电厂打扑克玩手机的同学，答辩就算千篇一律漏洞百出，照样稳过。当时本人没有去学校“偏好”的公司实习，答辩被刁难了近一个月。据我所知还有机械那边的学长大三暑假在DJI实习，结果回来学院死活不认可，被迫大四暑假补上XJTU认证的不知道在干嘛的实习。那些响应XJTU号召去签约的野鸡公司划水的乖乖同学们，能不能通过DJI面试都是问题。以及有大神翘课去MSRA科研，期末考的也很好，但是XJTU不给登成绩的事就不细说了。</p><p>3）老师们绝大部分都是重科研轻本科教学，时不时会遇到PPT朗读员般的极品老师。不过这个貌似是中国高校通病，XJTU具有也是理所当然？？XJTUer，你们是这么认为的吗？另外，科研也不是你想象的那样，50%以上是论文灌水+项目拉钱，极少数是高质量研究。</p><p>4）本学期老师给的一门CS相关课程的PPT，拿到一看，最后修改时间2007年，十年过去了，连页脚的日期，正文的错别字都没有变，就这样年复一年的给陕西省一流大学的学生们使用着，而且还是CS这种更新极快的课程方向，让人忍俊不禁...</p><p>5）XJTU大部分老师都是本校本硕博一条龙的教育。一个开放的、优秀的、吸引人才的大学，这种情况不会这么严重。不信可以去美国的大学任何一个系的faculty list看一看，以及去中国东部的排名靠前的学校官网看看。另外，XJTU很多老师根本就不更新自己的主页，publications停留在几年前，甚至一些英文论文标题都有错词，总之不知道他们每天都在做些什么。</p><p>关于“XJTU这些年已经止颓了，正在稳步上升，你看创新港建的多好”这类说法，我只想说我们都是普通人，只能力争用有限的时间做出最优的选择。你不能把自己四年最宝贵的时间赌在一个未知数上。建了一堆大楼就改善了对本科生个体的关怀，也不现实。走出家乡去发达地区拥抱更多的机会和更广阔的视野，就算上了一个看起来不如XJTU的学校（也只是看起来不如而已），比起在知乎上埋头洗地的XJTUer来，你已经优秀太多了。</p><p>如果非要客观地介绍一下XJTU屈指可数的优势：</p><p>1.机械能动材料等传统工科科研实力强势（与本科生关系并不大，本科发顶会paper的是极少数）。如果确实热爱这方面的科研并且愿意忍受相对较低的工资，同类高校请选择XJTU。CS EE相关工科，选择北航北邮华科这些学校，不要选择XJTU。</p><p>2.目前还算在市中心，生活和交通便利。</p><p>最后的最后，你的选择权由你的高考成绩/自招成绩决定。</p></blockquote><ul><li><a href="https://www.zhihu.com/answer/437601713">如何评价西安交大计算机系？</a></li></ul><blockquote><p>看到很多人的批评，还是想多说两句，表达我的想法：</p><p>我从来都很感激西安交大，学校的补贴让我不用花钱出国交流，好心的老师给我写推荐信，学校的名声让我的简历能进入全国的大公司，2W元四年的学费让我收获了自认为超过100万的好处。</p><p>但是这都是我对学校本身的感激和爱戴，是学校或者是国家的好政策培养了我。而不是那些搞小山头的老师，僵化的管理人员，不尊重学生的制度。这些人现在越来越多，我认为并不配代表西安交大。我对这些毒瘤的批评也并不能代表对交大的否定。</p><p>交大计算机的培养计划确实存在着很大的问题，说交大计算机本科毕业不会写代码，我觉得完全没毛病，95%的学生四年下来写过的代码不会超过1000行，一半是for循环。剩下一半是在纸上写的。</p><p>其次我不同意也不想反驳如下的论点：“你来了交大就别BB，BB不如去复读”，“母校只允许自己黑，不能让别人说半句不是“，这基本等同于“你对政府不满就出国，不然老老实实受着”。</p><p>很多人都只是挑了西交计算机的缺点，这是十分有偏见的，本着为校争光的原则，在此列举一些西交计算机的优点：</p><p>1。西交计算机系的编程作业很少，给了学生们充分的自学时间。众所周知，计算机是一门自学的专业，很多三本的大神都是自学成才。而学校领导和老师们充分认识到了这一点，作业能出原题就出原题，能用笔写绝不用电脑，能让助教改绝不机考。比如一个下午就能写完一学期的C++作业，看了一学期mooc的数据结构，上机不到10个学时的操作系统。这对学生的自学能力提出了很高的要求，极大地提升了同学们的自学能力。</p><p>2。重视经典和原创。上课的教材能用本校就用本校的，能自己编就自己编，充分地体现了很多老师本人的风格和只可意会的专业水平。甚至体育都有自己本校的教材，印象中有太极拳等等，为了防止学生练武走火入魔，学校可谓用心良苦。PPT也都极其经典，有10年前的，5年前的，表现了尊重经典，坚持传统的精神。</p><p>3。必修很多看似与计算机无关的课，比如工程制图和生物实验等等。虽然国内很多知名高校，比如清华计算机是不修的，但是世界一流大学MIT，Caltech都是有生物必修课。这充分表现了西交与国际接轨，争做世界一流大学的决心。要知道生物作为21世纪的专业，可谓前途无量。虽然西交除了生化实验班之外的生物系学生大多转行了，但未来需要的是计算机和生物的交叉人才，正需要计算机系的学生去开拓和发展。</p><p>4。计算机系经常受到自动化某所的强烈关怀和支持。前任校长郑南宁深刻地意识到，集中力量才能办大事。于是常年把电信学院的经费奋力拨到自动化系，通过自动化系的发展反过来带动计算机系，正契合了天朝早年“先富带动后富”的理念。可以预料，通过院系之间的互帮互助，计算机系必将获得长足的发展和进步。</p><p>5。上课严格考勤。除了某些特殊关照班级之外基本不能出去实习／科研，这充分体现了学校领导关心同学的心。要知道西交计算机教学水平一流，出去实习能学到什么？对于拿到了某些实习offer的同学，学校就会百般刁难，参见<a href="https://www.zhihu.com/question/281289820">如何看待西安交通大学不断地被黑?</a>某回答，这充分锻炼了同学们艰苦奋斗，逆境求生的品质，而这种精神在同学毕业之后几十年的人生都是非常重要的，凸显了领导眼光的长远。</p><p>6。在编程作业很少的同时，实验和考试则是非常硬核的。楼上有人提到计算机课程电类太多，其实有点狭隘，不才在清华计算机系学习过一年，模电下半学期的电路分析和数电的“数字点亮人生”实验也都十分繁重，而信号与系统是计算机一小半研究方向的必须基础之一，不学就开玩笑了，所以说并没有黑到点子上。而西交的考试要求则更高，动辄成吨的概念题，对记忆力的要求极高，这不仅体现了学校希望将计算机这门学科文科化的创新精神，更是锻炼了同学们的背诵能力。试想别的学校同学还在对着C++官方文档写代码的时候，西交的同学们已经背完了文档，这必将极大地提升同学们写代码的速度和水平。</p><p>7。新任教师基本是本校博士，充分体现了学校的团结。参考<a href="http://jfzx.xjtu.edu.cn/info/1006/3210.htm">最近三年的新入职教师</a>，之前三年的计算机系，软院的老师多为本校土博，在现在很多二本都要求海归博士的大背景下，西交还能有如此魄力，团结一心，不崇洋媚外，这是何等难能可贵的精神！</p><p>8。在以上这些令人振奋的进步之余，西交的创新港也在如火如荼地建设着。2个月前据某前去规划建设的老师称，一共近5000亩地租出去了3200亩，剩下1800亩尚在建设之中。不得不说学校领导眼光之长远，懂得把经济利益放在第一位，先赚钱再建设，这样才有长远的发展。可想而知，假以时日创新港必将成为下一个曲江校区，为西交之崛起增光添彩。</p><p>以上只列举了西交计算机众多优点中的几个，还有太多可圈可点之处，在计算机学科蓬勃发展的今天，西交计算机必将成为国内一流，享誉世界！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>风雨混沌 曙光难觅</title>
      <link href="/2020/03/21/%E9%A3%8E%E9%9B%A8%E6%B7%B7%E6%B2%8C%20%E6%9B%99%E5%85%89%E9%9A%BE%E8%A7%85/"/>
      <url>/2020/03/21/%E9%A3%8E%E9%9B%A8%E6%B7%B7%E6%B2%8C%20%E6%9B%99%E5%85%89%E9%9A%BE%E8%A7%85/</url>
      
        <content type="html"><![CDATA[<p>懵懵懂懂的少年，夏日刺眼的阳光，还有，操场飘飞的国旗~</p><blockquote><p>我志愿加入中国共产主义青年团</p><p>坚决拥护党的领导</p><p>遵守团的章程，执行团的决议</p><p>履行团员义务，严守团的纪律</p><p>勤奋学习，积极工作</p><p>吃苦在前，享乐在后</p><p>为共产主义事业而奋斗！</p></blockquote><p>那时的我，有着初中生独特的稚气，涉世未深，但满怀激情。</p><p>并不太理解口中的誓词，但仍然高举右拳。声音高亢洪亮，目光笃定坚毅。</p><p>虽渺小，却坚定。我相信，风雨永远阻挡不了彩虹！</p><p>可是，成长了七年之后，我却愈发难以判断这个世界的真伪！</p><p>因为我的认知已经被完全颠覆 <img src="https://img2020.cnblogs.com/blog/1260581/202003/1260581-20200320115313972-500146240.png" alt="img" /> 一个无数青年向往的团体，千千万中国学子的梦想源地，究竟都在做些什么？</p><p><strong>或许这再也不是我熟悉的那个共青团了，永远都不是了。</strong></p><p>北京，中产，却连自己的孩子都保护不了。</p><p>祖国的花朵还不曾来得及绽放，就已烙下了深深的童年阴影。不久后，事情不了了之的时候，那些所谓的“叔叔医生、爷爷医生”会逍遥法外（如果还有法律的话），继续它们的生活，仿佛从未出现一样......可是受伤的心灵又由谁来抚慰呢？</p><p>【我有一个长长的望远镜，一直能伸到你的家里，你说什么话做什么事，我都知道。】</p><p>略显艺术的欺骗，让人恐怖、胆寒。</p><p>长长的望远镜难道不应该用来看星星吗？</p><p>事后，有人冷眼相望，有人造谣撞骗，有人疯狂洗地......</p><p>很欣慰的是：<strong>正义永远不会缺失。</strong></p><p>很多媒体人，顶着压力去探求真相；很多明星，站出来追问谴责；很多你我一样的普通人，持续关注着后续进展，尽力去捍卫孩子们的权益。</p><p>我说，很温暖，谢谢你，谢谢你们！ <img src="https://img2020.cnblogs.com/blog/1260581/202003/1260581-20200320115322124-352552867.png" /> 前苏联总理Nikolai Rizhkov在反省苏联垮台时曾说：</p><blockquote><p>我们监守自盗，行贿受贿，无论在报纸、新闻还是在讲台上，都谎话连篇，我们一面沉溺于自己的谎言，一面为彼此佩戴奖章。而且所有人都在这么干，从上到下，从下到上！</p></blockquote><p>很失望，很愤怒。</p><p>但我想，重要的是：</p><p>在洞透人性的善恶后，我们依然渴望曙光，那是对生命的尊重！</p><p align="right">写于2017年11月29日，知乎</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老实人的摸索与反思---写在高考七年后</title>
      <link href="/2019/12/02/%E8%80%81%E5%AE%9E%E4%BA%BA%E7%9A%84%E6%91%B8%E7%B4%A2%E4%B8%8E%E5%8F%8D%E6%80%9D---%E5%86%99%E5%9C%A8%E9%AB%98%E8%80%83%E4%B8%83%E5%B9%B4%E5%90%8E/"/>
      <url>/2019/12/02/%E8%80%81%E5%AE%9E%E4%BA%BA%E7%9A%84%E6%91%B8%E7%B4%A2%E4%B8%8E%E5%8F%8D%E6%80%9D---%E5%86%99%E5%9C%A8%E9%AB%98%E8%80%83%E4%B8%83%E5%B9%B4%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<p><em>说明：本文是徐国曦老师写于2018年6月，我第一次看到此文是在2019年4月中旬。鉴于我当时状态很糟糕，此文给了我极大的震撼与启发，每每读来都有不同的感受，遂摘录于此。 附：<a href="https://zhuanlan.zhihu.com/p/37859452">原文链接</a></em></p><hr /><p>说明：上篇《老实人的归国与失身》获得了超过预想的关注，文中虽声明“本故事纯属虚构”，但实际上真实情况与艺术加工大约各占一半。上篇文章想要表达的主题可能并不十分清楚，不同人看到的东西会有极大不同。因此在今天这篇文章中我将详细讲一下这些年来发生的事情以及自己的一些思考，本文句句事实，不说一句大话、假话、空话，不贩卖焦虑，不灌任何鸡汤和毒鸡汤。我也不讳言自己身上出现的问题，曾经的生活充满不堪，有些遮蔽在眼前的玻璃滤镜总要有需要被打破的一天。</p><p>时至今日，我也是时候与过去的自己告别，开始新的第二人生了。我也希望将自己的经历写出来，给境遇相似的人提供一些可能的思考或警示。几年折腾下来，不敢说积累了多少人生经验，但是讲教训我这里是有很多的，这篇文章的目的也在于用亲身经历指出我自己及处境相似的年轻人思维和行动上的误区。其中的一些个人想法可能不完善或者不成熟，也欢迎批评指教。</p><hr />认真投决定命运的硬币，却不知道最后要去哪里。<p align="right">——题记</p><h2 id="section">0</h2><p>在文章开始之前，先放几篇在某段时间内引发广泛讨论的微信文，读者们或多或少可能看过其中一些：</p><ol start="0" type="1"><li><a href="https://www.zhihu.com/question/277691008">《老实人的归国与失身》</a> 作者是我自己</li><li><a href="https://www.zhihu.com/question/50766928">《T大本科舍友阶级分化实录，该何去何从？》</a></li><li><a href="https://www.zhihu.com/question/44186681">《凭什么我辛苦二十年，现在却比别人差那么多？》</a></li><li><a href="https://www.zhihu.com/question/52031149">《我上了985 211才发现自己一无所有》</a></li><li><a href="https://www.zhihu.com/question/65098412">《一个月就辞职，一个北大女生的求职悲欢》</a></li></ol><p>这些文章可能可以或多或少的反映当前包括我在内部分名校学生所面临的现实问题与认知偏差。也因此，因为视角有限，必然不代表整个年轻人群体的普遍现象，更不能说契合多数人的价值观，请带着批判的眼光看到上面提到的所有文章，也包括我这篇。</p><h2 id="section-1">1</h2><p>好了废话不多说，开始讲故事，十年经历，尽在此篇。如果觉得故事过长，请直接看最后的结论。</p><p>美西时间2018年6月6日下午，我上完了学生时代的最后一节课程，只待最后的考试、毕业、回国、入职。打开朋友圈，看到大家都在怀念当年的高考，作为一个上了大学后就基本没再怎么提起高考这茬事的人，突然觉得这个事情好遥远。不过从尘埃落定以来我也一直想找个机会分享一下我个人几年来遇到的事情，就索性在高考七年之后学生时代临近结束的时候，进行一次彻底的总结，向过去的自己说再见，轻装迎接未知的未来。这篇的主题其实和高考本身没有多大关系，不过还是像上篇一样，从高中时代讲起。</p><p>如同《老实人的归国与失身》当中讲到的那样，我十年之前升入一个高考大省省会的重点高中，虽然管理并非变态到监狱式的程度，但是由于升学压力的缘故，大部分学生的日子还是过得相对波澜不惊。在一个在郊区住校，一两周回一趟家，手机都不一定人手一部，诺基亚N95就能称霸，上QQ空间可能是最好的娱乐活动的时代，我们的日常生活也不像十年之后的今天有着各种各样的诱惑。如同我现在看到快手抖音和知乎上的00后们接受着我们从没想过的信息，做着我们想追求却曾经不敢去做的事情，18岁的他们姿势水平可能完爆25岁的自己，就觉得时代的发展如同车轮一般，而90后已经成了被冲在沙滩上的前浪。</p><p>而在那样的环境下，可想而知，学生当中最受欢迎的群体并不是只知道好好学习的书呆子（虽然我自己可能并不是），而永远都是绯闻缠身的帅哥靓女们，家里有一些背景考到一本线就能上本地985的关系户，手机一周一换的富二代，carry大家打游戏的大咖，带着些许叛逆的所谓不良少年，甚至高中时代成熟的早偷尝禁果还顺便能给朋友们性启蒙的人。虽然当我之后见到更大的世界之后发现这都不算什么，但放在当时，这些现象还是对很多十五六岁经历一片空白的少男少女有着一定杀伤力的。</p><p>在这些人面前，我竟有些自卑，说不清楚自己除了成绩稍微好一些之外还有什么优点，更何况成绩根本没好到可以完爆他们的程度。而我个人的课余生活就更是单调，<strong>上晚自习看《萌芽》追连载小说得到的快乐，可能并不亚于几年之后在国际期刊发表一作文章的快乐</strong>。人在成长过程中都是这样，小时候得到个玩具就能高兴好几天，可是长大之后很有可能金钱和权力等这些世俗成功标准的降临都带不来一样的感动了。人的阈值总是随时间而增长的，这是好事还是坏事呢？</p><p>我在这所高中成绩比较稳定位于年级中上，课余和寒暑假的时间都用来搞竞赛，虽然略吃力但也有所收获。正常情况下单凭高考考到中等985学校没问题，如果竞赛保送可以去前十学校。我自己高中时候的目标是上清华北大，但由于从当时的情况看来过于不切实际，因此也很少跟别人提起。到了高三，竞赛获了省一拿到了保送资格，报了清华和另外一所华五学校，清华没考过线，另外一所学校过了录取线却把我调剂到了法医专业。由于实在是不想读这个专业，不得不放弃保送资格强行拼高考。高三一年各次模拟考试我的成绩稳定在六百三四十（虽然事后看来，模拟题和高考真题完全不是一个路数），即便加上竞赛加分，离梦想的学校也相距太远。以至于到了高三的五月，我竟觉得“就这样吧，考到哪算哪”。</p><p>于是高考前最后的一个月我连作业都懒得做了，每天用几乎全部的时间研究历年高考真题，琢磨里面的规律。2011年高考的三天也波澜不惊的过去了，甚至高考之后答案都懒得去对，抱着出了分之后随便报个志愿的弃疗态度就去睡了十五天大觉。结果出乎意料的是超常发挥了近三十分，莫名其妙的考到了全市前五全省前五十，竟然可以真的报清北了。</p><p>鉴于当时的确不知道自己喜欢什么和适合什么专业，当天急急忙忙的就和清华签了约，而专业也是招生老师推荐给我的，我想都没想就接受了，身边的长辈也全都给我说：</p><p><strong>“你都上了清华了，学什么专业不重要”。</strong></p><p>那个时候自己对未来的想法只有： <strong>“我想做一个科学家”</strong></p><p>（然而可能连什么是科学家都不甚清楚），看到是个理工科专业，就糊里糊涂接受了。这就是一个典型的战术上勤奋战略上懒惰的例子。</p><p>我本人并非小县城出身，与“学霸”这个词更是八竿子打不着。但是，可能时至今日我自己身上仍然还有一些小县城学霸思维方式的残余。尤其在高考大省，我们很多人在18岁之前除了学习什么都不懂，而工人阶级或者知识分子的父母从小告诉我们的就是“<strong>读书改变命运</strong>”甚至是“<strong>考个好大学什么都不用愁了</strong>”。</p><p>固然在他们那个时代可能是这样，但是如今，这样的“<strong>努力就能得到回报</strong>”、“<strong>一分耕耘一分收获</strong>”的单线程的、线性的思维方式在更大程度上是对生活的一种不完全归纳甚至是片面归纳。从小地方考入最高学府，必须承认眼界和见识必然比不过一部分同龄人：2017年夏天我在斯坦福带过一个国内初中生组成的所谓“游学团”，平均年龄十三四岁，平均去过十几二十个国家，有的甚至是来美国开独奏会的，聊天当中处处被教做人，甚至有白比他们年龄长一倍的感觉，这样的眼界和见识怎么比？</p><p>事实上，比无头苍蝇乱撞般瞎努力更重要的是选择，比选择更重要的是信息，还有历史行程、社会形势、贵人相助以及运气等因素。<strong>有时候必须承认人与人的差距可能努力程度占三分，而其他因素，占七分，甚至九十七分</strong>。也因此，小县城学霸以及我这样的伪“小县城学霸”到了顶尖名校之后不可避免会有一定失落感，这也是现实存在的一个问题。</p><h2 id="section-2">2</h2><p>从这一刻起，没有金刚钻却强行揽了瓷器活的日子开始了。德不配位，必会撞墙。不过话说回来，如果没有当年的撞墙也不会有如今的成长。下面所有的故事，可以称为“<strong>一个名校（主流价值观中的）差生的试错与教训</strong>”。整个过程，也就是跟自己的局限、幼稚与无知斗争的过程。</p><p>虽然从考上清华那一刻开始自己就隐隐约约感觉到，高考一次的成功不能说明太多问题，更没有一劳永逸的感觉，然而现实永远比想象的更加要命。大一第一学期我和高三的辛苦程度差不多，但是期中考试的成绩竟然是（大约）年级倒数前三（年级100人左右），有一门差点没及格。看到成绩的时候我突然懂得了很多事情，而大学四年的目标，也由在本领域做出点成绩变成了安全毕业。</p><p>我当时的想法就是，既然学术（单说成绩方面）这条路走不通，那索性就去多试试别的。于是我从那之后几乎每学期都选35-40学分的课，想拓展自己的视野，找找自己可能能行的方面究竟在哪里。同时加了学生会，加了社团，认识了一些从当时看来闪闪发光的牛人，甚至还有过做了个互联网信息平台差点创业的经历。故事发展到这里，从外界看来似乎我的大学生活将要过得风生水起，然而似乎并没这么简单。</p><p>到了大二，我逐渐认识到自己对本专业并没有像自己想象的那般兴趣，而且学习也越来越吃力。带着困惑，我去咨询了一些前辈，前辈给的建议都是“好好学专业课，好好做科研，当你用到你所学的知识的时候你自然会喜欢的”（这是我唯一能得到的信息，尽管帮助着实有限）。于是我进了实验室（这在当时已经算起了个大早），然而发现根本不知道自己学的知识能够如何用到科研当中。此时此刻，同年级里有的同学已经开始接独立课题，有的同学已经有文章发表（非一作，不过放到现在，大二发一作的也已经不计其数了）。我在想，成绩拼不过不要紧，科研别输给他们。</p><p>终于在大三的时候，换过好几个实验室，我在一个交叉学科方向找到了自己的兴趣，而且这个方向一做就是四年。至于成绩，好的时候年级倒数1/3，差的时候年级倒数1/6，已经不在乎了。凭这样的成绩直接申国外博士几乎是不可能的，保研本系或者本校也差一点，于是不得不通过读硕士找个跳板，试图积累成绩以外的其他资源。其实在这个阶段，我也想过未来发展的其他可能性，但苦于真的不知道该去哪寻找信息（甚至那个时候大部分出国党都不知道有暑期研修这东西存在，反观今日，没个海外研修都不好意思出国），周围以我的眼界所能听到的声音也是“万般皆下品，唯有科研高”这样的价值观占主导，所以我并不觉得这里面有什么问题，或者并不知道自己选择这条路有多少是出于自己真心所想，而又有多少是出于随大流或者生活的惯性。</p><p>于是我算是在两眼一抹黑的情况下申请出国，匆匆忙忙准备申请材料，运气还算好，也拿到了较为不错的录取，还提前联系好了将来想跟的导师和实验室。再加上大四一年拼命科研，虽然到最后成绩仍然在倒数1/4，但国内国际期刊均有论文收获，这对于大学四年没得过任何荣誉（如果课余参加的一些数学物理方面的竞赛不算的话，只算官方荣誉）没拿过任何奖学金甚至很少受到赏识的自己来说也觉得没白来一遭。四年来受到的自信心打击太多，甚至到了最后已经被碾压到心如止水了，也越来越觉得有些时候人与人的差距不是通过努力能够追上的。即便如此，最后也涉险毕业，准备去美国开始一段新的人生，虽然直到本科毕业，我连一次出国经历也都没有。</p><h2 id="section-3">3</h2><p>在另一段“没有金刚钻却强行揽了瓷器活”的经历开始之前，我觉得这里有必要评价一下<strong>名校学渣</strong>这种客观存在且无数人经历过或正在经历的状态。</p><p>曾经知乎上有个问题，叫“在清华大学当学渣是种怎样的体验？”，回答者甚众，甚至在我本科时代的周围，包括我自己在内，都有很多人实实在在的经历过这样的挫折。很多时候当我们分享起自己被碾压的经历，会换来别人的不理解，甚至是“何不食肉糜”。然而这里面的痛苦却是真实的，我也见过有人因为学习成绩跟不上，退学的有之，休学的有之，抑郁的有之，甚至自杀的都存在。<strong>在很多情况下成绩成了衡量一个人唯一或者最重要的标准，赢者通吃，而在这一评价体系下没有胜出的人就很难得到主流舆论体系的承认。</strong></p><p>本科毕业之后我曾经跟一些这种处境的学弟学妹聊过，看到他们的迷茫我似乎也看到了当年自己的影子。那种自卑、焦虑、挫折、不被承认的感觉是的的确确困扰着我们当中很多人的，更何况名校学生对自己的期待和现实很难不产生心理落差。</p><p>由于人与人的痛苦是不共通的，每个人的解决方案也不尽相同。放在我身上，当我被学习成绩打击的时候，我当时的选择是在学生会做好事情，去实验室做好科研，而身边一些人可能是通过外出实习、体育运动、恋爱等方式排解。当被主流评价体系打击到怀疑自己存在的价值和意义时，我现在能给出的建议是，<strong>出去申请实习（甚至完全不必是自己对口行业的实习）</strong>，真正接触一下工作是怎样的，破除单一价值观带来的禁锢（不管这种单一价值观是外界强加的还是自己想象的），你会发现原来自己还能做出这样的贡献。我们在学校里的跑道只有一条，但实际上现实生活中的跑道有无数条。树挪死人挪活，换个环境很多时候都会带来不错的发挥。</p><p>现在，我想提出这样一个问题：<strong>如果读者作为名校毕业生，在大学四年过去之后，享受了较好的教育资源，你认为在什么方面自己应该具有一定优势</strong>？文章的最后我将谈一下自己对这个问题的看法。</p><h2 id="section-4">4</h2><p>2015年夏天，我仍然是在两眼一抹黑的情况下来到了美国。清华四年的经历虽然洗刷掉了我所有的骄傲和大部分的自信心，让我明白自己其实实力也就是中人之资，但还是模模糊糊抱着一个想当科学家的梦想。可是此时，我面临的主要矛盾已经变成了看到了更大的世界和自己内心可怜的信息量和姿势水平之间的矛盾。</p><p>本科期间我对象牙塔里的这一些规则或者体系有了一定的了解，但对社会的认知其实比刚入大学的时候并没有多少长进。在国内的时候，本身和其他背景的人交流就不多，科研压力也让我每天都在闷头向前赶，却很少抬起头来想想为什么，或者看看周围更广阔的风景。结果就是，到了美国，当不得不睁眼看世界的时候，发现身边的人一个比一个生活多姿多彩光鲜亮丽，而自己就像一个只知道埋头干活反而连活都干不好的傻B。</p><p>诸位别笑，这的确是我来到美国的第一感觉。一个见识有限的人突然到了一个大环境当中，不可避免有一种刘姥姥进了大观园的感觉。很多人的经历也让我大开眼界，有好的也有坏的，好的让我觉得“我大学期间都错过了什么”，而不好的让我觉得“原来还有这样的人存在，服气服气”。也因此，来到美国一两个月，我的三观就几乎被刷新了一遍。</p><p>在科研领域遇到的挫折（实际上什么都没做出来）让我发现这条路并非这么容易，生活中遇到过不靠谱的人和事太多我也只能说自己曾经太傻太天真。经历了刚出国换环境的阵痛，我再次陷入了不知道将来想做什么的困惑当中。但是所不同的是，这一次，我知道的信息更多，有一定可以选择的余地，也做好了试错的准备。</p><p>但是主业也容不得耽误，于是匆匆忙忙填完了博士申请，结果在关键时刻一篇投往顶级期刊的一作文章被拒，唯一可以拿得出手的砝码丢了，拿到的是隔壁学校降转硕士的录取（按照当时的情况留本校可能可以拿到博士，但在当时的环境下过得实在是太不开心，加之所在的研究方向不喜欢，不想一直这样下去）。</p><p>虽然不甘心但是也没办法，实力不济加上运气不好，只能接受现实，第一时间联系好了自己想做的方向的导师，因为正常情况下做得好是能留下来读博的。同时我利用这当中的空闲时间，投过咨询机构的实习，尝试了他们的思维方式。之后又投了几家金融业的实习，虽然做的也并不愉快。我试图通过这个，去弥补本科期间，甚至更早的时候，对这个社会，对各个将来可能从事的行业认知的缺失。然而事实告诉我，你还是太年轻，想的太简单。</p><p>说到这里，我想谈一下我们很多年轻人对这个社会认知的问题。我们在真正独立走上社会之前，接受的宣传是通过主流价值观为主的。但即使这样，这样的信息也难免偏颇，很多时候我们只看到了事物的A面，而没有看到B面，甚至可能还有S面。就单说科研领域，社会告诉我们的是做出成果无尽荣光，可是却不会告诉我们一将功成万骨枯，以及很多领域象牙塔和工业界存在脱节。金融领域我们看到从业者西装革履光鲜亮丽，但是背后却有朝八晚三不为人知的辛酸。创业圈更是这样，有人ICO，IPO一夜暴富，可更多的却是亏完了钱打水漂睡沙发的窘迫。</p><p>打个比方，我所在的城市高楼林立科技发达，然而当夜幕降临在一些不为人知的角落，也存在流浪者、大麻甚至是枪击。很多时候我们带着有色的，甚至可能是带着粉红泡泡的眼镜去看待社会，这个滤镜是我们了解社会的为数不多的途径，即便它存在失真。因此初出茅庐的人很容易去带着单纯的心态去相信A面是社会的全貌，然而当撞到南墙的时候，可能会遭到这样的批评：“<strong>你对社会的认知存在偏差，这锅你不背谁背</strong>？”你总觉得哪里不对，却无法反驳。</p><p>确实我们在往上攀登和向广阔的未知天地进发的时候，每一步都在离开自己的舒适区，这也就意味着我们在小圆内对世界的认知是没法向外延拓的。每一步都存在风险，每一步都在跳未知的坑，再加上人生不如意十之八九，难免怀疑人生，其实到最后不管是焦虑还是佛系，都是挣扎之后的结果。打碎面前的云山雾罩似乎很容易，但是人总愿意去相信事物对自己有利的一面，而潜意识的厌恶可能存在的风险。到了这里，闭关自守也罢，虚无主义也罢，随着这样的恶性循环慢慢成了我们挥之不去的绊脚石。也因此，很多时候虽然道理就在那里摆着，但唯有撞南墙尝苦果，才能让我们冲破这层人性原罪的束缚，去认知更大的更全面的新世界。</p><h2 id="section-5">5</h2><p>如果说刚刚出国的时候的情况是两眼一抹黑，那么一年之后的状态就是面前摆着几条道路，每条似乎都通向光明的前途，你却根本不知道该选哪一条。所幸导师对我很好，不管是在学术方面还是在生活方面都给了我很多人生经验和指引，让我有一种发自内心的因为受到知遇之恩所以必须要好好干活的感觉。受到这样的激励，我也立志在科研领域做出自己的一份贡献，然而由于接触的世界越来越大，我开始听到了很多不同的声音，而这些声音是我从来没有想象过的。</p><p>就比如说2016年很火的两篇帖子<a href="https://www.zhihu.com/question/50766928">《T大本科舍友阶级分化实录，该何去何从？》</a>与<a href="https://www.zhihu.com/question/44186681">《凭什么我辛苦二十年，现在却比别人差那么多？》</a>。从局外人的角度看来，我们可以说里面的主人公书生气过重，博士快要毕业了仍然没有认清楚一个事实，即你的学习成绩和学术成果和你将来在世俗评价标准下的成功只有很弱的相关性。可是话说回来，这样的谴责虽然道理正确，但并无助于解决问题，而且难免有一种站着说话不腰疼的感觉。更重要的是，久居象牙塔中的我们（包括我在内，也曾具有上述的思维误区），<strong>跟社会的接触少了，就很容易用这种单一的线性的价值观去评判自己和他人，尤其是和别人一比较，各种不如意便会纷至沓来</strong>。而且还是那个问题，人总愿意去相信对自己有利的观点，这就很容易用战术上的勤奋去掩盖战略上的懒惰（即便我在很长时间的科研当中也是如此，没仔细想why就去想how并亲身实践了无数种错误的how，结果自然是充满了无用功和南辕北辙）。</p><p>从上面这个现象引申出来另一个现象，即对部分存在产学研脱节现象学科的劝退，想必大家都了解了许多。如今信息比以前通畅得多，大学新生选择专业以及高校毕业生选择行业的时候比几年之前更懂得去参考历史的行程决定个人的发展方向，其实也未尝不是个好事。我个人曾经也是一个劝退者，但是如今，我觉得更应该做的是，消除信息不对称，也就是让了解信息有限的人们不仅认识到学术这条路的A面，更要了解其B面，对将来可能面临的风险有一个充分的估计，想明白自己追求的是什么。<strong>经过深思熟虑之后做出的选择，要比冲着高大上的标签或者七大姑八大姨的期待做出的选择，要更加理性</strong>。在这个方面，我自己就是活生生的目标不明确东一榔头西一棒子乱打的反例。</p><p>不得不承认做科研的经历是有一定痛苦的（其实任何事情都这样，不存在既高大上又光鲜亮丽的事情）。在自己的课题研究过程中，无数次遇到解不出来的公式，跑不出来的程序，和理论不一样的实验结果，以及各式各样用尽世间已有知识解释不了的问题。与此同时，周围的很多人在积极谋求转行，而金融和互联网成为了转行的首选。在这样的气氛中，除非是自己心里有明确目标且能塌下心来坐得住的人，否则包括我在内的很多人也难免被舆论影响，盖因心里虽然有目标但目标根本不坚定。此时此刻，我再次陷入迷茫，经常思考两个问题：1.我为什么要来这里？2.我将来到底想做什么？</p><h2 id="section-6">6</h2><p>时间到了2017年，在社会经历着指数型的科技发展浪潮的过程当中，一种名为勃学的新思潮发展的如火如荼。简而言之，勃学基于失败学，我们每个人都有自己的失败，我们要对自身的失败有清醒的认识。从外界看来，取得了一定世俗成就的人本应是成功的，这样的失败是不是何不食肉糜呢？但是确实，这种思潮确实反映了一部分通过自我奋斗达到一定高度，所看到的世界却灰暗了许多的人们的认同感，尤其是名校毕业生和中产人士。为什么明明已经得到了很多，它们却带来了无尽的挫败感呢？</p><p>这里不谈阶级固化、精英主义等高大上的话题，只想举一个例子。我们的祖辈可能一生都没有走出过小镇，日出而作日落而息生活简单而充实。我们每个人都有那种小学初中同学，早早离开学校进入社会，在我本人朋友圈里看到的一些例子是，他们没有离开家乡，在家乡做着一些相对低收入低技术含量的工作，例如摆摊开店，大部分已经结婚生子，看起来十分快乐，现世安稳岁月静好。而我们很多人，从高考的残酷竞争中杀出来进入名校，可能还出国见了更大的世界，或是找到了高收入的工作，可为什么得不到他们的那种快乐呢？</p><p>我们或许可以这样思考，古人提出过人生三境界，如果我们永远不走出自己的舒适区，那么就是“<strong>看山是山看水是水</strong>”，或者说“我未入过繁华之境，未听过喧嚣的声音，未见过太多生灵，未有过滚烫心情，所以也未觉大洋正中有多么安静”。也因此，对客观世界的认知符合自己的常识，可以很轻易的通过自己的常识得到快乐。</p><p>然而到了第二境界，“<strong>看山不是山看水不是水</strong>”，当我们见了更大的世界，发现自己的一套体系已经不足以解释自己看到的世界，就比如苦心孤诣探索学术十几年，主观上做出了足够的努力，却在客观上收获不了自己想要的“书中自有黄金屋，书中自有颜如玉”，认知崩塌陷入对自己的怀疑，不管归因于“错的是我”抑或是“错的是世界”，价值观就会解体重塑。无论是打破幻影还是打破枷锁，这个过程都是十分痛苦的。</p><p>然而大部分人终其一生也很难达到第三境界，“<strong>看山还是山看水还是水</strong>”，没有一定经历和成就，这一层是连想都很难想象到的。即便是”众里寻他千百度；蓦然回首，那人却在灯火阑珊处“的”啊，原来你也在这里“，不经历一番”昨夜西风凋碧树，独上高楼，望尽天涯路“和”衣带渐宽终不悔，为伊消得人憔悴“的苦痛挣扎也是无法实现的。由于我自己远远没有达到这一境界，因此不多赘述。但总之，”你所认为的世界运行的规律“和”世界真实的运行规律“两者之间大部分情况下存在夹角，甚至有时候夹角还是钝角。因此，你不得不不断地调整自己对世界的认知，而这里面的阻力和惯性，以及调整之后与之前状态的错位，就容易让人怀疑自己所想所做到底对不对。</p><p>曾经有两篇阅读量极高的文章，<a href="https://www.zhihu.com/question/52031149">《我上了985 211才发现自己一无所有》</a>和<a href="https://www.zhihu.com/question/65098412">《一个月就辞职，一个北大女生的求职悲欢》</a>。虽然和勃学并未有联系，但反映的问题却是共通的。有些人对这种现象的批评，包括”无病呻吟“也罢，”庸俗矫情“也罢，其实仔细想想是站不住脚的，由于痛苦不共通，这就像问抑郁症的人为啥要自杀一样缺乏同理心，更何况我相信每个人都有过这样的怀疑和纠结，只是程度不同而已。人生对每个人都只有一次，进入社会见到更大的世界，必然面临着自我和世界的冲突，而处在冲突当中的个人，很容易将自己遇到的问题放大，陷入痛苦，就像小时候辛苦搭好的积木倒塌之后仿佛失去了全世界一样。从这个意义上来说，我倒是觉得同为年轻人的自己和这里面提到的主人公有一定共鸣。同是天涯沦落人，相逢何必曾相识？不过话说回来，该类文章其实反映了一个问题，就是“<strong>学区房值钱（个人奋斗几十年都不一定买得起）</strong>”和“<strong>学历不值钱（名校毕业生的世俗成就达不到内心期望）</strong>”之间的矛盾。所以，这个错位背后，是哪里错了呢？（这个问题我也没有想明白）。</p><h2 id="section-7">7</h2><p>人生总有想不明白的哲学问题，就像科研也永远不能一路顺风一样。2017年发生过太多的事情，以至于刚脱胎换骨一遍的三观又被现实撕得粉碎。其间遇到了转博被拒的挫折，认识了硅谷科技界上百的IT工作者，回国看到了祖国翻天覆地的变化，也经历了对自己价值的彻底怀疑，人际关系的全面崩溃，甚至无数次夜不能寐在凌晨四点的帕罗奥图的天空下失声痛哭。</p><p>然而，冥冥之中总有个声音对我说：</p><p>“<strong>你得到今天的这一切，本来就是运气眷顾，你还想要什么呢</strong>？”</p><p>对啊，能走到今天，我所拥有的东西本来就不是和自己的能力匹配的，你是不是太贪得无厌了？</p><p><strong>“将寄托于花朵的思念用言语来表达出来，我丝毫不想伤害这个世界，如果没有聆听者的话，你就可以放任自己为所欲为吗？</strong></p><p><strong>然而，然而，你却把打算摘给别人的花留下，然后看到他的时候，却为了能得到赞扬把花送给他。</strong></p><p><strong>能找到这么漂亮的花，我是个好孩子吧。我来告诉你怎样去摘这朵花吧！</strong></p><p><strong>像这样假装亲切，好好炫耀一番。 以花为借口亲近他，伪君子。”</strong></p><p align="right">——《School Days》 清浦刹那</p><p>我真的问心无愧吗？</p><p>我的初心是什么？为什么扭曲成了现在这个鬼样子？你看重的东西真的不是虚无缥缈的吗？</p><p>是不是一开始一切都错了呢？</p><p>为什么在给别人建议的时候从未失手，到自己身上就撞南墙撞得头破血流了呢？</p><p><strong>为什么会这样呢？？？</strong></p><p>2017年的冬天格外寒冷，在无尽的挣扎当中，整个冬天不仅科研没有进展，甚至什么都没干，极端的时候甚至想用安眠药一了百了。<strong>（题外话：我知道很多人曾经有过这样的想法，但是在这种时候，请一定一定去找自己信得过的人倾诉，或者去找专业的人员帮助解决心理问题</strong>。如果没有，我本人愿意做一个倾听者，也承诺保密所了解到的一切信息，毕竟我曾经在这样的痛苦中挣扎过。这种情况的人，我彻夜长谈过的，至少有三个，他们现在都已走出了内心的阴影，重获了生活的快乐。）</p><p>人们对于坏消息的第六感往往是非常准确的，尤其是在人生境遇处在低谷的时候。当转博被拒的时候我就觉得有些一厢情愿的事情可能就要到头了。于是我通过各种途径联系了外校的部分教授，硬着头皮再次投了一次博士申请，但是越来越觉得我想要的东西和我正在做的事情已经完全南辕北辙了。</p><p>2017年12月，由于对人生的怀疑和对现实的弃疗，我时常和各种人聊天，谈论各种各样的迷茫及困苦。与三十五岁恋爱都没谈过的博后促膝长谈，也与四十几岁孤身一人漂泊美国的研究员对月举杯。这就是我曾经想做的事情的B面，可是如果换成我，我愿意去赌这一个未知的未来吗？扪心自问，答案是否定的。</p><p><strong>“差一点骗了自己骗了你</strong></p><p><strong>爱与被爱不一定成正比</strong></p><p><strong>我知道被疼是一种运气</strong></p><p><strong>但我无法完全交出自己”</strong></p><p align="right">——《可惜不是你》 梁静茹</p><p>所以，你确定自己不是叶公好龙吗？</p><p>这条路上所需要的努力（1分）、热情（3分）、运气（6分），你一个也没有。</p><p>你的初心可能没错，但是你所做的所想的，和你所追求的东西，完全是两个不同的方向。</p><p>这场持续三年的梦境，是时候该落幕了。</p><p>转过头来2018年到了，雨神似乎笼罩了湾区，终日不见阳光，让人的心情不由得也变得压抑。但是，梦醒了，是时候该回到原点重新开始了。</p><p>留下来读博做不到我不惊讶，联系好的教授放了我鸽子我也不惊讶，反正已经习惯了，起了个大早赶了个晚集的人又不止一个。然而收到第一个offer的时候我心里却五味杂陈。</p><p>一月的寒风中我前所未有的点上了一根烟让自己冷静下来（虽然我这25年来抽过的烟用两只手都能数过来）。烟雾中幻化出无数个平行世界，平行世界A中的我读完博士拿到教职走上人生巅峰令人艳羡，BCD中的我费了九牛二虎之力读完博士转行拿到了和别人本科毕业一样的工作，EFG……而平行世界XYZ中的自己，一生碌碌不得志，最后变成了MITBBS上的戾气溢出屏幕的精神已经不正常的中年loser。</p><p>路是自己选的，将来不管收获的是果，还是锅，也都是自己的。人生没有后悔药，做决策的时候多想想未来，而不要考虑沉没成本。</p><p><strong>“在终于释怀的那一刻</strong></p><p><strong>找回了久违的快乐”</strong></p><p align="right">——《我决定》 梁静茹</p><p>自己辛苦追寻的金刚钻终究没有得到，瓷器活也只能另请高明了。</p><h2 id="section-8">8</h2><p>2018年3月，我来到洛杉矶参加了一场学术会议，算是亲手给自己的追寻（本专业的）学术成就之路画下一个句号。讲完自己海报的一刻，突然有一种神清气爽的感觉，来不及放下东西，直奔加州理工去拜访几个多年未见的好朋友。此时此刻，我终于彻底想明白了一个道理，“<strong>科研和世俗成功两者之间即便不是垂直，夹角也至少有88°</strong>”。有人问88°是怎么得来的，我说用量角器量出来的。量出这个角度，我花了三年，而另一些人，甚至是十三年，三十年。饭桌上跟几个博士在读的朋友聊过，发现原来他们这等神人也有世俗的烦恼（虽然这是废话，但我的思维始终没有转过这个弯来）。家家有本难念的经，我们都是普通人，为什么要互相比较一些有的没的来给自己增加不必要的烦恼呢？求仁得仁，想要什么，就冲着那个方向放手一搏吧。</p><p>于是在几个月的刷题和几年来积累的计算机方面的知识、能力和项目经历的基础上，3月下旬的某一天我一夜之间通过各路朋友的内推向国内互联网公司投了五十份简历。虽然自己这几年来学术上不敢说有所收获，但是人脉和软实力上所积累的一切是我至今不悔留美三年的一个很重要的原因。虽然自己的知识体系必然不系统，但是我个人觉得自己的水平和科班CS大三大四的水平还是比较相当的（除了没有相关科研及实习经历以外）。闻道有先后，术业有专攻，如是而已，终究亡羊补牢也没晚多少。由于名校牌子的加成，整个求职过程还算顺利，连轴面试将近一个月，国内最后拿到4个offer，美国这边也投了几个小公司并都走到了最后一面，由于国内的offer到了，加之我个人在这里实在是过得不快乐，所以就没再继续面下去。本着此心安处是吾乡的原则，选完城市，再选公司，兜兜转转回到了最熟悉的五道口，加入一家蒸蒸日上的创业公司。（题外话：在五道口的前辈和友人们欢迎到时找我约饭。）</p><p>由于我实力有限加上并非走的正常校招流程，具体的求职细节就不在这里讲了，以防班门弄斧。如果同为转专业且对这个过程有兴趣将来可以私聊。当然不得不承认，由于求职始于匆忙，中间各种问题也出过不少，还出过一个差点没法毕业的乌龙，不过最终的结果还算不错，经过了几年的尝试，用了无数次排除法，在此刻虽然我也不敢说自己一定喜欢做什么，但是有把握说自己不喜欢做什么。这就像一个深度优先搜索一样，撞了南墙再回头，虽然有时候走了不少冤枉路撞了不少南墙，比别人晚到了目的地，可是看到的东西也更多了。</p><p>我曾经想过，如果高中多搞一门竞赛会怎样，大学选择一个不同的专业会怎样，研究生期间年年暑假出去实习会怎样，再仔细一想，在没有信息的情况下有多少人能做出这样的选择，而从最终结果看起来也不过是小的得失而已。有些事情放在当时看，重要吗？的确重要。可是从更长远的时间看来，什么都不是。如同幼儿园丢了个小红花，中学错过了喜欢的人，高考失利，求职遇挫，每个人都会对此做出应激反应，可是几年之后回首，也不过是饭桌上的一件谈资而已。</p><p>在上篇《老实人的归国与失身》中我曾经提到，求职过程中受到高中同学的内推，文中提到的高中同学本科位于家乡普通一本，通过考研来到了北京，积累了无数的实习经历最终在另一家独角兽企业独当一面。文中结尾提到的“明明是我先来的，为什么会变成这样呢？”本来是一个出自《白色相簿2》的梗，招致了一些不懂背景的人的误会。什么叫做线性思维/学生思维？这就是。早起的人不一定能赶上集，生活本来也没有先来后到。更何况别人在另一些方面比自己先来，比如工业界经验，比如对社会的认知，这都是象牙塔本身所给不了自己的。该篇文章中的主人公可能也是幸存者偏差的产物。</p><p>前段时间和朋友讨论，说到了不同的人在不同阶段所做的努力和承受的痛苦。从高考大省杀出来固然需要拼命，但从考研大省逆袭何尝不需要努力，而且艰苦程度也是非亲历者不能想象。我们能看到的例子是通过个人奋斗逆袭走上人生巅峰的人们，可是在这背后的B面，多少人在这一过程中折戟撞墙，最终成为了默默无闻的普通人，他们的故事又如何去表达出来呢？</p><p>什么是幸存者偏差？2018年高考全国二卷的作文就很能说明问题。</p><p><img src="https://img-blog.csdnimg.cn/20191202223556152.png" alt="在这里插入图片描述" /> 2018年6月，在即将离开美国的时候，我与科研大佬聊过他们申请教职当中的悲与喜，与硅谷科技从业者谈到科技下一步的发展方向，与现在的牛人本科生讨论他们的梦想，与00后一代学习他们的价值体系和处世方式，也与在国内的本科同学们交流不同行业的求职经历，以及当前日新月异的一线城市。曾经的自己只顾脚下的一条路，以为这就是整个世界，到头来路越走越窄以至于痛撞南墙。而抬起头来，发现参差多态乃是幸福本源，生活的跑道比自己想象的还要多得多。而这个时代恰恰也是信息量爆炸的时代，每个人都在追寻自己的梦想，就看谁能把握住这里面的机会。</p><p><strong>“回想起历往云烟终于让我全都看透</strong></p><p><strong>闭着眼低头走过那份温柔”</strong></p><p align="right">——《涙の理由》 栗林美奈实</p><p>总之，运气眷顾，在一个新的领域，我在不知道自己有没有金刚钻的情况下又接下了瓷器活。可如今最大的不同就是，即便没有金刚钻，我也知道如何去获得它。即便无法获得，我也知道如何打磨现有的资源使之无限接近真正的金刚钻。几年的摸索告诉了我这样的方法论，也算是不虚此行了。感谢一路上遇到的前辈和同辈，感谢他们给我的指引和人生经验，感谢遇到的挫折使我想明白自己内心深处究竟想要的是什么，感谢命运待我还算不薄。路还很长，所以更要心无旁骛望着远方。</p><p>最后放一张图，描述在这么多年来我”想当一名科学家“的这个愿望的强烈程度是如何变化的。虽然走到现在，这条路上的追寻暂时鸣金收兵了，但失之东隅收之桑榆，我也看到了更广阔的风景，开始了另一条路上新的追寻。</p><figure><img src="https://img-blog.csdnimg.cn/20191202223756684.png" alt="" /><figcaption>在这里插入图片描述</figcaption></figure><h2 id="section-9">9</h2><p>时光飞逝，我自己的学生时代即将结束。清华四年经历告诉了我自己的能力是有局限的，而美国三年经历告诉了我天有多高地有多厚。虽然初心只是自己幼稚时候的一厢情愿，但人在长大的过程中都会变的，甚至在半年之前我都没有料到今天是这样的结局，计划永远赶不上变化，而未知的未来可能信息量更大。有时候我在思考一个问题：我一路以来享受了最好的教育资源，可是有没有做出相符的成绩和贡献呢？如果没有的话，我从中积累了什么优势呢？眼界，人脉，还是对更大的世界的认知，对自己较为全面的评价？</p><p>如果限制我们的成就的是外在因素，很多时候我们只会惋惜命运待人不公。就如同如果基础教育能够普及，广袤的非洲能走出多少科学家？可是这里面无数的聪明人就因为食不果腹而终其一生无法为人类的发展做出贡献。而我自己，出身明明优于90%的同辈人，享受着最好的教育资源，不缺天时地利人和，想要找到贵人相助也不难，在人生的重要选择关口也不乏运气垂青，理应有着更大的使命，为这个世界做出自己更大的贡献。然而，有时候事情的发展偏离了预想的轨道，现实情况和自我期待出现错位，明明自己能力达不到却不得不去努力争取，明明追寻的东西就在眼前看似唾手可得但就是得不到，那种失落和不甘心，如同差一点爬到高峰又狠狠摔下，带来的痛苦就要比在平地上跌倒要强烈得多。</p><p>我的经历和反思讲完了，在最后，我觉得有必要给出一些简单的结论：</p><p><strong>（0）选择正确的方向比努力更重要，而信息的通畅是做出明智选择的保证。将获取信息的能力从1提到2，边际效应要远远胜过努力程度由9提到10。</strong></p><p><strong>（1）对于名校同学，有时候我们自身带着一种骄傲，但在校内评价体系下受到的打击会令我们自卑，两者叠加在一起会让我们很难对自己有准确的定位。然而，既然享受着资源优势，而且终究都要走出象牙塔走向社会（即便是立志从事科研工作也不能免除与更大的世界打交道），不如早点接触真实的工作环境，在找到自己价值所在的同时，提前排除错误选项或者选定正确选项，不至于到最后赢在了成绩却输在了社会经验。</strong></p><p><strong>（2）对于非名校同学，高考、毕业学校这些东西和将来的成绩的相关度是很弱的，通过主动获取信息做出明智的选择，避免无头苍蝇一般的无效努力，进而比名校学生优秀的也大有人在。没有那种小心翼翼瞻前顾后患得患失，反而更大胆去试错和总结经验，这些都不是从书本上能够学到的。</strong></p><p><strong>（e）(e=2.718281828) 综上所述，高考考的如何和去什么学校读书真的没那么重要，在需要努力的时候尽力而为，但永远记得仅仅是努力本身是没有价值的。打怪升级获得的奖励，从来都不是和打怪的难度成正比。</strong></p><p><strong>（3）老实人们会习惯性认为，努力读书、努力工作等等才是能力，然而，真相却是，“不老实”可能是一种比个人奋斗更重要的能力。</strong></p><p><strong>（π）(π=3.141592654) 因此，老实，其实并不是一个好事。</strong></p><p>满纸荒唐言，一把辛酸泪。</p>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Predecessor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>球员归化</title>
      <link href="/2019/09/10/%E7%90%83%E5%91%98%E5%BD%92%E5%8C%96/"/>
      <url>/2019/09/10/%E7%90%83%E5%91%98%E5%BD%92%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="历史时刻">历史时刻？</h2><p>2019年9月10日，2022年卡塔尔世界杯亚洲区预选赛，马尔代夫对阵中国。 归化球员Elkeson身披11号球衣，代表中国男足首发出战。 不久之前，Elkeson加入中国国籍，甚至连自己中文名字（艾克森）还不会写、国歌都不会唱，却成为了国家队的一员。</p><h2 id="福还是祸">福还是祸？</h2><p>我个人一直是坚定地反对无血缘归化，可是舆论好像支持的比较多。 回顾历史，国足只在2002年打进过一次世界杯。受到零几年黑球、假球的影响，我们的足球人才出现了严重的断档，自然国家队的水平也长期徘徊在亚洲二三流。 长期无缘世界杯让我们的球迷焦躁不安，更是由于老大喜欢足球，并且多次在公开场合表示要把中国足球搞上去，中国足协出了各种各样的奇葩政策：</p><ol type="1"><li>高薪聘请国外教练：里皮、阿里汉、卡马乔，解约卡马乔时支付5000万违约金；</li><li>在中超联赛施行U23政策，俱乐部也是上有政策、下有对策：U23球员的出场时间非常可怜，只是满足足协最低要求而已；</li></ol><p>可惜，就是不把主要精力放在青训上，总想着捷径：当然，这也是官僚一贯的急功近利作风，前人栽树后人乘凉的事想都不要想。 中超联赛踢得如火如荼，可是没有跑道的专业球场屈指可数； 外援垄断了射手榜和关键位置，国内球员只是陪跑； 如果静下心来踏踏实实做好青训，规范我们的联赛，开展俱乐部各级梯队的比赛，做好校园足球的普及和推广，就像姚明对中国篮球的改革一样，那么我们10年后一定可以打进世界杯，可惜领导从来不会有这样的耐心。 其实我们的目标只是打进世界杯而已，从来就不是提高中国足球的水平。围绕这个任务，所有的一切也都得到了非常合理的解释：在恒大建立国家集训队、无血缘归化...... 有人说归化可以带动中国足球水平的提高，让越来越多的孩子走上职业联赛，并且归化和青训可以同时进行。。。 就足协那个尿性，一旦从归化中尝到了甜头，还有谁愿意冒着风险、付出成本去做青训？ 我对Elkeson并不反感，从2013年亚冠就开始看他的比赛。在俱乐部层面，他给中国足球带来了亚冠冠军；平时生活中对中国文化也很尊重； 加入中国国籍可能有对于这个国家的热爱，但是背后是8~9位数的薪资以及复杂的利益纠缠，否则怎么会那么轻易主动放弃自己祖国国籍？ Elkeson只是第一个，后面可能还有高拉特、费尔南多、阿洛伊西奥......这就是恒大许老板所谓的“全华班”？ 这样即使打进世界杯，看着巴西人组成的前锋线，球迷心里真的还会有那份民族自豪感吗？ 另外，归化对于联赛的公平运作也是毁灭性的打击。其他俱乐部的外援都去恒大，足协钦定的政策谁敢不从？ 喊了这么多年联赛职业化，可惜中超的职业化只是政治因素下的可笑的玩物！ 曾经，国家队的每场比赛我都不会错过：赢了我激动地欢呼，输了我会难过好几天。见过它的高光，也陪伴它走过低谷。 这次我是真的失望到无法接受：从今天开始，我不会再关注中国足球的任何消息，这潭泛着恶臭的死水已经开始恶心到我了！ 以后就看看梅西、阿森纳和西班牙就行了~</p>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Football </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高墙与鸡蛋</title>
      <link href="/2019/09/06/%E9%AB%98%E5%A2%99%E4%B8%8E%E9%B8%A1%E8%9B%8B/"/>
      <url>/2019/09/06/%E9%AB%98%E5%A2%99%E4%B8%8E%E9%B8%A1%E8%9B%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="村上在耶路撒冷">村上在耶路撒冷</h2><p>2009年春天，村上春树获得了“耶路撒冷文学奖”。当时巴勒斯坦和以色列之间的冲突愈演愈烈，很多人都劝阻村上不要去以色列领奖，何况村上其实对公开场合发表演讲、接受采访这些事是比较排斥的。 他最终还是决定出席（原因他在演讲时解释了），并且发表了极为精彩的演说--“高墙与鸡蛋”。 全文还是不太好找，不过最终在林少华先生的博客中找到了中文版（林少华先生是村上小说很重要的翻译家）：<a href="http://blog.sina.com.cn/s/blog_48f36ce00100e3qd.html">原文链接</a></p><blockquote><p>我作为一个小说家，换句话说，作为以巧妙说谎为职业的人来到这里、来到耶路撒冷市。</p><p>当然，说谎的不都是小说家。诸位知道，政治家屡屡说谎，外交官和军人说谎，二手车推销员、肉铺和建筑业者也说谎。但小说家说谎和他们说谎的不同之处在于：小说家说谎不受道义上的谴责。莫如说谎说得越大越高明，小说家越能得到人们的赞赏和好评。为什么呢？</p><p>这是因为，小说家能够通过巧妙说谎、通过栩栩如生的虚构而将真相拽到另一场所投以另一光照。以其固有的形式捕捉真相并予以准确描述在许多情况下是不可能的。惟其如此，我们才要把真相引诱出来移去虚构地带，通过将其置换为虚构形式来抓住真相的尾巴。但为此必须首先在自己心底明确真相的所在，这是巧妙说谎所需要的重要资格。</p><p>可是今天我不准备说谎，打算尽可能说实话。一年之中我也有几天不说谎，今天恰好是其中的一天。</p><p>实话实说好了。关于此次来以色列接受耶路撒冷文学奖，不少人劝我最好拒绝。甚至警告说如果前来，将开展不买我的书的运动。无须说，理由在于加沙地区的激战。迄今为止，已不止一千人在被封锁的城区丧生，据联合国报告，大多数是儿童、老人等手无寸铁的平民。</p><p>接到获奖通知以来，我本人也一再自问：这种时候来以色列接受文学奖果真是妥当的行为吗？不会给人以支持作为纷争当事者一方、拥有占绝对优势的军事力量并积极行使的国家及其方针的印象吗？那当然不是我所希望的。我不认可任何战争，不支持任何国家。同时，自不待言，我的书在书店被人拒买也不是我所希求的。</p><p>然而，经过深思熟虑，我重新坚定了来这里的决心。原因之一，就在于有那么多人劝我最好别来。或许我有一种大部分小说家都有的“犟脾气”--别人叫我“别去那里”、“别干那个”、尤其那样警告我的时候，我就偏偏想去或想干，此乃小说家的nature（天性）。为什么呢？因为小说家属于这样一种人：无论刮怎样的逆风，也只能相信自己实际目睹、自己实际手摸的东西。</p><p>正因如此，我才出现在这里。较之不来，选择了来；较之什么也不看，选择了看点儿什么；较之什么也不说，选择了向诸位说点儿什么。</p><p>有一句话（message）请允许我说出来，一句个人性质的话。这句话在我写小说时总在我脑袋里挥之不去。它并非写在纸上贴在墙壁，而是刻于我的脑壁。那是这样一句话：</p><p><strong>假如这里有坚固的高墙和撞墙破碎的鸡蛋，我总是站在鸡蛋一边。</strong></p><p>是的，无论高墙多么正确和鸡蛋多么错误，我也还是站在鸡蛋一边。正确不正确是由别人决定的，或是由时间和历史决定的。假如小说家站在高墙一边写作--不管出于何种理由--那个作家又有多大价值呢？</p><p>那么，这一隐喻到底意味什么呢？在某种情况下它是简单明了的。轰炸机、坦克、火箭、白燐弹、机关枪是坚硬的高墙。被其摧毁、烧毁、击穿的非武装平民是鸡蛋。这是这一隐喻的一个含义。</p><p>但不仅仅是这个，还有更深的含义。请这样设想好了：我们每一个人都或多或少分别是一个鸡蛋，是具有无可替代的灵魂和包拢它的脆弱外壳的鸡蛋。我是，你们也是。再假如我们或多或少面对之于每一个人的坚硬的高墙。高墙有个名称，叫作体制（System）。体制本应是保护我们的，而它有时候却自行其是地杀害我们和让我们杀人：<strong>冷酷</strong>地、高效地、而且系统性地（Systematically）。</p><p>我写小说的理由，归根结底只有一个，那就是为了让个人灵魂的尊严浮现出来，将光线投在上面。经常投以光线，敲响警钟，以免我们的灵魂被体制纠缠和贬损。这正是故事的职责，对此我深信不疑。不断试图通过写生与死的故事、写爱的故事来让人哭泣、让人惧怕、让人欢笑，以此证明每个灵魂的无可替代性--这就是小说家的工作。我们为此而日复一日地认真编造故事。</p><p>我的父亲去年夏天去世了，活了九十岁。他是个退休教师，也是个兼职佛教僧侣。在研究生院就读期间被征召入伍，参加了中国大陆的战斗。我小的时候，他每天早上都在饭前向佛坛献上长长的深深的祈祷。一次我问父亲为什么祈祷，他回答为了在战场死去的人，为了在那里--无论友方敌方--失去性命的人。每次看见父亲祈祷的身姿，我都觉得那里似乎漂浮着死亡的阴影。</p><p>父亲去世了，其记忆--还没等我搞清是怎样的记忆--也彻底消失了。但是，那里漂浮的死亡气息仍留在我的记忆中。那是我从父亲身上继承的少数然而宝贵的事项之一。</p><p>我在这里想向诸位传达的只有一点：我们都是超越国籍、种族和宗教的一个一个的人，都是面对体制这堵高墙的一个一个的蛋。看上去我们毫无获胜的希望。墙是那么高那么硬，那么冰冷。假如我们有类似获胜希望那样的东西，那只能来自我们相信自己和他人的灵魂的无可替代性并将其温煦聚拢在一起。</p><p>请这样想想看。我们每一个人都有可以拿在手中的活的灵魂，体制则没有。不能让体制利用我们，不能让体制自行其是。不是体制创造了我们，而是我们创造了体制。</p><p>我想对诸位说的仅此一点。</p><p>荣获耶路撒冷奖，我很感谢。感谢世界很多地方都有看我书的人。我要向耶路撒冷的每一位读者致以谢意。毕竟是因了你们的力量我才出现在这里的。但愿我们能够共同拥有什么--非常有意义的什么。我很高兴得以来此向诸位讲话。</p></blockquote><p>村上的小说一直强调个人的自由，他也一直希望每个个体都能拥有独特的生活方式、活出自我，而不是被体制化（Institutionalization）。 其实发表演讲时，如果不是因为战争的背景以及村上的解释，那么我对于<strong>永远站在鸡蛋一边</strong>是无法苟同的：试想如果鸡蛋（弱势者）的行为的确非常过分，那么如此绝对地站队是不是有些混淆是非呢？ 不过村上的浅层隐喻是在讽刺战争对平民的伤害，更深层次的是对体制的搏斗以及自由的向往，这些观点足以让我信服。</p><h2 id="hard-boiled">Hard-Boiled</h2><p>这篇演说比较有趣的地方在于：村上这个系统建构狂魔为读者解释了他的一本小说的名字（这个我也是从杨照老师那里了解的）：《世界末日与冷酷仙境》。 这本小说本来是直接用英语命名，把英语写成日语外来语起名。原来叫做Hard-Boiled Wonderland and the End of the World，Wonderland比较明显出自于Alice's Adventures in Wonderland（爱丽丝梦游仙境），但是Hard-Boiled只看字面意思的话，很难理解为什么会翻译成冷酷，应该是沸腾加热这种意思才对啊~ Hard-Boiled一般就只用在美国人吃早餐时候：服务员会问你要的eggs是要soft-boiled or hard-boiled？全熟的蛋也不能叫做冷酷吧？ 美国在上世纪有一类流行小说叫做Hard-Boiled Detective Story，村上一直受西方文学影响，而且很喜欢这种类型的小说。 所谓硬汉侦探小说，其实并不是大家想象中的那种超级英雄：无坚不摧、拯救世界。 这种Hard-Boiled“硬汉”其实只是看起来很酷，戴个墨镜，实际上只是在逞强而已，他们是在社会上摸爬滚打多年、不断受挫，内心很柔弱、很受伤的一群人，成为侦探是因为他们和罪犯有着相似的生活经历，所以了解他们。 这种类型的硬汉虽然不会轻易认输，但是其实也是在苦苦支撑而已，就像是早餐店里那种Hard-Boiled eggs，以为自己成熟了，但是如果这种蛋碰到墙上，那么破碎的必然是蛋，而高墙不会有任何损失。 即使这样，村上也还是会<strong>永远站在鸡蛋一边，无论高墙多么正确和鸡蛋多么错误。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Literature </tag>
            
            <tag> Haruki Murakami </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>翻唱与抄袭</title>
      <link href="/2019/08/31/%E7%BF%BB%E5%94%B1%E4%B8%8E%E6%8A%84%E8%A2%AD/"/>
      <url>/2019/08/31/%E7%BF%BB%E5%94%B1%E4%B8%8E%E6%8A%84%E8%A2%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由">缘由</h2><p>曾经，《老男孩》风靡一时，无数人热泪盈眶，我也感动得一塌糊涂。筷子兄弟也凭借此歌迅速走红，获得无数粉丝青睐。 我起初对日本音乐了解甚少，平时也不太接触。偶然听到山口百惠、中森明菜等一些昭和时代歌姬的演唱之后，才逐渐开始欣赏日本音乐。 毫不夸张地说，日本音乐在亚洲绝对顶级水准。这也造就了一大批靠翻唱、抄袭日本曲目成名的歌手，以及一些我们曾经为之泪流满面的歌曲。 当然，拿到原创的允许进行翻唱无可厚非，但是没有版权、重新填词并公开商演又是一种怎样的行为呢？</p><h2 id="ありがとう">ありがとう</h2><p>大桥卓弥的《ありがとう》（谢谢），就是《老男孩》的原曲。 <a href="https://b23.tv/av22011510">原曲</a>关于亲情的MV非常感人。</p><p>筷子兄弟在没有授权的情况下填词发布，后来面临起诉时才购买版权。这种“先上车后补票”的行为并不少见，据说《父亲》的旋律是把福山雅治的《milk tea》副歌部分和宫本笑里的《stay with me》副歌部分拼凑到一起的，不过并没有实锤。有人戏谑（ありがとう网易云热评）：“在知道老男孩是翻唱的之后，我一点也不好奇为什么筷子兄弟的曲风一下从老男孩变成了小苹果”。</p><h2 id="反思">反思</h2><p>很多网友戏称：中岛美雪养活了大半个华语音乐圈。 很不幸，国内许多歌手的代表作都是翻唱美雪阿姨的：任贤齐的《伤心太平洋》、王菲的《容易受伤的女人》...... 刘若英的《后来》是翻唱Kiroro的《未来へ》，《很爱很爱你》也是翻唱这个组合的同一张专辑...... 再看最近，自称“原创歌手”的花粥代表作《盗将行》、《出山》都涉嫌抄袭； <a href="https://b23.tv/av45107069">《出山》原曲</a> 附上<a href="https://b23.tv/av45298740">左右声道对比</a></p><p>神曲《起风了》也是翻唱高桥优的《ヤキモチ》（吃醋），附上<a href="https://b23.tv/av23618612/p1">MV链接</a> 真的太多太多了，我曾经在贴吧看过一个统计，国内知名歌手翻唱日本歌手的歌曲一共列了好几十个页面...... 说这些不是为了引战，我们要正视差距，填词都很不错，优秀的作曲真的太少太少，所以周杰伦才那么难能可贵。 反观日本，几乎每个歌手都是创作者，作品的旋律也非常优美，能把人深深吸引进故事里，而不是写一些口水歌。 唱功再好，最多就是个singer，成为不了musician~</p>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Norwegian Wood</title>
      <link href="/2019/08/26/Norwegian%20Wood/"/>
      <url>/2019/08/26/Norwegian%20Wood/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>《挪威的森林》是村上春树很有名的一部小说，但我想大多数人阅读的时候都只是把书名当作一个符号，而不是作为故事去追究。 我国台湾知名文学评论家杨照先生说过：村上的书里有太多太多典故，如果你只是把这些典故当作符号看待，那么会少很多阅读的乐趣。你探寻这些典故越深，就越能体会村上想要表达的意思。 那么《挪威的森林》是怎么来的？</p><h2 id="the-beatles">the Beatles</h2><p>了解村上的人都知道：他生命中最重要的几件事就是写作、听音乐、长跑和翻译。 Norwegian Wood(This Bird Has Flown)是Beatles在1965年发行的歌，这首歌的歌词非常简单：</p><blockquote><p>I once had a girl Or should I say she once had me She showed me her room Isn't good Norwegian wood?</p></blockquote><blockquote><p>She asked me to stay And she told me to sit anywhere So I looked around And I noticed there wasn't a chair I sat on a rug biding my time</p></blockquote><blockquote><p>Drinking her wine We talked until two and then she said "It's time for bed" She told me she worked In the morning and started to laugh I told her I didn't And crawled off to sleep in the bath</p></blockquote><blockquote><p>And when I awoke I was alone This bird had flown So I lit a fire Isn't it good Norwegian wood?</p></blockquote><p>歌词的寓意很明显：这个女孩喜欢男孩，想和他滚床单，男孩激动地陪她喝酒聊天。 等他早上醒来的时候，发现女孩已经走了，本来在他手里的鸟飞走了，好似喝醉后的一场梦，转瞬无影踪。 可是Norwegian wood为什么莫名其妙出现在这里？</p><h2 id="故事">故事</h2><p>这首歌基本上是John Lennon完成的，歌词原本是<strong>Isn't good? Knowing she would</strong> 创作完成后，唱片公司觉得歌词的意味太明显，在60年代这样的歌词有些太过直白。 唱片公司要求John修改歌词，调皮的John就利用谐音把<strong>Knowing she would</strong>改成了<strong>Norwegian wood</strong> 改完之后，起初录音时候他还是唱<strong>Knowing she would</strong>，于是唱片公司下了最后通牒：如果还这样唱，那这首歌不能收录。 就这样，John Lennon唱出了<strong>Norwegian wood</strong>，村上听着<strong>Norwegian wood</strong>写出了<strong>Norwegian wood</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Literature </tag>
            
            <tag> Haruki Murakami </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++ FAQ</title>
      <link href="/2019/03/04/C%20&amp;%20C++%20FAQ/"/>
      <url>/2019/03/04/C%20&amp;%20C++%20FAQ/</url>
      
        <content type="html"><![CDATA[<h2 id="指针和引用">指针和引用</h2><ol type="1"><li>指针是一个新的变量，存储另一个变量的地址，可以通过指针修改另一个变量；引用是一个别名，对引用的操作就是对变量本身的操作。</li><li>指针可以有多级；引用只有一级。</li><li>指针的大小一般4B；引用的大小一般取决于被引用对象大小。</li><li>指针可以为空；引用不能为空。</li><li>传参选择：返回被调函数局部变量的内存时传指针，使用后及时释放避免内存泄漏；返回局部变量的引用没有意义，会自动销毁。传指针需要单独开辟内存；在对栈空间大小敏感时（如递归）传引用，无需创建临时变量，开销更小。类对象作为参数时传引用是C++传递类对象的标准方式。</li></ol><h2 id="空类">空类</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// sizeof(A) = 1</span></span><br></pre></td></tr></table></figure><p>空类的大小之所以为1，因为标准规定完整对象的大小&gt;0，否则两个不同对象可能拥有相同的地址，故编译器会生成1B占位符。 那么两个对象为什么不能地址相同呢？</p><blockquote><p>There would be no way to distinguish between these two objects when referencing them with pointers.</p></blockquote><p>空类中到底都有什么呢？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">A</span>();  <span class="comment">// 默认构造函数</span></span><br><span class="line"><span class="built_in">A</span>(<span class="keyword">const</span> A&amp;);  <span class="comment">// 拷贝构造函数</span></span><br><span class="line">~<span class="built_in">A</span>();  <span class="comment">// 析构函数</span></span><br><span class="line">A&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> A&amp;);  <span class="comment">// 赋值运算符</span></span><br><span class="line">A* <span class="keyword">operator</span>&amp;();  <span class="comment">// 取址运算符（非const）</span></span><br><span class="line"><span class="keyword">const</span> A* <span class="keyword">operator</span>&amp;() <span class="keyword">const</span>;  <span class="comment">// 取址运算符（const）</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>仅仅声明一个类，不会创建这些函数。只有当定义类的对象时，才会产生。 ## 多态和虚函数 面向对象的语言的特点就是封装、继承和多态。封装和继承都比较好理解，那么多态到底什么意思？ 简单来说：不同对象接收相同的消息产生不同的行为。 C++中的多态分为静态多态(函数和运算符重载)和动态多态(继承和虚函数)。 定义虚函数<code>f</code>，是为了用基类的引用或指针调用派生类的<code>f</code>，最终调用哪个<code>f</code>取决于传入的实参，即在运行时选择函数的版本，也就是所谓的动态绑定。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Base&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Derived</span> :</span> <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;  <span class="comment">// 覆盖Base::f</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Derived&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Base* p = <span class="keyword">new</span> <span class="built_in">Derived</span>();</span><br><span class="line">p-&gt;<span class="built_in">f</span>();  <span class="comment">// 调用派生类的f()</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基类指针<code>p</code>调用虚函数<code>f</code>，<code>f</code>作用的可能是基类对象，也可能是派生类对象，这就是多态（同样消息作用于不同类型对象产生不同的行为）的一种方式，即动态多态。 正因为编译器无法确定使用哪个虚函数，所以所有的<strong>虚函数必须定义</strong>，否则编译器会报错。</p><p>构造函数不能是虚函数，因为构造对象时必须明确知道其类型。如果是虚函数，调用时只需要提供接口，编译器无法知道你想构造继承树的哪个类型。 C++他爹Bjarne Stroustrup是这么说的： &gt; A virtual call is a mechanism to get work done given partial information. In particular, "virtual" allows us to call a function knowing only an interfaces and not the exact type of the object. To create an object you need complete information. In particular, you need to know the exact type of what you want to create. Consequently, a "call to a constructor" cannot be virtual.</p><p>析构函数是虚函数，因为要确保执行相应对象的析构函数。如果基类指针指向派生类对象，会调用派生类的析构函数，然后调用基类的析构函数。 <img src="https://img-blog.csdnimg.cn/20200229202936650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0VJTWFkcmlnYWw=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /> ## 纯虚函数 与虚函数必须定义相反，纯虚函数无须定义（要定义必须在类的外部），含有纯虚函数的类是<strong>抽象基类</strong>。 抽象基类定义好接口，继承该类的其他类可以覆盖这个接口。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>= <span class="number">0</span>;  <span class="comment">// 声明纯虚函数</span></span><br></pre></td></tr></table></figure><p>之所以要引入纯虚函数，是因为很多时候基类产生对象是没有意义的。比如动物类可以派生出狗、猪等子类，但动物类生成对象毫无意义。 因此，不能创建抽象基类的对象，派生类必须覆盖(override)以定义自己的<code>f</code>，否则派生类仍然是抽象基类。 ## 重载&amp;覆盖&amp;重写</p><ul><li>重载(overload)：在类内部发生。函数名相同，参数个数、参数类型、参数顺序至少有一种不同。返回值类型可以相同，也可不同；</li><li>覆盖(override)：覆盖基类的虚函数。函数名相同，参数相同，基类函数必须是虚函数；</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f1</span><span class="params">(<span class="keyword">int</span>)</span> <span class="keyword">const</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f3</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">D1</span> :</span>B &#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">(<span class="keyword">int</span>)</span> <span class="keyword">const</span> <span class="keyword">override</span></span>;  <span class="comment">// 正确：f1与基类中的f1匹配</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">(<span class="keyword">int</span>)</span> <span class="keyword">override</span></span>;  <span class="comment">// 错误：B没有形如f2(int)的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f3</span><span class="params">()</span> <span class="keyword">override</span></span>;  <span class="comment">// 错误：f3不是虚函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f4</span><span class="params">()</span> <span class="keyword">override</span></span>;  <span class="comment">// 错误：B没有名为f4的函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>重写(overwrite)：派生类的函数屏蔽了同名的基类函数： 派生类函数与基类函数同名，参数不同。不论基类函数是否为虚函数，都会被隐藏； 派生类函数与基类函数同名，参数相同。基类函数不为虚函数，会被隐藏； ## static C++中<code>static</code>关键字用来<strong>声明类的成员</strong>：</p></li><li><p>类的静态成员变量或函数属于类而非对象，只有一份副本；</p></li><li><p>静态成员函数没有<code>this</code>指针，只能访问类的静态数据；</p></li><li><p>静态成员函数不能定义为虚函数；</p></li><li><p>静态成员变量初始化<code>int Base::name = 0</code></p></li></ul><p>如果不是在类中声明成员，还有下面用法：</p><ul><li><p>隐藏作用：多文件编译时，定义的全局变量和函数都是整个工程可见的，只要使用时加上<code>extern</code>关键字即可。如果加上<code>static</code>关键字，那么该变量或函数就变为<strong>仅当前文件</strong>可见，这样我们可以在不同文件中定义同名的变量或函数而不用担心冲突。</p></li><li><p>全局生存期：<code>static</code>变量存储在静态数据区，默认值为0，<strong>只被初始化一次</strong>，即使作为局部变量，生存期也为整个程序，但作用域与普通变量相同，退出函数后即使变量存在，但不能使用。 ## const</p></li><li><p>定义const对象：一旦创建其值不能改变，故const对象必须初始化。</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> bufSize = <span class="number">512</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> bufSize = <span class="number">512</span>;  <span class="comment">// the same as the previous one</span></span><br></pre></td></tr></table></figure><p>由于const对象默认只在文件内有效，所以如果要在文件间共享：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// file1.cpp定义并初始化</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">int</span> bufSize = <span class="number">512</span>;</span><br><span class="line"><span class="comment">// file1.h可以仅声明，不初始化</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">int</span> bufSize;</span><br></pre></td></tr></table></figure><ul><li>常量指针（const pointer）：指针本身（存在指针中的地址）不可变。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span>* <span class="keyword">const</span> p = &amp;num;  <span class="comment">// p将一直指向num</span></span><br></pre></td></tr></table></figure><ul><li>指向常量的指针（pointer to const）：指针指向的对象不可变。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">double</span>* p = &amp;pi;  <span class="comment">// 错误，p是一个普通指针</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span>* p = &amp;pi;  <span class="comment">// 正确</span></span><br><span class="line">*p = <span class="number">4.1</span>;  <span class="comment">// 错误，不能改变*p的值 </span></span><br></pre></td></tr></table></figure><ul><li>修饰成员函数</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> <span class="keyword">const</span></span>;  <span class="comment">// 不能改变数据成员，const对象不能调用非const成员函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>修饰类对象</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> A obj;  <span class="comment">// obj为常量对象，任何成员都不能被修改，任何非const成员函数都不能被调用</span></span><br><span class="line">obj.<span class="built_in">f1</span>();  <span class="comment">// 错误</span></span><br><span class="line">obj.<span class="built_in">f2</span>();  <span class="comment">// 正确</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> A* obj  = <span class="keyword">new</span> <span class="built_in">A</span>();</span><br><span class="line">obj-&gt;<span class="built_in">f1</span>();  <span class="comment">// 错误</span></span><br><span class="line">obj-&gt;<span class="built_in">f2</span>();  <span class="comment">// 正确</span></span><br></pre></td></tr></table></figure><ul><li>转为非const</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* pc;  <span class="comment">// pc指向内容不可变</span></span><br><span class="line"><span class="keyword">char</span>* p = <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span>*&gt;(pc);  <span class="comment">// 正确，但是通过p写值是未定义行为</span></span><br></pre></td></tr></table></figure><h2 id="类型转换">类型转换</h2><p>类型转换分为隐式转换和显式转换。 显式转换有四种：</p><ul><li><code>static_cast</code> 没有底层const都可以，使用比较普遍。 基类-&gt;派生类：不安全 主要执行非多态转换，代替C中的转换。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span>* p = &amp;d;</span><br><span class="line"><span class="keyword">double</span>* dp = <span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>*&gt;(p);</span><br></pre></td></tr></table></figure><ul><li><code>dynamic_cast</code> 运行时类型检查， 将基类指针或引用安全转换为派生类的指针或引用：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// type是类，且有虚函数</span></span><br><span class="line"><span class="keyword">dynamic_cast</span>&lt;type*&gt;(e);  <span class="comment">//e是指针</span></span><br><span class="line"><span class="keyword">dynamic_cast</span>&lt;type&amp;&gt;(e);  <span class="comment">//e是左值</span></span><br><span class="line"><span class="keyword">dynamic_cast</span>&lt;type&amp;&amp;&gt;(e);  <span class="comment">//e不是左值</span></span><br></pre></td></tr></table></figure><ul><li><code>const_cast</code> 改变底层const。 常量指针转为非常量指针。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* cp;</span><br><span class="line"><span class="keyword">char</span>* q = <span class="keyword">static_cast</span>&lt;<span class="keyword">char</span>*&gt;(cp);  <span class="comment">// wrong, static_cast不能用于底层const</span></span><br><span class="line"><span class="keyword">char</span>* p = <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span>*&gt;(cp);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li><code>reinterpret_cast</code> 比较危险，不太用。处理无关类型转换，重新解释对象的比特模型。 ## new/delete/malloc/free <code>new/delete</code>是C++运算符，需要编译器支持，所以不需要指定大小，返回相应对象类型的指针，分配失败会抛出<code>std::bad_alloc</code>异常，<code>new</code>会调用<code>operator new()</code>申请内存(用<code>malloc</code>实现)，调用构造函数初始化成员变量，返回相应指针，<code>delete</code>先调用析构函数，再调用<code>operator delete()</code>函数释放内存(用<code>free</code>实现)； <code>malloc/free</code>是库函数，不由编译器控制，需要显式指出大小，返回<code>void*</code>，需要强制类型转换，分配失败返回<code>NULL</code>指针，无法完成对象的构造和析构。</li></ul><h2 id="智能指针">智能指针</h2><p><code>new</code>完后没有<code>delete</code>，内存泄漏。为了减少程序员的负担，引入智能指针：</p><ul><li><code>shared_ptr</code> 允许多个指针指向同一个对象。通常与<code>make_shared</code>函数结合食用：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shared_ptr&lt;string&gt; p = make_shared&lt;string&gt;(<span class="number">10</span>, <span class="string">&#x27;9&#x27;</span>);</span><br></pre></td></tr></table></figure><p>实现方式一般是reference counting，在堆上申请资源并返回指针后，在堆上申请一个共享的引用计数器，每来一个指针指向该对象，++计数器。当计数器为0时，会自动释放指向的对象。 2个指针成员，一个指向对象，一个指向计数器 面试有可能被要求手撕一个： <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mySharePtr</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">mySharePtr</span>() :<span class="built_in">refCnt</span>(<span class="literal">nullptr</span>), <span class="built_in">ptr</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySharePtr</span>(T* res) :<span class="built_in">refCnt</span>(<span class="literal">nullptr</span>), <span class="built_in">ptr</span>(res) &#123;</span><br><span class="line"><span class="built_in">add</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySharePtr</span>(<span class="keyword">const</span> mySharePtr&lt;T&gt;&amp; p) :<span class="built_in">refCnt</span>(p.refCnt), <span class="built_in">ptr</span>(p.ptr) &#123;</span><br><span class="line"><span class="built_in">add</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">mySharePtr</span>() &#123;</span><br><span class="line"><span class="built_in">remove</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// lvalue is assigned, --counter</span></span><br><span class="line">mySharePtr&lt;T&gt;&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> mySharePtr&lt;T&gt;&amp; that) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> != &amp;that) &#123;</span><br><span class="line"><span class="built_in">remove</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;ptr = that.ptr;</span><br><span class="line"><span class="keyword">this</span>-&gt;refCnt = that.refCnt;</span><br><span class="line"><span class="built_in">add</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> mySharePtr&lt;T&gt;&amp; other) &#123;</span><br><span class="line"><span class="keyword">return</span> ptr == other.ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> mySharePtr&lt;T&gt;&amp; other) &#123;</span><br><span class="line"><span class="keyword">return</span> !<span class="keyword">operator</span>==(other);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">T&amp; <span class="keyword">operator</span>*() <span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">return</span> *ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">T* <span class="keyword">operator</span>-&gt;() <span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numRef</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (refCnt) &#123;</span><br><span class="line"><span class="keyword">return</span> *refCnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="comment">// if null, create counter = 1, else ++counter</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (refCnt) &#123;</span><br><span class="line">++(*refCnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">refCnt = <span class="keyword">new</span> <span class="built_in"><span class="keyword">int</span></span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --counter, if counter = 0, free memory</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (refCnt) &#123;</span><br><span class="line">--(*refCnt);</span><br><span class="line"><span class="keyword">if</span> (*refCnt == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> refCnt;</span><br><span class="line"><span class="keyword">delete</span> ptr;</span><br><span class="line">refCnt = <span class="literal">nullptr</span>;</span><br><span class="line">ptr = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span>* refCnt;</span><br><span class="line">T* ptr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><ul><li><code>unique_ptr</code> 看名字就知道，独占对象。 ##指针和引用 引用只是一个别名，不是一种数据类型，不占存储空间，不能建立数组的引用 引用必须初始化，指针不必 引用初始化后不能改变，指针可以改变指向的对象 不存在指向空值的引用，存在指向空值的指针 ## 成员变量初始化顺序 基类静态变量/全局变量：静态成员变量必须类外初始化 派生类静态变量/全局变量 基类成员变量：按照在类中定义的顺序，而不是初始化列表中的顺序 派生类成员变量 ## TODO 初始化列表好处： 1、const成员变量只能 2、引用只能 3、效率：初始化列表比赋值操作少一次默认构造函数，因为程序要默认构造临时对象（等号右边）后才能赋值</li></ul><p>函数缺省： 某个参数有默认值，缺省参数仍在后边 调用时如果略去一个参数传递，则略去后面所有</p><p>异常处理： 抛出异常，没有被特定的catch语句捕获，函数调用堆栈会被解退（函数终止，销毁局部变量，控制权转到调用它的那个函数）， 并在下一个外层try..catch捕获，最后没有任何catch捕获，调用terminate，abort退出。</p><p>传参时传引用与传指针效果相同 传引用，没有产生实参的副本，直接对实参操作 传指针，被调函数需要给形参分配空间，可读性差，需要传地址做实参，传引用更简单清晰</p><p>预处理、编译、汇编、链接</p><p>操作系统 * 用户告诉操作系统执行hello程序 * 操作系统到硬盘找到该程序 * 由编译程序将用户源程序编译成若干个目标模块 * 由链接程序将目标模块和相应的库函数链接成装入模块 * 操作系统分配内存，由装入程序将装入模块装入内存 * 为执行hello程序创建执行环境（创建新进程） * 操作系统设置CPU上下文环境，并跳到程序开始处 * 程序的第一条指令执行 * 程序执行与printf对应的系统调用 * 操作系统分配设备 * 执行显示驱动程序 * 窗口系统将像素写入存储映像区</p><pre><code>（1）每个节点或者是黑色，或者是红色。</code></pre><p>　　(2)根节点是黑色。</p><p>　　(3)每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]</p><p>　　(4)如果一个节点是红色的，则它的子节点必须是黑色的。</p><p>　　(5)从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。[这里指到叶子节点的路径]</p><p>模板特化、偏特化 内存池</p><p>volatile： 加volatile的关键字不进行编译器优化，保证对特殊地址的稳定访问 不能把他放在cache或寄存器中重复使用 防止优化编译器把变量从内存装入 CPU 寄存器 两个线程有可能一个使用内存中的变量，一个使用寄存器中的变量，这会造成程序的错误执行</p><p>拷贝构造： 创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象 通过使用另一个同类型的对象来初始化新创建的对象。 复制对象把它作为参数传递给函数。 复制对象，并从函数返回这个对象。</p><p>map key类型：必须支持&lt;运算符</p><p>数据库缓存一致： 并发操作导致不一致，本质上修改数据库和删除缓存耦合在一起，使得其他操作有可能读出脏数据 解决方案：解耦，延迟双删：写-&gt;删缓存-&gt;修改数据库-&gt;延时-&gt;再次删缓存 二：内存队列：写修改数据库，将数据id放入队列，消费者线程消费即可</p><p>浏览器： DNS解析（DNS缓存、OS缓存、路由器缓存、递归搜索）、尝试建立TCP连接、发送HTTP请求(get)、服务器处理请求（查询） 返回HTML，浏览器解析渲染、关闭TCP连接</p><p>线性探测、拉链、再哈希、公共溢出区</p><p>UDP对实时性要求高，数据准确性要求不是太高的场合、视频通话、QQ主要UDP为主，TCP为辅 ## Resource <a href="https://en.cppreference.com/w/">cppreference</a></p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Language </tag>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统 FAQ</title>
      <link href="/2019/02/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20FAQ/"/>
      <url>/2019/02/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20FAQ/</url>
      
        <content type="html"><![CDATA[<h2 id="进程和线程">进程和线程</h2><ol type="1"><li>联系: 线程存在于进程内部, 一个进程可以有多个线程, 一个线程只能属于一个进程.</li><li>区别: 进程是运行时程序的封装, 是系统进行资源分配和资源调度的基本单位; 线程是进程的子任务, 是CPU分配和调度的基本单位. 进程创建需要系统分配内存, CPU和文件句柄等资源, 销毁时要进行相应的回收, 因此进程的管理开销大; 线程开销小. 进程间不会互相影响; 一个线程崩溃会导致进程崩溃, 从而影响其他线程. ## 进程调度算法</li><li>先来先服务(FCFS): 按照到达任务队列的顺序调度, 非抢占式, 易于实现, 效率低性能差, 有利于CPU繁忙型作业(长作业)不利于IO繁忙型(短作业).</li><li>短作业优先(SJF): 每次从任务队列选择预计时间最短的作业运行, 非抢占式, 性能最优, 平均周转时间最低, 吞吐量大, 不利于长作业, 会出现饥饿现象, 完全未考虑作业的优先级, 不能用于实时系统.</li><li>最短剩余时间优先: 首先选择预计时间最短的作业运行, 如果新作业服务时间小于当前作业的剩余时间, 抢占CPU.</li><li>高响应比优先: 在后备作业队列中选择响应比最高的, 非抢占式, 需要计算响应比耗费资源. <span class="math inline">\(响应比=1+\frac{等待时间}{服务时间}\)</span></li><li>时间片轮转(RR): 可以响应所有用户的请求, 适于分时系统.</li><li>多级反馈队列: UNIX使用的调度算法. 多个不同优先级的队列按照RR调度, 如果未完成就进入下一优先级, 新来进程可以根据优先级抢占. ## 死锁</li><li>原因: (1) 系统资源不足; (2) 进程推进顺序不当; (3) 资源分配不当.</li><li>必要条件: (1) 互斥访问: 一个资源每次只能被一个进程访问; (2) 占有并请求: 进程因请求资源阻塞时对已占有的资源保持不放; (3) 不可剥夺: 进程已经获取的资源不能被强制剥夺; (4) 循环等待: 多个进程间形成资源的循环等待关系.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interview </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Computer Science Roadmap</title>
      <link href="/2019/02/15/Computer%20Science%20Roadmap/"/>
      <url>/2019/02/15/Computer%20Science%20Roadmap/</url>
      
        <content type="html"><![CDATA[<p>有感于国内令人发指的CS教育（尤其某校的计算机基本就是一堆SB在自嗨自娱自乐而已），决定自学为主。 主要资源是四大的比较完整的课程：video+reading+lab</p><ul><li><a href="https://github.com/prakhar1989/awesome-courses">Awesome CS Courses</a></li><li><a href="https://conanhujinming.github.io/comments-for-awesome-courses/">名校公开课程评价网</a></li><li><a href="https://teachyourselfcs.com/">Teach Yourself Computer Science</a></li><li><a href="https://github.com/huangrt01/CS-notes">RT Huang的自学笔记</a></li><li><a href="https://learn-sys.github.io/">LEARNSYS</a></li><li><a href="https://github.com/ossu/computer-science">OSSU</a></li><li><a href="https://www.zhihu.com/question/308850392/answer/1324509357">如何学习设计模式？</a></li></ul><p>video比较费时间，而且我看视频总是来不及反应，好像不太适合我，所以一般只在看不懂材料时去针对性地看看视频。（当然一些讲得非常好的视频除外）</p><h2 id="basics">Basics</h2><ul><li><strong>Programming Languages</strong>: 精通C，熟悉1~2门(Java/Python/C++/Go)，了解一门(Haskell/Rust/)，掌握debug技巧</li><li><strong>Tools/Frameworks</strong>: 熟悉Linux系统的各项操作，最好看下源码，掌握Git等工具和框架</li><li><strong>Math</strong>: Linear Algebra/Probability/Statistics/Combinatorial Mathematics/Discrete Mathematics/Calculus 现用现学</li><li><strong>Core Courses</strong>: DS/Algorithms/OS/Organization/Network/DB</li></ul><h2 id="coding-interview">Coding Interview</h2><p>这方面<strong>很弱很弱</strong>，要勤奋练习，经常性在blog<strong>分析总结</strong>，<strong>穿透做过的题目及变种</strong>。</p><p>不要抱着可能撞到原题的心态去准备，反复练习提升自己的能力，需要有较多的训练量。</p><p><strong>Python快速过，Java也行，千万不要用C++浪费生命！！！</strong></p><p>复杂度最优，Google Doc/白纸练习，Bug-Free easy 5min medium 10~15min hard 15~20min</p><p>G实习：中文2轮：45min, 自我介绍+warm-up+hard, 1~2道medium题，白板 G校招：4轮（3中+1英），同上</p><ul><li><strong>Data structure</strong>：哈希表、堆、AVL、链表动手实现一遍，B树啥的都能扯扯~</li><li><strong>Algorithms</strong> <a href="https://leetcode-cn.com/problemset/lcof/">《剑指offer》</a> 67/67 <a href="https://leetcode-cn.com/problemset/lcci/">Cracking the Coding Interview</a> 40+/109 <a href="https://leetcode.com/">Leetcode</a> 310+/700+ <a href="https://www.nowcoder.com/">牛客笔试题</a></li><li><strong>System design</strong></li></ul><h2 id="projectspaper">Projects/Paper</h2><p><strong>选一个前沿的、不太讨厌的方向，研究研究，做点小项目</strong>，具体的方向可以参考<a href="http://csrankings.org/">CSRankings</a></p><ul><li>实习项目</li><li>学校大作业</li><li>兴趣项目：AutoML-ID, CMU 15-319, CS231n的3个小项目</li><li>开源项目</li></ul><h2 id="others">Others</h2><ul><li>GPA/数学/英语</li><li>比赛奖项</li><li>沟通交流能力</li><li>面试技巧 面经技巧只是锦上添花，最重要的还是及格的实力。nothing replaces hard work. 面经是告诉你这家公司面试的时候喜欢问哪些知识，而不是告诉你他们喜欢问哪些特定的问题。 更是一次需要充满着沟通与交流的谈话，让面试官认为他/她愿意成为你的同事</li></ul><p><strong>关于项目</strong> 背景主要包括场景、问题定义、需求、自己负责的部分扮演的角色等等。 指出项目中的困难点和解决方案</p><p><strong>关于paper</strong>：research的背景</p><p><strong>关于做题</strong> 1. 问清题目：数据范围是多少？这个数组的大小范围是多少？能不能给个样例？如果输入是这个，那输出应该是什么 2. 确认函数签名 3. 确认思路：修改输入数据 4. 确认corner case处理方式 5. 编码过程中不断交流 6. 主动测试：写完后不要急于告诉面试官写完了，手动跑一个样例：在屏幕上写出中间变量的当前取值，然后用鼠标光标告诉面试官现在程序跑到了哪一行代码，当前各个变量的取值是多少等等 7. 主动分析复杂度 8. 讨论算法的trade-off</p><p><strong>关于其它</strong> 先拿一些自己不target的公司练练手 虽然我不太懂，但是可以试着说一下 说出自己的insight:cache不友好 获得监督信息与正反馈 模拟面试</p><h2 id="how-to-learn">How to learn</h2><p>It is very important to take classes around my future work. It doesn't matter you learn it slowly, the most important part is that you <strong>take it seriously</strong> and build a <strong>solid foundation</strong>. 根据大佬们的经验，一门课大概要花150-300小时，每天2小时至少也要2个半月，所以千万千万不要着急，不要急于求成，总想着完成任务，多多反思自己到底学到了什么？真的透彻地理解了吗？又有多少内化到自身的知识体系？ 还有就是最好按照他们的课表时间上课，同时上的课最好不要超过2门（经过血泪实践，我只能1门单线程┭┮﹏┭┮，他们课程内容实在太充实了...，然后自己还有一堆屁事...）</p><p><strong>严格遵守学术规范</strong>，独立完成之后可以参考别人，修正自己。</p><p>Recently I've changed my way to learn new things. Previously I just wanted to understand the new things and tried to memorize all the details of a specific problem, or just translated others' materials into my words, which melted my brain and showed a very low efficiency. The reason why I learn things this way (passively) is mostly due to the Chinese's cramming education. But for me, heuristic teaching (actively) is more appropriate. The specific problem/model/algorithm is important, but the <strong>motivation</strong> is much more important. <strong>Everything has its motivation.</strong> So I decide to write my blogs with the following components:</p><ol type="1"><li>Motivation: What problems do we meet? Why propose this one?</li><li>Details: Mathematical derivation or tricky things.</li><li>Example: Use a handy example to illustrate.</li><li>Implementation: Code it out or use it to <strong>solve the problem</strong>.</li><li>Properties: <strong>When</strong> should/can we use the method? When shouldn't/can't? <strong>Why</strong>? What's the benefits and drawbacks if we use it?</li><li>Can we make some improvements on the off-the-shelf method for a specific problem?</li></ol><h2 id="todo-done-list">TODO &amp; DONE LIST</h2><p>Count the courses I've taken so far: 1. Introduction to Computer Science. Harvard University "This is CS 50". It should be the first class of CS rather than Haoqiang Tan's C Programming Language.</p><ol start="2" type="1"><li><p>Linear Algebra. Massachusetts Institute of Technology If you want to learn Linear Algebra, just follow this one and you'll be fine.</p></li><li><p>Mathematics for Computer Science. Massachusetts Institute of Technology Very interesting course but I only took several lectures. SAD~</p></li><li><p>Data Structures. University of California, Berkeley Strong recommend for Data Structure. You'll pick up Java from the interesting projects.</p></li><li><p>Introduction to Computer Systems. Carnegie Mellon University If you only want to take one system course, then select this one. But I haven't finished the whole lectures and labs. SAD again~</p></li><li><p>Introduction to Database Systems. Carnegie Mellon University Hard for me. Just finished lab1. I'll come back one day~</p></li><li><p>Machine Learning. Stanford University It's almost the first course I took after I found the true CS courses. But I forgot a lot. Sorry Andrew~</p></li><li><p>Positive Psychology. Harvard University When I start to be anxious or depressed I'll go and find the lecture. Tal is an amazing teacher and I'm sure you'll become happier.</p></li><li><p>Convolutional Neural Networks for Visual Recognition. Stanford University High quality, especially its readings.</p></li><li><p>Introduction to Computer Networking. Stanford University</p></li></ol><p>Lab is amazing!</p><p>CS144 + Go + CS5412 + 6.828 + 6.824 + 6.031 + SICP + 6.033 + CS262</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interview </tag>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nakamori Akina</title>
      <link href="/2018/11/18/Nakamori%20Akina/"/>
      <url>/2018/11/18/Nakamori%20Akina/</url>
      
        <content type="html"><![CDATA[<p>听过中森明菜的歌以后，一直想写点什么。恰好前段时间看过她的一个<a href="https://b23.tv/av13810011">访谈</a>，节目里已经39岁左右的明菜看着已经有些衰老，但是那份属于她的天真却好像要溢出屏幕。</p><p>节目里主持人问她为什么不用手机还在用电话卡，像是昭和时代穿越来的一样，她回答说自己没什么朋友去联系，一个人也不怎么去其他地方。看到这，我马上想到了《难破船》的热评：</p><p><img src="https://img2020.cnblogs.com/blog/1260581/202005/1260581-20200518233734136-841229768.jpg" /></p><p>你可能很难想象患有严重社交障碍的她当年是怎样的风姿绰约： 安利1：李健的《车站》大家应该都听过，翻唱的水准很高，不过我还是更喜欢<a href="https://b23.tv/av5270243">《駅》</a>，这是竹内玛莉亚专门为中森明菜创作的歌曲； 安利2：<a href="https://b23.tv/av7033508">《难破船》</a>的混剪视频，惊为天人。</p><p>上世纪70年代的日本乐坛是山口百惠的天下，然而在1980年，只有20岁的山口百惠突然宣布退出娱乐圈，随后与三浦友和结婚，如此退隐使得日本乐坛出现了一片巨大的空白。</p><p>中森明菜通过选秀节目出道，甜美的外表、独特的嗓音加上经纪公司的宣传，她迅速蹿红，被誉为继山口百惠之后新的“歌姬”。</p><p>80年代中期，凭借《ミ・アモーレ》和《DESIRE -情热-》，中森明菜连续两年获得日本唱片大赏。热情的舞台形象和不俗的唱功使得她成为了当时日本乐坛无可动摇的霸主，甚至被人称为“昭和时代的Lady Gaga”。后来据徐克回忆：《倩女幽魂》的聂小倩本来是邀请中森明菜扮演的，不过被拒绝了。</p><p>与在事业上的蒸蒸日上不同的是，她与近藤真彦的恋情危机开始逐渐爆发。近藤被誉为“日本第一渣男”，与松田圣子、梅艳芳等女星之间有着无数绯闻，媒体的报导更是推波助澜，中森明菜受到了很大的打击。也正是在这时候，她发布了单曲《难破船》，曲风开始变得哀伤深沉。</p><p>爱情的坎坷加上家人的天坑，中森明菜于1989年在近藤的住所割腕自杀，不过在送往医院后得救。在这一年的最后一天，为了挽救不断下滑的人气，近藤哄骗着明菜说会在记者会上宣布两人结婚，并特意在会场挂上了金屏风（婚礼常用装饰）。</p><p>傻傻的明菜出席之后，近藤在记者会上翻脸，把所有错误全部归因于明菜一个人，并且声称明菜的自杀与自己丝毫没有关系，也完全没有和明菜结婚的打算。而深陷爱情之中的明菜一个人承担了所有过错，在发布会上道歉。</p><p>之后近藤迅速与某富家女子成婚，并且利用权势限制明菜的发展。</p><p>回过头来再去听《难破船》，只觉得情到深处无怨尤：</p><blockquote><p>折れた翼広げたまま 展开折断的翅膀</p><p>あなたの上に落ちて行きたい</p><p>好想坠落在你身上</p><p>海の底へ沈んだなら 如果能沉入海底</p><p>泣きたいだけ抱いてほしい 好想你能拥抱我到尽情哭泣</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2018/05/19/Git/"/>
      <url>/2018/05/19/Git/</url>
      
        <content type="html"><![CDATA[<p>Git是版本控制系统的一种，用来维护多人协作项目的开发进程。</p><p>首先来看看单人开发的需求，最原始的VCS就在你我身边😂： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229105452773-1749378952.png" alt="image" /></p><p>假如在本地保存了多个版本，<code>HEAD</code>总是指向最新的版本： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229110354288-1305060165.png" alt="image" /></p><p>如果Version 3出现了严重的bug，可以回退到Version 2继续操作。但是如果Version 3包含了很多我们希望保留的change，就需要将其与Version 2比对，而后将这些changes拷贝到Version 2，一个好的VCS就需要支持<code>diff</code>操作帮程序员们找到两个版本之间的差异。</p><p>除此之外，为了防止本地机器故障，我们希望把本地的所有版本都在云上备份，这样即使你的设备原地爆炸，也不用担心被老板炒鱿鱼。 <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229111609065-1819873752.png" alt="image" /> 另外，你可以借助云的中转实现多地工作。当然偶尔也会出现一些小问题：假如现在云上和本地的稳定版本都是Version 5，你996下班后还想为公司做贡献，就在家里开始对Version 5一顿操作得到了Version 5L却忘了上传，第二天上班在公司又是对Version 5一通different的操作得到了Version 5D并上传，第二天下班从云上直接拉取Version 5D到本地，价值几个亿的Version 5L就再也找不到了...这里就需要<code>merge</code>操作来合并分支。</p><p>更重要的是，程序员们可以随时随地借助云上的备份进行协作，完成超大项目的撕逼工作。 为了保证出bug有人背锅，还需要记录who/when/what，VCS里叫做<code>annotate/blame</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git init  # 将该目录用Git管理</span><br><span class="line">git add haha.txt kaka.txt  # 将haha.txt，kaka.txt添加到仓库</span><br><span class="line">git commit -m &quot;upload&quot;  # 将文件提交到仓库，本次提交说明是upload</span><br><span class="line">git remote add origin git@github.com:EIMadrigal/Leetcode.git  # 将本地仓库与远程仓库关联</span><br><span class="line">git push -u origin main  # 将本地库的内容第一次推送到远程仓库</span><br><span class="line">git push origin main  # 以后的推送</span><br><span class="line">git rm -r --cached haha  # 删除文件夹haha</span><br><span class="line">git status  # 查看仓库的状态</span><br><span class="line">git diff  # 查看具体修改的内容</span><br><span class="line">git log  # 查看提交历史纪录</span><br><span class="line">git show  # 提交详情</span><br><span class="line">git checkout -- [file]  # 回退</span><br><span class="line">git reset --hard HEAD^  # HEAD表示当前版本，HEAD^表示上一个版本</span><br><span class="line">git reflog  # 查看命令的历史纪录</span><br></pre></td></tr></table></figure><p><a href="https://www.v2ex.com/t/786515">Windows怎么设置cmd/git bash走代理</a></p><h2 id="refs">Refs</h2><p><a href="https://missing.csail.mit.edu/2020/version-control/">Version Control (Git)</a> <a href="https://web.mit.edu/6.031/www/fa21/classes/05-version-control">Reading 5: Version Control</a></p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim Introduction</title>
      <link href="/2018/05/18/Vim%20Introduction/"/>
      <url>/2018/05/18/Vim%20Introduction/</url>
      
        <content type="html"><![CDATA[<h2 id="配置">配置</h2><p>安装原生态的Vim之后，界面是这样的： <img src="https://img2020.cnblogs.com/blog/1260581/202111/1260581-20211114103208063-1995368165.png" alt="image" /> 行号，没有；自动缩进，没有；括号匹配，没有.</p><p>为了我们使用的方便，进行一些基本的配置： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/vim/vimrc</span><br></pre></td></tr></table></figure> 进入配置界面: <img src="https://img2020.cnblogs.com/blog/1260581/202111/1260581-20211114103509711-1162498509.png" alt="image" /></p><p>可以删掉注释或添加新的配置: <img src="https://img2020.cnblogs.com/blog/1260581/202007/1260581-20200703081231240-949289722.png" alt="image" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set number  # 左侧显示行号</span><br><span class="line">set ts=4  # Tab键长度4个空格</span><br><span class="line">set expandtab  # 输入Tab自动转换为空格</span><br><span class="line">set cursorline  # 突出显示当前行</span><br><span class="line">set autoindent  # 自动缩进</span><br><span class="line">set showmatch  # 显示括号匹配</span><br><span class="line">syntax on</span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><p>Vim有三种模式：输入模式、命令模式和末行命令模式。 输入模式用来输入文字，命令模式用来下达编排文件的操作指令，末行命令模式用来进行文件存档、离开编辑器等操作: <img src="https://img2020.cnblogs.com/blog/1260581/202007/1260581-20200703081319488-2115051699.png" alt="image" /></p><ol type="1"><li>进入及离开 末行模式下： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:w  # 保存当前文件</span><br><span class="line">:x  # 保存文件并退出</span><br><span class="line">:q!  # 放弃此次编辑并强制退出</span><br><span class="line">:wq a.txt  # 保存退出</span><br><span class="line">:syntax on  # 一次性语法高亮</span><br><span class="line">:set number  # 一次性显示行号</span><br></pre></td></tr></table></figure></li><li>基本编辑 命令模式下按v进入visual模式： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d  # 选中目标文字段，按d(delete)剪切</span><br><span class="line">y  # 选中目标文字段，按y(yank)复制</span><br><span class="line">p  # 移动光标到目标位置，按p(put)粘贴</span><br></pre></td></tr></table></figure></li></ol><p>命令模式: hjkl和方向键类似,w可以按词向后移动,b按词向前移动,ctrl+f/ctrl+b与pageup/down功能一样 88gg直接跳到第88行 10j向下跳10行 10k向上跳10行 /Node高亮所有Node以后 按n后跳 按shift+n前跳 cc/dd/yy,按u取消操作 c2c删掉连续2行 p粘贴,按u取消操作</p><p>编辑模式: ctrl+n自动补全</p><p>插件: vim plug vim awesome</p><h2 id="中文输入">中文输入</h2><p>确保键盘输入系统选中fcitx，搜狗拼音输入法基于fcitx(Free Chinese Input Toy for X)框架，所以要选中fcitx： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229103046336-1159122227.png" alt="image" /></p><p>下载并安装搜狗输入法<a href="https://pinyin.sogou.com/linux/?r=pinyin">安装包</a>，切换到安装包所在的目录，改下安装包的名字，不然太长了不方便，我这里改为<code>ha.deb</code>，之后安装： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i ha.deb</span><br></pre></td></tr></table></figure></p><p>这里可能会提示依赖关系不满足(没提示的话跳过即可)： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229103335451-1935103123.png" alt="image" /></p><p>这是由于你的电脑可能没有安装有关fictx的内容，修复依赖关系： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -f</span><br></pre></td></tr></table></figure></p><p>顺利的话，桌面右上角会出现键盘图标： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229103537949-1620971579.png" alt="image" /> 可以看到搜狗输入法已经安装。</p><p>如果看不到搜狗的图标(尤其是第一次安装)，重启系统。 右键键盘图标，选择configure(或者搜fcitx configuration)： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229103624730-632103575.png" alt="image" /></p><p>你现在应该没有Sogou Pinyin这一项，点那个+号： <img src="https://img2020.cnblogs.com/blog/1260581/202112/1260581-20211229103646985-2704756.png" alt="image" /></p><p>取消Only Show Current Language前的对号，搜索Sogou Pinyin，点击OK。 现在，输入法应该已经安装好了。可以去桌面那个键盘图标看看了~</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISA Introduction</title>
      <link href="/2018/05/16/ISA%20Introduction/"/>
      <url>/2018/05/16/ISA%20Introduction/</url>
      
        <content type="html"><![CDATA[<p>介绍一下X86、MIPS、ARM三种指令集：</p><h2 id="x86指令集">X86指令集</h2><p>X86指令集是典型的CISC(Complex Instruction Set Computer)指令集。 X86指令集外部看起来是CISC指令集，事实上，它是采用类RISC内核，将部分复杂指令通过micro-op模式进行翻译成简单指令，再处理。 X86指令集的几个特性</p><ul><li>后向兼容 Intel每推出一代新处理器，总会兼容以前处理器的feature。这是由于长期积累的用户习惯和生态环境不容更改，否则没法赚钱了~ 后向兼容导致指令集愈发庞大、愈发复杂，同时功耗也会比较大，不过由于Intel超高的工艺水平，这都不是事。</li><li>变长指令 X86指令集采用变长指令(1-15Bytes)，一般每条指令为2-3Bytes。这样可以提高码字的利用率，但也使得译码以及读取指令时比较复杂，因为不知道一条指令应该读多长。</li><li>多种寻址方式 X86指令集可以采用多种寻址方式，比如立即寻址、寄存器寻址、寄存器相对寻址……</li><li>通用寄存器个数有限 X86-32的系统有8个通用寄存器，之后X86-64系统扩展到了16个。</li><li>指令执行时，最多只能有一个操作数在内存里，另一个操作数必为立即数或者寄存器。</li><li>由于后向兼容以及类RISC内核，导致功耗增加；同时，有很多复杂的指令利用率很低。</li></ul><h2 id="mips指令集">MIPS指令集</h2><p>MIPS指令集是典型的RISC(Reduced Instruction Set Computer)指令集。 精简指令集系统的设计思想就是：把复杂指令集中一些不常用的指令踢出指令集，这些复杂指令由日益强大的软件技术(编译)去实现，这样使得每个指令的流水线分段比较均匀，充分利用了处理器的流水线结构，提高了主频。 MIPS指令集以32个寄存器为中心，只能通过<strong>Load/Store</strong>指令访问内存，其余涉及计算的指令都从寄存器堆中读取数据，并且将计算结果写入寄存器堆中。 另外，MIPS指令的格式比较规整，所有指令长度一致，指令操作码都在固定的位置；寻址方式、对于每条指令的操作都很简单。 那么CISC与RISC的区别是什么呢？ 最大的区别在于：RISC只能通过<strong>Load/Store</strong>指令访问内存，而CISC指令集则没有这个限制。</p><h2 id="arm指令集">ARM指令集</h2><p>ARM指令集属于RISC指令集，每条指令32位。 ARM也有16位的压缩指令集，这是为了避免32位出现的码字浪费，提高运行速度推出的。</p><ul><li>ARM指令由于属于RISC指令集，一般完成的操作比较简单。程序员可以通过多条简单的指令组合实现一个复杂的操作。</li><li>同样的，ARM指令集也是只能通过<strong>Load/Store</strong>指令读取内存中的数据到寄存器，其余的指令只能对寄存器的操作数进行处理。</li><li>大多数指令长度相同，字段位置(尤其是操作码的位置)固定，且具有“条件执行”模式。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fourier Transform</title>
      <link href="/2018/05/06/Fourier%20Transform/"/>
      <url>/2018/05/06/Fourier%20Transform/</url>
      
        <content type="html"><![CDATA[<p>为了在统一框架里分析周期信号与非周期信号，可以给周期信号也建立傅里叶变换。 有两种方法求周期信号的傅里叶变换：</p><ol type="1"><li><p>利用傅里叶级数进行构造 对于周期信号<em><span class="math inline">\(x(t)\)</span></em>，其傅里叶级数展开式为： <span class="math display">\[x(t) = \sum_{k = -\infty}^{+\infty}a_ke^{jkw_0t}\]</span> 系数<span class="math inline">\(a_k\)</span>表示为： <img src="https://img-blog.csdn.net/20180510103617263?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0VJTWFkcmlnYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" /> 由于 <img src="https://img-blog.csdn.net/20180510104202240?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0VJTWFkcmlnYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" /> 说明周期性复指数信号的频谱是一个冲激，那么我们推广这个关系，可得： <img src="https://img-blog.csdn.net/20180510104448987?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0VJTWFkcmlnYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" /> 表明：周期信号的傅里叶变换由一系列等间隔的冲激函数线性组合而成，每个冲激分别位于信号各次谐波的频率处，其强度是傅里叶级数系数的<span class="math inline">\(2\pi\)</span>倍。</p></li><li><p>周期延拓 这种方法先将<span class="math inline">\(x(t)\)</span>在一个周期内截断，得信号<span class="math inline">\(x_T(t)\)</span>，求出<span class="math inline">\(x_T(t)\)</span>的傅里叶变换<span class="math inline">\(X_T(w)\)</span>，再对<span class="math inline">\(X_T(w)\)</span>周期延拓得<span class="math inline">\(X(w)\)</span>。 具体来说： 根据<span class="math inline">\(\delta\)</span>函数性质，有： <span class="math display">\[x(t) = x_T(t)*\sum_{k = -\infty}^{+\infty}\delta(t - kT)\]</span> 设周期冲激串<span class="math inline">\(\sum_{k = -\infty}^{+\infty}\delta(t - kT)\)</span>的傅里叶变换为<span class="math inline">\(F(w)\)</span>， 由时域卷积定理： <span class="math display">\[X(w) = X_T(w)F(w)\]</span> 又时域周期为T的周期冲激串的傅里叶变换在频域是一个周期为<span class="math inline">\(\frac{2\pi}{T}\)</span>的周期冲激串，即： <span class="math display">\[F(w) = \frac{2\pi}{T}\sum_{k = -\infty}^{+\infty}\delta(w - \frac{2\pi k}{T})\]</span> 故可得： <span class="math display">\[X(w) = \frac{2\pi}{T}X_T(w)\sum_{k = -\infty}^{+\infty}\delta(w - \frac{2\pi k}{T})\]</span> 也就是： <span class="math display">\[X(w) = w_0\sum_{k = -\infty}^{+\infty}X_T(kw_0)\delta(w - kw_0)\]</span> 我们对比两种方法得到的结果，可知： 周期信号傅里叶级数的系数<span class="math inline">\(a_k = \frac{1}{T}X_T(kw_0)\)</span></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Information Engineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Process/Thread Synchronization</title>
      <link href="/2018/04/28/Process%20&amp;%20Thread%20Synchronization/"/>
      <url>/2018/04/28/Process%20&amp;%20Thread%20Synchronization/</url>
      
        <content type="html"><![CDATA[<h2 id="进程同步">进程同步</h2><p>进程间同步和进程间通信没必要区分过于清楚，一般能通信的机制也能用于同步。进程间通信（IPC）有以下几种： - 信号量（semaphores）：低级通信方式，分为整型和记录型； - 共享内存（shared memory）：高级方式； - 消息队列（message passing）：高级方式； - 管道通信（pipe）：高级方式。 - 套接字（socket）：网络上不同进程通信 - 信号（signal）：</p><p>进程间同步方式有： - 信号量（semaphores）： - 管程（monitors）：</p><p>由于进程之间一般是独立的，所以进程同步机制大多不需要锁。</p><h2 id="线程同步">线程同步</h2><p>线程同步机制有以下几种：</p><ul><li>互斥锁（mutex）：排他性访问共享数据，用来保护临界区。某个线程加锁后，其它要加锁的线程将被阻塞，申请失败进入休眠，直到锁被释放。</li><li>读写锁（ReadWriteLock）：用于读者-写者问题，共有三种状态：不加锁、读模式加锁、写模式加锁。每次只有一个线程可以占用写模式的锁，但可以有多个线程占有读模式锁。</li><li>自旋锁（spinlock）：专为多处理器并发引入，不断循环测试锁的状态，申请线程不会休眠，忙等锁。</li><li>条件变量（condition variables）</li><li>信号量（semaphores）：有更多取值空间，实现更复杂的同步。</li></ul><p>信号量和PV原语的使用可归纳为三种情形： 1. 把信号量视为<strong>加锁标志位</strong>，其目的是为了实现对某个<strong>唯一的共享数据</strong>的<strong>互斥访问</strong>，如各个进程间的某共享变量，数据库中的某个记录。 共享数据的值与信号量本身的值没有直接关系，信号量的作用仅仅是作为加锁标志位。其特征是<strong>信号量初始值为1</strong>，然后在一个进程内部对它进行配对的PV操作。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">P(mutex);  <span class="comment">// mutex的初始值为1</span></span><br><span class="line">访问该共享数据;</span><br><span class="line">V(mutex);</span><br><span class="line">非临界区</span><br></pre></td></tr></table></figure></p><ol start="2" type="1"><li><p>把信号量视为某种类型的<strong>共享资源的剩余个数</strong>，目的是实现对这种类型的共享资源的访问，如各种I/O设备。 信号量的取值具有实际意义，即为<strong>空闲资源的个数</strong>。多个进程可以同时使用这种类型的资源，直到所有空闲资源均已用完。 其特征是信号量的<strong>初始值为<span class="math inline">\(N\geq 1\)</span></strong>，然后<strong>在一个进程内部对它进行配对的PV操作</strong>。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">P(resource);  <span class="comment">// resource的初始值为N</span></span><br><span class="line">使用该资源;</span><br><span class="line">V(resource);</span><br><span class="line">非临界区</span><br></pre></td></tr></table></figure></p></li><li><p>把信号量作为<strong>进程间同步</strong>的工具，利用它来设定<strong>两个进程在运行时的先后顺序</strong>。比如，它可以是某个共享资源的当前个数，但是由一个进程负责生成该资源，而另一个进程负责消费该资源，由此引发了两个进程间的先后顺序。 其特征是信号量的<strong>初始值为<span class="math inline">\(N\geq 0\)</span></strong>，然后<strong>在一个进程里对其使用V原语，增加资源个数，而在另一个进程里对其使用P原语，减少资源个数，</strong>从而实现两个进程之间的同步关系。 <img src="https://img2020.cnblogs.com/blog/1260581/202201/1260581-20220108183225108-1461792452.png" alt="image" /></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Process/Thread Synchronization</title>
      <link href="/2018/04/28/ProcessThread%20Synchronization/"/>
      <url>/2018/04/28/ProcessThread%20Synchronization/</url>
      
        <content type="html"><![CDATA[<h2 id="进程同步">进程同步</h2><p>进程间同步和进程间通信没必要区分过于清楚，一般能通信的机制也能用于同步。进程间通信（IPC）有以下几种： - 信号量（semaphores）：低级通信方式，分为整型和记录型； - 共享内存（shared memory）：高级方式； - 消息队列（message passing）：高级方式； - 管道通信（pipe）：高级方式。 - 套接字（socket）：网络上不同进程通信 - 信号（signal）：</p><p>进程间同步方式有： - 信号量（semaphores）： - 管程（monitors）：</p><p>由于进程之间一般是独立的，所以进程同步机制大多不需要锁。</p><h2 id="线程同步">线程同步</h2><p>线程同步机制有以下几种：</p><ul><li>互斥锁（mutex）：排他性访问共享数据，用来保护临界区。某个线程加锁后，其它要加锁的线程将被阻塞，申请失败进入休眠，直到锁被释放。</li><li>读写锁（ReadWriteLock）：用于读者-写者问题，共有三种状态：不加锁、读模式加锁、写模式加锁。每次只有一个线程可以占用写模式的锁，但可以有多个线程占有读模式锁。</li><li>自旋锁（spinlock）：专为多处理器并发引入，不断循环测试锁的状态，申请线程不会休眠，忙等锁。</li><li>条件变量（condition variables）</li><li>信号量（semaphores）：有更多取值空间，实现更复杂的同步。</li></ul><p>信号量和PV原语的使用可归纳为三种情形： 1. 把信号量视为<strong>加锁标志位</strong>，其目的是为了实现对某个<strong>唯一的共享数据</strong>的<strong>互斥访问</strong>，如各个进程间的某共享变量，数据库中的某个记录。 共享数据的值与信号量本身的值没有直接关系，信号量的作用仅仅是作为加锁标志位。其特征是<strong>信号量初始值为1</strong>，然后在一个进程内部对它进行配对的PV操作。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">P(mutex);  <span class="comment">// mutex的初始值为1</span></span><br><span class="line">访问该共享数据;</span><br><span class="line">V(mutex);</span><br><span class="line">非临界区</span><br></pre></td></tr></table></figure></p><ol start="2" type="1"><li><p>把信号量视为某种类型的<strong>共享资源的剩余个数</strong>，目的是实现对这种类型的共享资源的访问，如各种I/O设备。 信号量的取值具有实际意义，即为<strong>空闲资源的个数</strong>。多个进程可以同时使用这种类型的资源，直到所有空闲资源均已用完。 其特征是信号量的<strong>初始值为<span class="math inline">\(N\geq 1\)</span></strong>，然后<strong>在一个进程内部对它进行配对的PV操作</strong>。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">P(resource);  <span class="comment">// resource的初始值为N</span></span><br><span class="line">使用该资源;</span><br><span class="line">V(resource);</span><br><span class="line">非临界区</span><br></pre></td></tr></table></figure></p></li><li><p>把信号量作为<strong>进程间同步</strong>的工具，利用它来设定<strong>两个进程在运行时的先后顺序</strong>。比如，它可以是某个共享资源的当前个数，但是由一个进程负责生成该资源，而另一个进程负责消费该资源，由此引发了两个进程间的先后顺序。 其特征是信号量的<strong>初始值为<span class="math inline">\(N\geq 0\)</span></strong>，然后<strong>在一个进程里对其使用V原语，增加资源个数，而在另一个进程里对其使用P原语，减少资源个数，</strong>从而实现两个进程之间的同步关系。 <img src="https://img2020.cnblogs.com/blog/1260581/202201/1260581-20220108183225108-1461792452.png" alt="image" /></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Process Synchronization-Example 2</title>
      <link href="/2018/04/20/Process%20Synchronization-Example%202/"/>
      <url>/2018/04/20/Process%20Synchronization-Example%202/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>理发店有一位理发师，一把理发椅和N把供等候的顾客坐的椅子。 如果没有顾客，理发师在理发椅上睡觉； 当有一个顾客到来时，他必须先唤醒理发师； 如果顾客来时理发师正在理发，如果有空椅子，坐下等待，否则离开。 用PV操作解决上述问题中的同步和互斥关系。</p><h2 id="分析">分析</h2><p>将顾客看作N个生产者，理发师是1个消费者。 理发师和椅子是临界资源，故顾客间是互斥关系； 理发师和顾客是同步关系。</p><p>信号量设置： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Semaphore barberReady = <span class="number">0</span>  互斥量，只能取<span class="number">0</span>或<span class="number">1</span>  </span><br><span class="line">Semaphore accessSeat = <span class="number">1</span>  互斥量，如果为<span class="number">1</span>，表明椅子数可以增加或减少，相当于给椅子加锁，避免两个顾客同时坐一把椅子</span><br><span class="line">Semaphore num_wait = <span class="number">0</span>   坐在椅子上等待的顾客数</span><br><span class="line"><span class="keyword">int</span> seat_free    空着的椅子数目</span><br></pre></td></tr></table></figure> <a href="https://en.wikipedia.org/wiki/Sleeping_barber_problem">参考wiki</a></p><h2 id="解答">解答</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*顾客进程*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">customer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(accessSeat);  <span class="comment">//试图坐下</span></span><br><span class="line">        <span class="keyword">if</span>(seat_free &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            seat_free--;  <span class="comment">//坐下</span></span><br><span class="line">            V(num_wait);  <span class="comment">//试图唤醒理发师，</span></span><br><span class="line">            V(accessSeat);  <span class="comment">//不用再锁着椅子</span></span><br><span class="line">            P(baberReady); <span class="comment">//等待理发师ready</span></span><br><span class="line">            理发;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            V(accessSeat);  <span class="comment">//释放加在椅子上的锁</span></span><br><span class="line">            离开;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*理发师进程*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">barber</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(num_wait);   <span class="comment">//尝试获得一位顾客，如果没有，去睡觉</span></span><br><span class="line">        P(accessSeat);   <span class="comment">//尝试获得椅子锁，更改空闲椅子数目</span></span><br><span class="line">        seat_free++;    <span class="comment">//空椅子加1</span></span><br><span class="line">        V(baberReady);    <span class="comment">//理发师准备好了</span></span><br><span class="line">        V(accessSeat);    <span class="comment">//无需继续锁着椅子</span></span><br><span class="line">        理发;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Process Synchronization-Example 1</title>
      <link href="/2018/04/11/Process%20Synchronization-Example%201/"/>
      <url>/2018/04/11/Process%20Synchronization-Example%201/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>把学生和监考老师都看作进程，学生有N人，教师1人。考场门口每次只能进出一个人，进考场原则是先来先进。当N个学生都进入考场后，教师才能发卷子。学生交卷后可以离开考场，教师要等收上来全部卷子并封装卷子后才能离开考场。问： - 需要设置几个进程？ - 用PV操作解决上述问题的同步互斥关系。</p><h2 id="分析">分析</h2><blockquote><p>考场门口每次只能进出一个人</p></blockquote><p>考场门口是共享资源。</p><blockquote><p>当N个学生都进入考场后，教师才能发卷子 教师要等收上来全部卷子并封装卷子后才能离开考场</p></blockquote><p>这是两个同步行为。</p><p>信号量设置： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">door = <span class="number">1</span>    <span class="comment">//能否进出门口</span></span><br><span class="line">mutex1 = <span class="number">1</span></span><br><span class="line">mutex2 = <span class="number">1</span>   <span class="comment">//互斥信号量</span></span><br><span class="line">sr = <span class="number">0</span>   <span class="comment">//学生是否到齐</span></span><br><span class="line">eb = <span class="number">0</span>    <span class="comment">//考试开始</span></span><br><span class="line">eo = <span class="number">0</span>     <span class="comment">//考试结束</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num_stu = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num_paper = <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p><h2 id="解答">解答</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*学生进程*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">student</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    P(door);</span><br><span class="line">    进门;</span><br><span class="line">    V(door);</span><br><span class="line">    P(mutex1);  <span class="comment">//增加学生人数</span></span><br><span class="line">    num_stu++;</span><br><span class="line">    <span class="keyword">if</span>(num_stu == N)</span><br><span class="line">    V(sr);</span><br><span class="line">    V(mutex1);</span><br><span class="line">    P(eb);  <span class="comment">//等教师宣布开始考试</span></span><br><span class="line">    考试;</span><br><span class="line">    交卷;</span><br><span class="line">    P(mutex2);   <span class="comment">//增加试卷份数</span></span><br><span class="line">    num_paper++;</span><br><span class="line">    <span class="keyword">if</span>(num_paper == N)</span><br><span class="line">    V(eo);</span><br><span class="line">    V(mutex2);</span><br><span class="line">    P(door);</span><br><span class="line">    出门;</span><br><span class="line">    V(door);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*教师进程*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">teacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    P(door);</span><br><span class="line">    进门;</span><br><span class="line">    V(door);</span><br><span class="line">    P(sr);  <span class="comment">//最后一个学生唤醒老师</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= N;i++)</span><br><span class="line">    发卷子;</span><br><span class="line">    V(eb);     <span class="comment">//开始考试</span></span><br><span class="line">    P(eo);   <span class="comment">//等待考试结束</span></span><br><span class="line">    封装;</span><br><span class="line">    P(door);</span><br><span class="line">    出门;</span><br><span class="line">    V(door);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pattern Matching</title>
      <link href="/2018/04/02/Pattern%20Matching/"/>
      <url>/2018/04/02/Pattern%20Matching/</url>
      
        <content type="html"><![CDATA[<p>字符串模式匹配，即子串的定位操作。就是判断主串S中是否存在给定的子串，如果存在，那么返回子串在S中的位置，否则返回-1。 实现这种操作有两种算法：</p><h2 id="朴素的模式匹配算法">朴素的模式匹配算法</h2><p>设主串S长度为n，子串T长度为m。 对于主串的每个字符，做长度为m的循环，判断是否与子串匹配。 最好的情况就是一开始就匹配成功，时间复杂度<span class="math inline">\(O(1)\)</span>；最坏的情况就是每次匹配失败都是在T的最后一个元素，复杂度<span class="math inline">\(O(nm)\)</span>;平均情况复杂度<span class="math inline">\(O(n+m)\)</span>。 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (t.<span class="built_in">size</span>() &gt; s.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; s.<span class="built_in">size</span>() &amp;&amp; j &lt; t.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t[j] == s[i]) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            i = i - j + <span class="number">1</span>;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == t.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="kmp算法">KMP算法</h2><p>KMP主要分两步： 1. 进行T的自匹配，这一步关键在于得到Next数组，从T的第一位开始对自身匹配，在某一位置能匹配的最长长度即是当前位置Next值。 Next中的值是字符串的前缀集合与后缀集合的交集中最长元素的长度，将Next[0] = -1。 举例来说：T=ababaca，前缀为pre，后缀为post。 i = 1: 要处理"a", pre = "", post = "", Next[1] = 0; i = 2: 要处理"ab", pre = a, post = b, Next[2] = 0; i = 3: 要处理"aba", pre = {a, ab}, post = {ba, a}, Next[3] = 1; i = 4: 要处理"abab", pre = {a, ab, aba}, post = {bab, ab, b}, Next[4] = 2; i = 5: 要处理"ababa", pre = {a, ab, aba, abab}, post = {baba, aba, ba, a}, Next[5] = 3; ...... Next数组{-1，0，0，1，2，3，0，1} 2. S与T的匹配，这步的匹配和朴素匹配没有太大差异，只是主串S的指针不用回溯，而将子串的指针j回溯到Next[j]位置。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nextCompute</span><span class="params">(string t, vector&lt;<span class="keyword">int</span>&gt;&amp; next)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; t.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || t[i] == t[j]) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">next</span><span class="params">(t.size() + <span class="number">1</span>, <span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="built_in">nextCompute</span>(t, next);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; (<span class="keyword">int</span>)s.<span class="built_in">size</span>() &amp;&amp; j &lt; (<span class="keyword">int</span>)t.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || s[i] == t[j]) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == t.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="改进kmp算法">改进KMP算法</h2><p>主要改进了Next数组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 计算next数组 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">next_compute</span><span class="params">(<span class="keyword">char</span> T[], <span class="keyword">int</span>* next)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="built_in">strlen</span>(T)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">-1</span> == j || T[i] == T[j]) &#123;   <span class="comment">// 自匹配</span></span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            <span class="keyword">if</span> (T[i] != T[j])</span><br><span class="line">                next[i] = j;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next[i] = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];  <span class="comment">// 字符不同，j值回溯</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高级树</title>
      <link href="/2018/03/29/B%E6%A0%91%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
      <url>/2018/03/29/B%E6%A0%91%E7%BA%A2%E9%BB%91%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>为了避免BST退化为单链表，出现了AVL树，但终究是二叉树，难堪大用。</p><h2 id="b-trees">B-Trees</h2><p>B-Trees可以认为是一种泛化的BST，BST的每个结点只存储单个key，因此最好情况下只能将key space划分为两半，查询复杂度<span class="math inline">\(O(log_2n)\)</span>，为了进一步提高查询的效率，可以令每个结点存储任意数量的排好序的key，即所谓的多路查找树，每个结点的k个key可以将key space划分为k+1段，每个子树负责一段。</p><p>b阶B-Tree有着如下性质：</p><ul><li>所有叶子结点都处在同样的深度，即绝对平衡；</li><li>所有非叶结点都有着<span class="math inline">\(b-1\)</span>~<span class="math inline">\(2b-1\)</span>不等的key；</li><li>根结点最多有<span class="math inline">\(2b-1\)</span>个key。</li></ul><p>2阶B-Tree又叫2-3-4树，因为每个结点可以存储1-3个key，即可以有2-4个分叉，因此得名。</p><p><img src="https://img-blog.csdnimg.cn/18941cde817d4500892631525dfc53b4.png" alt="在这里插入图片描述" style="zoom:50%;" /></p><p>B-Tree的多key存储虽然会减小查询代价，但会导致插入和删除的代价增加，那么人们为啥还要用呢？本质上还是因为磁盘的访问太过耗时，访问磁盘数据的时间由3部分组成：</p><ol type="1"><li>磁头移动到相应的磁道所耗费的时间，大概10ms左右；</li><li>磁头旋转到相应的扇区所耗费的时间，大概4-5ms左右；</li><li>在扇区读写数据所耗费的时间，基本可以忽略。</li></ol><p>因此，任意一块扇区的访问（读或写）大致需要15ms，数据一般被排列为相邻扇区组成的磁盘块，B-Tree可以极大地减少访问次数，尽管使得磁盘块内的读写代价增加，但这些代价相比于磁盘访问耗时可以忽略不计。</p><p>可以通过一个例子感受下B-Tree和BST的差距：假设数据库有<span class="math inline">\(n=10^6\)</span>条记录，每条记录包含4B的key（如id等）和50B的信息，扇区大小512B，指针大小4B。</p><ul><li>如果选择BST来存储，每个结点共有62B（key+value+2*pointer），每个扇区可以存储8个记录，由于访问次序是随机的，因此不太可能接连访问同一个扇区内的记录（该情况磁头无需大规模移动，即访问2个记录的时间和访问1个记录相同），故访问每条记录均需要15ms，在<span class="math inline">\(n=10^6\)</span>条记录中查找任意一条记录最好情况下需要<span class="math inline">\(log_2n=20\)</span>次查询，共耗时0.3s左右。</li><li>如果选择4阶B-Tree来存储，每个结点共有414B（最多8个孩子+7个key+8个指针+1个整数记录当前结点的key数目），在<span class="math inline">\(n=10^6\)</span>条记录中查找任意一条记录需要<span class="math inline">\(log_4n=10\)</span>次结点查询（0.15s）以及在该结点内部查找对应记录的时间（可忽略），性能大大提升。</li></ul><h2 id="b-trees-1">B+ Trees</h2><p>B+ Tree的非叶结点只存储key，叶子结点存储(key, value)并且将所有叶子链成单链表。</p><h2 id="红黑树">红黑树</h2><p>是具有如下性质的BST：</p><ul><li>每个结点要么红要么黑；</li><li>根结点是黑；</li><li>红色结点不能有红色孩子；</li><li>所有从根到null的路径均含有相同数目的黑色结点。</li></ul><h2 id="reference">Reference</h2><p><a href="https://web.stanford.edu/class/archive/cs/cs166/cs166.1146/lectures/02/Small02.pdf">Balanced Trees</a> <a href="https://www.cs.utexas.edu/users/djimenez/utsa/cs3343/lecture16.html">B-Trees</a> <a href="https://web.stanford.edu/class/cs346/2015/notes/Blink.pdf">B+ Review</a></p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Damaged Hard Drive and Reinstall System</title>
      <link href="/2018/03/29/Damaged%20Hard%20Drive%20and%20Reinstall%20System/"/>
      <url>/2018/03/29/Damaged%20Hard%20Drive%20and%20Reinstall%20System/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由">缘由</h2><p>我是ACER笔记本，电脑从桌子上重摔，之后几天可以正常使用。可是后来看完视频准备退出的时候，发现所有页面已经卡死了，内存占用已经超过了80%，任务管理器没有反应，不得已按了电源键强制关机。 接着就再也启动不了，开机后一直显示No bootable device。 进入BIOS发现检测不到硬盘，估计是硬盘损坏了。啊~所有数据全都GG了！！！</p><h2 id="硬盘处理">硬盘处理</h2><p>先是用WinPE启动盘进入DiskGenius查看，没有我的HDD； 接着拆机，把硬盘重新插拔一下（也许是连接松了呢~），还是没用； 最后用硬盘盒子接到室友电脑，还是无法检测，这下彻底确认硬盘凉了； 拿去维修店，专业人员检测后说是磁头坏了，修复数据1T要800RMB，哇穷~ 换块新的要480，有点坑哦！ 还是自己买一块希捷的，加上各种优惠，不到300RMB。</p><h2 id="重装系统">重装系统</h2><p>第一次重装系统，折腾了很久，试错的细节记不清了，只说一下大体的步骤：</p><ol type="1"><li>插上新硬盘之后，先用WinPE启动，用DiskGenius将硬盘的MBR格式转为GPT格式，此时不用分区；</li><li>插上U盘启动盘，重启电脑，按F2进入BIOS，切记关掉Boot Security，否则系统无法安装；</li><li>如果出现安装程序无法创建新的系统分区，也无法定位现有系统分区的提示，建议如下处理：</li></ol><ol type="a"><li>在安装界面按Shift+F10进入命令行；<ol start="2" type="a"><li>输入diskpart启动磁盘程序，接着输入list disk查看电脑的硬盘；</li><li>按提示输入select disk 0，选中编号为0的磁盘，输入clean，删除硬盘所有数据；</li><li>输入convert GPT，转换格式，然后list partition，查看分区情况；</li><li>输入<code>create partition efi size*100</code>，创建EFI分区，大小100MB；</li><li>输入<code>create partition msr size*128</code>，创建MSR分区，大小128MB；</li><li>输入<code>create partition primary size*50000</code>，创建主分区，大小50GB。(建议这个系统盘分的大一点，否则以后清理很麻烦)；</li><li>输入list partition，查看分区情况。 P.s. 遇到这种情况，网上有的说可以重新插拔u盘启动盘，刷新；或者利用Windows自带的引导文件安装，具体的可以自己试试~</li></ol></li></ol><ol start="4" type="1"><li>下来一路Next，装系统即可。</li></ol><h2 id="再次遭殃">再次遭殃</h2><p>距离上次硬盘事件已经过去了一年半，当我开心地吃着零食追着剧，想把页面切到咪咕下几首歌时，电脑瞬间卡死。 后来反思了一下：一是我习惯长期不关电脑，只是进入睡眠状态，可能资源本身已经占用很多了；二是打开的页面太多，而且切换太过频繁。 强制关机后就Game Over了~（遇到这种情况，一定不要继续操作，等着吧！等到听不到硬盘的转动声再按电源键！！！） BIOS偶尔还能检测到HDD，经过专业人士检测：硬盘损坏，600RMB修复1T，好像比上次便宜了一些~ 一般机械硬盘保修期都是2年，所以就免费换了块新的~ 建议有条件的直接上固态吧，条件差点的可以固态装系统、机械存文件，没条件的就凑合用吧。。。 这次数据损失不大，吃了一堑还是有点用的，不过备份频率得改为一周一次了。 重装系统可以去老毛桃做个启动盘，把Windows的ISO镜像拷到U盘根目录，开机进入Win PE系统后，里面有个一键装机的软件~ 不过不知道是不是由于机型的原因，那个软件我的本用不了（垃圾Acer）： 所以就利用UltraISO把ISO镜像写入到U盘，插上之后开机，就会进入Windows的安装引导程序，分区也会在其中的一步引导你去做。 不同机型可能稍有差异，具体步骤可以参考<a href="https://blog.csdn.net/weixin_43175701/article/details/84349445">笔记本换硬盘装系统完整教程</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中途岛</title>
      <link href="/2018/03/29/%E4%B8%AD%E9%80%94%E5%B2%9B/"/>
      <url>/2018/03/29/%E4%B8%AD%E9%80%94%E5%B2%9B/</url>
      
        <content type="html"><![CDATA[<p>中途岛海战是第二次世界大战中太平洋战场的决定性战役，其地位堪比苏德战场的斯大林格勒战役以及中国战场的平安格勒战役。从小学至今看了无数的资料却仍然稀里糊涂，但愿这篇blog能解此心结。</p><h2 id="战役背景">战役背景</h2><p>1941年12月7日，日军偷袭位于夏威夷的珍珠港，以极其微小的代价重创美军太平洋舰队。不过这次偷袭并未对美军造成致命打击，尤其是美军航空母舰依然完好无损。为了逼迫美国进行谈判，日本决定彻底摧毁太平洋舰队的航母。为了将航母从珍珠港引诱出来，日军最终决定通过“围点打援”的战术在进攻中途岛的同时伏击并歼灭美军太平洋舰队，即所谓的MI行动（Midway）。</p><p>为了掩盖真实的战略意图，日军制定了极其复杂的佯攻计划，联合舰队司令长官山本五十六要求全程无线电静默。</p><figure><img src="https://weaponsandwarfare.files.wordpress.com/2020/06/midwaybattle.png" alt="" /><figcaption>1942: Japanese Options | Weapons and Warfare</figcaption></figure><p>最北边，代号AL的行动（Aleutian）试图占领阿留申群岛作为佯攻。声东击西，分散美军注意力</p><p>1942年6月4日凌晨所有战斗力量就位，一航舰由日本海军最强的4艘航母组成：苍龙号（舰载机52）、飞龙号（舰载机54）、加贺号（舰载机63）和赤城号（舰载机54），包括一航战和二航战。一航战包括加贺号和赤城号（旗舰），指挥官是南云忠一中将；二航战包括苍龙号和飞龙号（旗舰），指挥官山口多闻少将。4艘航母共有248架飞机以及12架侦察机，并且此时的飞行员毫无疑问都是顶尖选手。</p><p>第一航空舰队（一航舰）的主要任务是：夺取中途岛，摧毁机场及飞机，为登陆部队扫清障碍；寻找并消灭美军航母。</p><p>南云将一半的飞机装备对舰武器，防止美军航母出现。</p><p>战斗前夕，中途岛附近出现大量的敌人活动，由于侦察不足，南云认为美军航母仍然停留在珍珠港内，</p><p>0430战斗开始，一航舰准备空袭中途岛，10min内放飞了108架飞机，队长友永丈市大尉，同时7架侦察机起飞，搜索半径300海里，希望能覆盖右侧180度半圆形区间，而且气象条件也不好。这侦察确实有点形式主义了，南云认为航母在珍珠港没那么快出来。7架侦察机中从利根号巡洋舰上起飞的晚了30min，其余一切正常。</p><p>0532南云发现一航舰被一架美军PBY飞机发现，意味着中途岛的美军飞机可以提前起飞避免被偷袭炸毁，事实的确如此，美军轰炸机直奔一航舰，只有18架老式水牛+6架野猫负责守岛。</p><p>0620，留守的24架飞机在距离基地30海里拦截日机，被零战爆锤，13架水牛+2架野猫被击落，日军轰炸机得以轰炸中途岛，0634开始轰炸，美军防空火力击落11架日机，击伤14架，但是由于轰炸效果不佳，跑道损毁并不严重，因此友永丈市请示发动第二波空袭，彻底瘫痪中途岛。</p><p>0710，日军发现第一波（中途岛起飞共4波）美军飞机（6架TBF+4架B26），30架零式起飞迎战，美军鱼雷均未命中，5架TBF+2架B26被击落，一架受伤的美军飞机试图撞向南云旗舰，最终还是差一点点，日机损失2架零式。</p><p>此时南云收到第二次空袭的请求，南云可以选择让友永丈市先回航母补给再出动（大约需要60min，中途岛可能用这段时间重新组织防御）；也可以选择使用航母上的预备队前去空袭（但是山本要求不能出动这些飞机防止美军航母出现）。此时日军侦察机（正常起飞的6架基本达到航程极限）也并未发现美军航母的踪迹（云层帮了大忙，筑摩的侦察机没有看到），而且头上中途岛的飞机还在不断来袭，南云认为中途岛才是更大的威胁。0715，南云无视山本命令，开始在下层机库中将一航战的预备队的对舰武器（鱼雷）换成对地炸弹准备第二波次炸岛，俯冲轰炸机则直接在甲板上安装炸弹，这顿操作需要大约90min。0745，晚点的那架利根号放飞的侦察机报告发现10艘美国船队，南云吓傻了，命令停止换弹（此时有64架还未换装炸弹，换装了15架左右），开始分析研判，有2条路：其一是立即起飞所有飞机空袭（挂炸弹的去炸岛，挂鱼雷的去炸船）该船队，另一是等友永丈市降落后再去空袭船队。第一条不符合日本海军的作战规则，而且也没有多余的战斗机护航</p><p>由于无法分辨该船队到底是普通的运输队还是航母编队，并且按计划该侦察机不应该飞去船队的位置（中途岛以北240海里），也许偏航了或者是报告船队位置有误。如果真如报告，那么很可能是美军航母编队，这样可以从侧翼攻击日军编队，可是航母编队为什么逆风行驶呢（因此南云觉得大概率是普通船）？时间因素更加紧张，由于飞机燃油不够，友永丈市大概在0815到达并且最晚在0915降落，整个降落过程需要30min左右，因此最晚0845就要清空甲板准备让飞机降落，因此南云需要立即决定到底是发动空袭未知船队还是清空甲板迎接友永丈市。南云从0745到0845大约有60min时间，但是清空甲板需要45min（排队起飞所有飞机），但是最晚0800就要决定是否起飞，因此0745-0800中间的15min才是真正决策的时间。</p><p>0753，第二波16架无畏轰炸机接近日舰，日军派出9架零战，美军飞行员战斗经验欠缺，无一命中，8架被击落，日机损失1架零战。</p><p>在0745-0800的决策时间里，还在走位躲避轰炸，虽然也可以起飞但是风险较大，并且此时45min的起飞时间肯定会被拉长至60min甚至更长，意味着即使从0745开始起飞，0845也很可能无法全部放飞，友永丈市大概率就要坠海。显然此时先让友永降落再去攻击是风险更小的决策。还有，根据侦察机的报告，美军船队至少在1015才能攻击日舰，因此南云认为有充足的时间让友永降落后再去攻击。而且南云这个人是很保守的。</p><p>0810，第三波15架B17从高空投弹，IJN闪避，双方均无损失，飞龙号差点被命中，看下风骚的走位，通常在这种转弯下是无法放飞飞机的，只能等待攻击结束再放飞。</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Japanese_aircraft_carrier_Hiryu_maneuvers_to_avoid_bombs_on_4_June_1942_%28USAF-3725%29.jpg/1280px-Japanese_aircraft_carrier_Hiryu_maneuvers_to_avoid_bombs_on_4_June_1942_%28USAF-3725%29.jpg" alt="" /><figcaption>img</figcaption></figure><p>0827，中途岛的最后一波11架老式俯冲轰炸机很有自知之明，选择攻击战列舰榛名号，11架日机迎战，美机无一命中，损失2架。与此同时，一架美军潜艇鹦鹉螺号向雾岛号战列舰发射鱼雷后被日军发现，雾岛号躲过攻击，美军潜艇跑路，日军舰队岚号驱逐舰离开舰队追击潜艇，“带路岚”最终返航时带着企业号的美军轰炸机（麦克拉斯基少校）找到了日军航母。</p><p>0820侦察机报告船队可能是航母编队，机库里的飞机为了攻击船队，又将炸弹换回鱼雷，并且随意仍在机库中。但此时仍然不能直接放飞去进攻，因为友永还在天上，因此南云只能等待，别无他路。</p><p>0837美军攻击结束，南云开始回收飞机。0910，友永机队全部降落。不过最迷惑的是这段时间南云的编队竟然朝着美军船队行进，而且日机比美机飞得远啊，为什么要主动靠近呢？</p><p>接着，南云只需要等待45min放飞飞机攻击美军航母。</p><p>0918，美军航母编队15架VT-8鱼雷轰炸机来袭，被零战锤爆，最终全部被击落，30名机组成员只有1人幸存，日舰没有受到任何伤害。</p><p>0940，航母编队第二波14架VT-6来袭，此时停在甲板上的飞机重新补给完毕，满弹满油，事实证明日军侦察机报告的距离有误，美军完全可以打到日舰。9架被击落，日军损失1架零式。这2波攻击虽然没有造成伤害，但却拖延了日军放飞窗口。</p><p>1010，12架VT-3+6架野猫，著名的萨奇剪，损失1架野猫，击落4架零战，护航战斗机吸引了大部分零式，使得轰炸机可以抵近日军航母，在日军航母上空巡航的零式不断加入舰队东北方与美军VT-3和野猫低空狗斗，造成日军航母上方防空力量空虚，损失10架VT-3，7架零式。</p><p>一波又一波的饱和攻击并不是美军安排得当，恰恰相反是由于航母起飞混乱造成的结果，也算是因祸得福。</p><p>1020，50架俯冲轰炸机（好巧不巧，分别从企业和约克城起飞的2批编队飞了不同路线，并且约克城晚了30min，竟然同时到达）几乎没有受到零式拦截，这下南云好运不在，加贺被命中4发，并且引爆了甲板上的满油飞机，苍龙号同样如此，赤城号被仅投的1枚炸弹（贝斯特少校）洞穿机库，引爆机库内未被妥善放置的炸弹，只有飞龙（友永也在）幸存。</p><p>1030，南云将旗舰换为轻巡洋舰长良号，日军此时已经注定失败了。</p><p>山口多闻意识到自己是唯一地幸存者，开始反击。</p><p>1045，6架零式+18架俯冲轰炸机，</p><p>1050，山本获悉战况，召回阿留申群岛的隼鹰号航母和龙骧号航母，以及其它佯攻力量救援南云（都离太远了），但美军舰队向东行驶远离日军</p><p>1152，美军雷达侦测到日机编队，战斗机迎敌，重创日机编队</p><p>1210，日机剩余的轰炸机开始攻击约克城，4分钟后约克城瘫痪，日军13架轰炸机+5架零式被击落。</p><p>山口多闻自信的认为已经干掉了约克城，接下来就是1v2了，</p><p>1331，第二波10架轰炸机+6架零式友永带队，山口要求再干掉一艘，这样就可以1v1了，</p><p>1430，友永发现30海里外的一个航母编队，看起来完好无损，友永认为是企业或者大黄蜂，但是氪金损管使得这艘还是约克城😂，6架战斗机迎敌，王牌对王牌，萨奇击落友永，日机损失5架轰炸机+2架零式，美军损失4架战斗机，约克城再次被重创，1500舰长命令弃船，约克城很坚强地活到了第三天并差点被救活，最终被潜艇I168击沉，同时参与救援的哈曼号驱逐舰也被击沉。</p><p>1545，日机降落飞龙，随后得知仍然是1v2，飞龙撤退，准备休息后发动最后一波攻击。又一次迷惑操作，飞龙号一整个下午都在朝着美军行驶，可能杀红眼了吧。</p><p>此前1133由约克城放飞的侦察机在1430返程途中发现飞龙，</p><p>1705，企业号+约克城的24架飞机到达飞龙，13架巡逻日机贼累，由于没有雷达，直到美机抵近后才发现，4发入魂，15min后，大黄蜂机队抵达，飞龙沉没。</p><p>山本希望再赌一把，利用其它战舰在夜间和美军航母对决，南云被撤职，近藤信竹接替指挥，2330未发现美军航母，不久后全体撤退，</p><p>6月5日0255，山本取消MI计划。</p><h2 id="战前准备">战前准备</h2><p>约克城号 CV-5（旗舰）弗莱彻少将总指挥第17特混舰队，</p><p>斯普鲁恩斯少将指挥第16特混舰队（企业号 CV-6 + 大黄蜂号 CV-8），</p><h2 id="战争过程">战争过程</h2><figure><img src="https://upload.wikimedia.org/wikipedia/commons/5/5a/Battle_of_Midway%2C_Movement_of_Fleets_%28ENG%29.svg" alt="" /><figcaption>File:Battle of Midway, Movement of Fleets (ENG).svg - Wikimedia Commons</figcaption></figure><p>1941年5月，美军已经部分破译日军无线电密码（据说破译了80%以上），还通过经典的“AF缺乏淡水”得以确认日军的作战意图，因此总司令尼米兹上将决定设伏，美军航母自始至终都在中途岛东北部，在日军攻击中途岛时发起偷袭。约克城号3天被修复</p><p>5月28日，16特混舰队离开珍珠港，30日第17特混舰队离开珍珠港，6月2日混合设伏</p><p>珊瑚海海战列克星敦号航母沉没，约克城号被重创，日方祥凤号沉没，翔鹤号被重创，瑞鹤号也需要休整</p><h2 id="战果分析">战果分析</h2><p>日军：4艘航母，1艘巡洋舰（三隈号），250架✈</p><p>美军：1艘航母，1艘驱逐舰（哈曼号），144架✈</p><p>经此一战，大量的日军优秀飞行员、经验丰富的机械师被消耗殆尽，后期只能神风了，美军完全扭转了力量对比并开始在太平洋易守为攻，采取“跳岛战术”不断迫近日本本土。退一万步讲，即使日军勉强赢了中途岛，也几乎没有可能战胜美利坚，强大的工业制造能力背后蕴藏着巨大的战争潜力，后期战舰下饺子就是铁证，这绝非战争资源匮乏的日本可以匹敌的。</p><h2 id="reference">Reference</h2><p><a href="https://en.wikipedia.org/wiki/Battle_of_Midway">Battle of Midway</a> <a href="https://www.youtube.com/watch?v=Bd8_vO5zrjo">The Battle of Midway 1942: Told from the Japanese Perspective (1/3)</a> <a href="https://www.youtube.com/watch?v=BXjydKPcX60">The Battle of Midway: Hiryu's Counterstrike (2/3)</a> <a href="https://www.youtube.com/watch?v=WHO6xrSF7Sw">The Battle of Midway: The American Perspective and The Strategic Consequences of the Battle (3/3)</a> <a href="https://www.bilibili.com/video/BV1Rh411v7de">再来亿局能翻盘？中途岛海空大战</a></p>]]></content>
      
      
      <categories>
          
          <category> Arts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> History </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Damaged Hard Drive and Reinstall System</title>
      <link href="/2018/03/29/%E5%AE%8C%E7%BE%8E%E4%B8%BB%E4%B9%89/"/>
      <url>/2018/03/29/%E5%AE%8C%E7%BE%8E%E4%B8%BB%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由">缘由</h2><p>我是ACER笔记本，电脑从桌子上重摔，之后几天可以正常使用。可是后来看完视频准备退出的时候，发现所有页面已经卡死了，内存占用已经超过了80%，任务管理器没有反应，不得已按了电源键强制关机。 接着就再也启动不了，开机后一直显示No bootable device。 进入BIOS发现检测不到硬盘，估计是硬盘损坏了。啊~所有数据全都GG了！！！</p><h2 id="硬盘处理">硬盘处理</h2><p>先是用WinPE启动盘进入DiskGenius查看，没有我的HDD； 接着拆机，把硬盘重新插拔一下（也许是连接松了呢~），还是没用； 最后用硬盘盒子接到室友电脑，还是无法检测，这下彻底确认硬盘凉了； 拿去维修店，专业人员检测后说是磁头坏了，修复数据1T要800RMB，哇穷~ 换块新的要480，有点坑哦！ 还是自己买一块希捷的，加上各种优惠，不到300RMB。</p><h2 id="重装系统">重装系统</h2><p>第一次重装系统，折腾了很久，试错的细节记不清了，只说一下大体的步骤：</p><ol type="1"><li>插上新硬盘之后，先用WinPE启动，用DiskGenius将硬盘的MBR格式转为GPT格式，此时不用分区；</li><li>插上U盘启动盘，重启电脑，按F2进入BIOS，切记关掉Boot Security，否则系统无法安装；</li><li>如果出现安装程序无法创建新的系统分区，也无法定位现有系统分区的提示，建议如下处理： a-在安装界面按Shift+F10进入命令行； b-输入diskpart启动磁盘程序，接着输入list disk查看电脑的硬盘； c-按提示输入select disk 0，选中编号为0的磁盘，输入clean，删除硬盘所有数据； d-输入convert GPT，转换格式，然后list partition，查看分区情况； e-输入create partition efi size<em>100，创建EFI分区，大小100MB； f-输入create partition msr size</em>128，创建MSR分区，大小128MB； g-输入create partition primary size*50000，创建主分区，大小50GB。(建议这个系统盘分的大一点，否则以后清理很麻烦)； h-输入list partition，查看分区情况。 P.s. 遇到这种情况，网上有的说可以重新插拔u盘启动盘，刷新；或者利用Windows自带的引导文件安装，具体的可以自己试试~</li><li>下来一路Next，装系统即可。</li></ol><h2 id="再次遭殃">再次遭殃</h2><p>距离上次硬盘事件已经过去了一年半，当我开心地吃着零食追着剧，想把页面切到咪咕下几首歌时，电脑瞬间卡死。 后来反思了一下：一是我习惯长期不关电脑，只是进入睡眠状态，可能资源本身已经占用很多了；二是打开的页面太多，而且切换太过频繁。 强制关机后就Game Over了~（遇到这种情况，一定不要继续操作，等着吧！等到听不到硬盘的转动声再按电源键！！！） BIOS偶尔还能检测到HDD，经过专业人士检测：硬盘损坏，600RMB修复1T，好像比上次便宜了一些~ 一般机械硬盘保修期都是2年，所以就免费换了块新的~ 建议有条件的直接上固态吧，条件差点的可以固态装系统、机械存文件，没条件的就凑合用吧。。。 这次数据损失不大，吃了一堑还是有点用的，不过备份频率得改为一周一次了。 重装系统可以去老毛桃做个启动盘，把Windows的ISO镜像拷到U盘根目录，开机进入Win PE系统后，里面有个一键装机的软件~ 不过不知道是不是由于机型的原因，那个软件我的本用不了（垃圾Acer）： 所以就利用UltraISO把ISO镜像写入到U盘，插上之后开机，就会进入Windows的安装引导程序，分区也会在其中的一步引导你去做。 不同机型可能稍有差异，具体步骤可以参考<a href="https://blog.csdn.net/weixin_43175701/article/details/84349445">笔记本换硬盘装系统完整教程</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fibonacci Sequence</title>
      <link href="/2018/02/07/Fibonacci%20Sequence/"/>
      <url>/2018/02/07/Fibonacci%20Sequence/</url>
      
        <content type="html"><![CDATA[<h2 id="递归">递归</h2><p>斐波那契数列定义： <span class="math display">\[F(n)=\left\{\begin{matrix}0, n=0\\1, n=1\\F(n-1)+F(n-2), n&gt;1\end{matrix}\right.\]</span> 递归解法最直观，但是复杂度也最高：<span class="math inline">\(O(2^n)\)</span> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) <span class="comment">//细节可以处理非法输入</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> Fibonacci(n - <span class="number">1</span>) + Fibonacci(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 为了避免重复计算，可以将每一步计算得到的<span class="math inline">\(F(i)\)</span>存起来，这样的话时间复杂度降为<span class="math inline">\(O(n)\)</span>，但空间复杂度升为<span class="math inline">\(O(n)\)</span>。</p><h2 id="通项">通项</h2><p>求解通项的方法有好几种，下面展示一种用线性代数求解的方法： 斐波那契数列的递推公式是二阶差分方程，先用一点小技巧将其化为一阶： <span class="math display">\[\begin{cases}F_{k+2}=F_{k+1}+F_{k}\text{}\\F_{k+1}=F_{k+1}\text{}\\\end{cases}\]</span> 我们令<span class="math inline">\(u_k=\begin{bmatrix}F_{k+1}\\F_{k}\\\end{bmatrix}\)</span>，那么<span class="math inline">\(u_{k+1}=\begin{bmatrix}F_{k+2}\\F_{k+1}\\\end{bmatrix}=\begin{bmatrix}1\ 1\\1\ 0\\\end{bmatrix}u_k\)</span>。 矩阵<span class="math inline">\(A=\begin{bmatrix} 1\ 1\\1\ 0\\\end{bmatrix}\)</span>，令<span class="math inline">\(det(A-\lambda I)=\lambda^2-\lambda-1=0\)</span>，求得<span class="math inline">\(\lambda=\frac{1\pm \sqrt5}{2}\)</span>，对应于两个特征值的特征向量为<span class="math inline">\(x_1=\begin{bmatrix} \lambda_1\\ 1\\ \end{bmatrix},x_2=\begin{bmatrix} \lambda_2\\ 1\\ \end{bmatrix}\)</span>。 求得特征值和特征向量后，我们将<span class="math inline">\(u_0=\begin{bmatrix} F_1\\ F_0\\ \end{bmatrix}=\begin{bmatrix} 1\\ 0\\ \end{bmatrix}=c_1x_1+c_2x_2\)</span>，解得<span class="math inline">\(c_1=-\frac{1}{\sqrt5}, c_2=\frac{1}{\sqrt5}\)</span> 故 <span class="math inline">\(u_k=S\Lambda^{k}c=\begin{bmatrix} c_1\lambda_1^{k+1}+c_2\lambda_2^{k+1}\\c_1\lambda_1^{k}+c_2\lambda_2^{k}\\\end{bmatrix}\)</span> 所以通项公式可以表示为<span class="math inline">\(F(n)=C_1\lambda_1^n+C_2\lambda_2^n\)</span>。 故斐波那契数列的通项公式为：<span class="math inline">\(F(n)=\frac{1}{\sqrt5}[(\frac{1+\sqrt5}{2})^n-(\frac{1-\sqrt5}{2})^n]\)</span> 用公式求解的复杂度为<span class="math inline">\(O(1)\)</span>，但是由于无理数在计算机中的存储不是精确的，所以结果的精度很难保证。</p><h2 id="分治">分治</h2><p>通过矩阵形式的递推： <span class="math display">\[\begin{bmatrix}F(n)\\ F(n-1)\end{bmatrix}=\begin{bmatrix}1\  1\\ 1\  0\end{bmatrix}\begin{bmatrix}F(n-1)\\ F(n-2)\end{bmatrix}\]</span> 不断向下递推，可以得到： <span class="math display">\[\begin{bmatrix}F(n)\\ F(n-1)\end{bmatrix}={\begin{bmatrix}1\  1\\ 1\  0\end{bmatrix}}^{n-1}\begin{bmatrix}F(1)\\ F(0)\end{bmatrix}\]</span> 接下来就是求解矩阵的高次方，通过<a href="https://baike.baidu.com/item/快速幂/5500243">快速幂</a>可以在<span class="math inline">\(O(logn)\)</span>时间内进行计算： 整数的快速幂代码： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QuickPow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">            ans *= a;</span><br><span class="line">        a *= a;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归版本</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">raise</span><span class="params">(<span class="keyword">int</span> base, <span class="keyword">int</span> <span class="built_in">exp</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> half = raise(base, <span class="built_in">exp</span> / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span> % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> base * half * half;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> half * half;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>将传入的参数改为矩阵，乘法改为矩阵乘法，就可以得到矩阵快速幂： 以二阶矩阵为例，求解斐波那契数列： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Matrix</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">&#125;base,ans;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">multi</span><span class="params">(Matrix a, Matrix b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Matrix res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) <span class="comment">//第i行</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)  <span class="comment">//第j列</span></span><br><span class="line">        &#123;</span><br><span class="line">            res.a[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span>; k++)</span><br><span class="line">                res.a[i][j] += a.a[i][k] * b.a[k][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">QuickPow</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    base.a[<span class="number">0</span>][<span class="number">0</span>] = base.a[<span class="number">0</span>][<span class="number">1</span>] = base.a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    base.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;   <span class="comment">//初始化矩阵</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//结果矩阵初始化为单位阵</span></span><br><span class="line">    ans.a[<span class="number">0</span>][<span class="number">0</span>] = ans.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    ans.a[<span class="number">1</span>][<span class="number">0</span>] = ans.a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = multi(ans, base);</span><br><span class="line">        &#125;</span><br><span class="line">        base = multi(base, base);</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    QuickPow(n);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans.a[<span class="number">1</span>][<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="动态规划">动态规划</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;++i) &#123;</span><br><span class="line">        ans = a + b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="refs">Refs</h2><p><a href="https://www.zhihu.com/question/28062458/answer/39763094">斐波那契数列</a></p>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linear Algebra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hardware Introduction</title>
      <link href="/2018/01/20/Hardware%20Introduction/"/>
      <url>/2018/01/20/Hardware%20Introduction/</url>
      
        <content type="html"><![CDATA[<p>计算机硬件组成可以概括为下图： <img src="https://img-blog.csdnimg.cn/36738bbcb45545f2a2b98519a5d8f838.png" alt="img" /></p><h2 id="cpu">CPU</h2><p>CPU生产商主要是Intel和AMD。 Intel的产品主要有四种：</p><ul><li>Celeron(赛扬)：低端处理器</li><li>Pentium(奔腾)：比赛扬强，比酷睿弱</li><li>Xeon(至强)：属于服务器处理器 -E3 -E5 -E7</li><li>Core(酷睿) -i3 -i5 -i7</li></ul><p>AMD产品主要有三种： - FX系列：旗舰级多核处理器，AMD FX-8350 - Athlon(速龙)系列：入门级多核处理器，AMD Athlon X4 870K - A系列(APU)：A4，A6，A8，A10依次增强，集成了核心显卡，A10-7870K</p><p>以Core i7-4770K为例，Core系列i7级别第4代处理器，770代表性能编号，代数相同，编号越大，性能越好；K代表可超频。 笔记本CPU可能带有后缀U/Y/M等： - U：超低功耗笔记本CPU - Y：极低功耗笔记本CPU，比U更省电 - M：笔记本CPU</p><h2 id="显卡">显卡</h2><p>显卡分为核显和独显，核显集成于CPU内部，独显与CPU独立。 独显由GPU(图形处理器)和其他结构(显存，散热模块，PCB板等)组成。 目前生产GPU的主流厂商有三家：AMD，NVIDIA，Intel： - AMD(A卡) -HD系列：AMD HD 7970 x2---第7代高端(数字9代表高端，8中端，7低端)双核GPU，第三位7代表性能，3，5，7，9依次增强，x2代表双核心。 -R系列：AMD R9 M290X---R9：R系列高端；M：笔记本GPU；290X：2代高性能增强型GPU。</p><ul><li><p>NVIDIA(N卡) NVIDIA GTX 980 TI：X表示性能比GT系列更强；980：9代高性能；TI：增强型。</p></li><li><p>Intel(I卡) I卡都是核显，有两个系列： -HD系列：HD P4600---P：企业级；4600：代表性能，一般数字越大，性能越好。 -Iris(锐炬)系列：Iris Pro 5200---Pro：专业版；5200：代表性能，同上。</p></li></ul><p>显存：SDDR3，DDR3，GDDR3，GDDR5，同容量下性能依次增加。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rabbit and Turtle</title>
      <link href="/2016/10/15/Rabbit%20and%20Turtle/"/>
      <url>/2016/10/15/Rabbit%20and%20Turtle/</url>
      
        <content type="html"><![CDATA[<p>知乎上有这样一个问题：<a href="https://www.zhihu.com/question/22364825/answer/27255001">如果兔子都在拼命奔跑，是什么给了作为乌龟的你前进的动力？</a> 随着视野的不断开阔，我们难免怀疑自身前进的意义，曾经有很长一段时间我也深陷其中，直到看到余亦多先生的回答才有所感悟。</p><blockquote><p>我想每个人成长的经历中，都会或多或少曾被“自卑”的情绪所笼罩。我自己就是一个一直纠缠于“失败者”情结的人。</p><p>小时候因为痴肥，体育课上在同学面前抬不起头；搬到大城市，因为口音以及内向的性格，成为全班男生的出气筒；到了高中，进到全省理科实验班，才知道有些学霸的智商，是自己一辈子都无法企及的；初到美国，被身边同学认为是FOB，来自第三世界国家的乡巴佬；混进所谓的世界名校，看到身边一大波牛人，陷入平庸的沮丧；好不容易挤到纽约华尔街，看到名校中选出的所谓“精华”，才开始面对自己综合能力的缺失。</p><p>再回到香港，身边很多投行同事的业务能力与人际能力都远胜于我，只能在高压力的环境下苟延残喘；从乙方转到甲方开始做PE投资后，当跟索罗斯的儿子同桌斗智斗勇时，才能深刻体会“家学渊源”与“赢在起跑线”对一个人的意义。</p><p>由外资换到国企，开始看到体制内藏龙卧虎的主流玩家真正在玩什么，才意识到以前在边缘化外资环境下膨胀出各种不接地气的泡沫有多么可笑；随后开始接触到保险、银行以及其他金融领域的强人们，才知道在整个金融大版图中，十倍百倍于自己原来折腾的小池塘规模的资金，是在做什么。</p><p>分享了上面一大段，其实我想说的，最重要是如下几点：<br />1、就像talich老师在我去斯坦福念书以前赠我的那句话： 到了那儿，不用指望成为牛人，但至少你知道大海有多宽，能看到牛人在做什么，就够了。 对乌龟来讲，兔子存在的意义在于，至少让它知道这世界还有“兔子”的存在，以及兔子跑得有多快。盗用一句标语：让你看到更大的世界，这本身就是最大的意义。 2、兔子的存在，能够让乌龟直面自己就是一只乌龟这个事实。有勇气面对真实的自己，才能准确的定位自己的位置，也才能冷静的思考最适合自己的人生规划。而这，很多时候恰恰是最知易行难的事。 3、其实人越往后走，越会深刻体会到“阶级”的不可逾越性。愤青的时候会咒骂：“这世界为什么这么不公平。”可当你不再被荷尔蒙冲昏头脑时，也许你会开始思考：既然现在是这种情况，那我应该做点什么呢？当你绞尽心机让自己变得更好的同时，也许你也在让这个世界变得更好。</p><p>当樱木花道完成两万球的训练之后，他才知道流川枫有多厉害。 因为在一次比赛中，他看到流川枫的一个中投，这个起跳，这个姿势，这个弧线，竟然是他训练中想象的最完美的画面。 他很气，紧握这拳头，又不甘心，他问教练：这只狐狸是从什么时候开始打篮球的？ 安西教练：你应该好好的盯着流川枫的姿势，尽可能的模仿他，然后用3倍于他的训练量训练。这样，你才有可能在高中阶段之内超越他。 流川枫是那只兔子，幸运的是，樱木大概也是。</p><p>题主的困惑在于，樱木是个天才，尚且如此，而你，可能只是木暮。 李宗盛有一首歌，歌词是这样的： 最近比较烦比较烦比较烦，我看那远方怎么也看不到岸，那个后面还有一班天才追赶，写一首皆大欢喜的歌，是越来越难。</p><p>中年危机全都是这样的： 前面比你牛逼的人一眼都望不到岸，后面一班天才，比你有精力，比你聪明，比你学历高，比你国际化。而你，小孩成绩你得操心，老婆吃秘书的醋你也得操心，父母身体逐渐糟糕，最可怕的是你头发越来越少，身体越来越胖。</p><p>题主的困惑在于，比你天才的那个人，还比你努力；比题主的困惑更可怕的是，这个比你努力的天才，还比你年轻，比你有精力，这意味着，即使你想努力，你也没有那个精力努力。这就更无力了。</p><p>《蜗居》里面，宋思明想抢郭海藻。他比小贝成熟、稳重、懂得女孩的心思，样貌也不差；他有钱，有人际，能帮海藻解决问题。 若是宋思明未婚，小贝拿什么跟人家拼？小贝可能一辈子都达不到宋思明的高度，即使拼尽全力。 这才是无力感。 所以，我们能做什么。</p><p>如果你是个绝对的蠢蛋，那我只能说，请你尽量少的认识这个世界，最好一辈子不要离开你生活的地方，有时候知道的越多，越痛苦。当你看到那么繁华的城市，那么美丽的女孩，那么高端大气上档次的生活都与你无关的时候，更多的痛苦便会袭来。 如果你是个笨蛋，又不肯努力，那也请你知道少一点。 如果你不是个绝对的蠢蛋，又愿意努力，请你参考第一段安西老师的话：盯着那只兔子的每一个动作，能学多少学多少，然后以他三倍的训练量训练。</p><p>兔子一定会打盹的，即使牛逼如牛顿，30岁之后也再无建树；也不是每个像科比一样的天才，都知道洛杉矶凌晨四点的样子；你知道洛克李吗？火影里那个相信笨鸟先飞的热血少年，他说，努力的天才也是天才。 我曾经在一个答案中说过，勤奋，可能是这个世界上最被高估的美德。但是对于一个毫无天赋的人来讲，可以依仗的就只有勤奋了。</p><p>如此，即便你还是追不上兔子，你可以是乌龟里跑得快的那一个。 如此，即便你是木暮，你也能做成一个，每天都比昨天好一点点的木暮。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Predecessor </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
